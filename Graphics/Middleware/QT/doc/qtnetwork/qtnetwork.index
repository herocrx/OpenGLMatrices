<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE QDOCINDEX>
<INDEX url="http://qt-project.org/doc/qt-5.0/qtnetwork" title="Qt Network Reference Documentation" version="5.0.2">
    <namespace access="public" threadsafety="unspecified" status="commendable" name="" href="" location="">
        <page access="public" status="commendable" name="blockingfortuneclient" href="blockingfortuneclient.html" subtype="example" title="Blocking Fortune Client Example" fulltitle="Blocking Fortune Client Example" subtitle="" location="blockingfortuneclient.qdoc" module="QtNetwork" groups="examples-network">
            <page access="public" status="commendable" name="blockingfortuneclient/blockingclient.cpp" href="blockingfortuneclient-blockingclient-cpp.html" subtype="file" title="" fulltitle="blockingclient.cpp Example File" subtitle="blockingfortuneclient/blockingclient.cpp" location=""/>
            <page access="public" status="commendable" name="blockingfortuneclient/blockingclient.h" href="blockingfortuneclient-blockingclient-h.html" subtype="file" title="" fulltitle="blockingclient.h Example File" subtitle="blockingfortuneclient/blockingclient.h" location=""/>
            <page access="public" status="commendable" name="blockingfortuneclient/blockingfortuneclient.pro" href="blockingfortuneclient-blockingfortuneclient-pro.html" subtype="file" title="" fulltitle="blockingfortuneclient.pro Example File" subtitle="blockingfortuneclient/blockingfortuneclient.pro" location=""/>
            <page access="public" status="commendable" name="blockingfortuneclient/fortunethread.cpp" href="blockingfortuneclient-fortunethread-cpp.html" subtype="file" title="" fulltitle="fortunethread.cpp Example File" subtitle="blockingfortuneclient/fortunethread.cpp" location=""/>
            <page access="public" status="commendable" name="blockingfortuneclient/fortunethread.h" href="blockingfortuneclient-fortunethread-h.html" subtype="file" title="" fulltitle="fortunethread.h Example File" subtitle="blockingfortuneclient/fortunethread.h" location=""/>
            <page access="public" status="commendable" name="blockingfortuneclient/main.cpp" href="blockingfortuneclient-main-cpp.html" subtype="file" title="" fulltitle="main.cpp Example File" subtitle="blockingfortuneclient/main.cpp" location=""/>
        </page>
        <page access="public" status="commendable" name="broadcastreceiver" href="broadcastreceiver.html" subtype="example" title="Broadcast Receiver Example" fulltitle="Broadcast Receiver Example" subtitle="" location="broadcastreceiver.qdoc" module="QtNetwork" groups="examples-network">
            <page access="public" status="commendable" name="broadcastreceiver/broadcastreceiver.pro" href="broadcastreceiver-broadcastreceiver-pro.html" subtype="file" title="" fulltitle="broadcastreceiver.pro Example File" subtitle="broadcastreceiver/broadcastreceiver.pro" location=""/>
            <page access="public" status="commendable" name="broadcastreceiver/main.cpp" href="broadcastreceiver-main-cpp.html" subtype="file" title="" fulltitle="main.cpp Example File" subtitle="broadcastreceiver/main.cpp" location=""/>
            <page access="public" status="commendable" name="broadcastreceiver/receiver.cpp" href="broadcastreceiver-receiver-cpp.html" subtype="file" title="" fulltitle="receiver.cpp Example File" subtitle="broadcastreceiver/receiver.cpp" location=""/>
            <page access="public" status="commendable" name="broadcastreceiver/receiver.h" href="broadcastreceiver-receiver-h.html" subtype="file" title="" fulltitle="receiver.h Example File" subtitle="broadcastreceiver/receiver.h" location=""/>
        </page>
        <page access="public" status="commendable" name="broadcastsender" href="broadcastsender.html" subtype="example" title="Broadcast Sender Example" fulltitle="Broadcast Sender Example" subtitle="" location="broadcastsender.qdoc" module="QtNetwork" groups="examples-network">
            <page access="public" status="commendable" name="broadcastsender/broadcastsender.pro" href="broadcastsender-broadcastsender-pro.html" subtype="file" title="" fulltitle="broadcastsender.pro Example File" subtitle="broadcastsender/broadcastsender.pro" location=""/>
            <page access="public" status="commendable" name="broadcastsender/main.cpp" href="broadcastsender-main-cpp.html" subtype="file" title="" fulltitle="main.cpp Example File" subtitle="broadcastsender/main.cpp" location=""/>
            <page access="public" status="commendable" name="broadcastsender/sender.cpp" href="broadcastsender-sender-cpp.html" subtype="file" title="" fulltitle="sender.cpp Example File" subtitle="broadcastsender/sender.cpp" location=""/>
            <page access="public" status="commendable" name="broadcastsender/sender.h" href="broadcastsender-sender-h.html" subtype="file" title="" fulltitle="sender.h Example File" subtitle="broadcastsender/sender.h" location=""/>
        </page>
        <page access="public" status="commendable" name="fortuneclient" href="fortuneclient.html" subtype="example" title="Fortune Client Example" fulltitle="Fortune Client Example" subtitle="" location="fortuneclient.qdoc" module="QtNetwork" groups="examples-network">
            <page access="public" status="commendable" name="fortuneclient/client.cpp" href="fortuneclient-client-cpp.html" subtype="file" title="" fulltitle="client.cpp Example File" subtitle="fortuneclient/client.cpp" location=""/>
            <page access="public" status="commendable" name="fortuneclient/client.h" href="fortuneclient-client-h.html" subtype="file" title="" fulltitle="client.h Example File" subtitle="fortuneclient/client.h" location=""/>
            <page access="public" status="commendable" name="fortuneclient/fortuneclient.pro" href="fortuneclient-fortuneclient-pro.html" subtype="file" title="" fulltitle="fortuneclient.pro Example File" subtitle="fortuneclient/fortuneclient.pro" location=""/>
            <page access="public" status="commendable" name="fortuneclient/main.cpp" href="fortuneclient-main-cpp.html" subtype="file" title="" fulltitle="main.cpp Example File" subtitle="fortuneclient/main.cpp" location=""/>
        </page>
        <page access="public" status="commendable" name="fortuneserver" href="fortuneserver.html" subtype="example" title="Fortune Server Example" fulltitle="Fortune Server Example" subtitle="" location="fortuneserver.qdoc" module="QtNetwork" groups="examples-network">
            <page access="public" status="commendable" name="fortuneserver/fortuneserver.pro" href="fortuneserver-fortuneserver-pro.html" subtype="file" title="" fulltitle="fortuneserver.pro Example File" subtitle="fortuneserver/fortuneserver.pro" location=""/>
            <page access="public" status="commendable" name="fortuneserver/main.cpp" href="fortuneserver-main-cpp.html" subtype="file" title="" fulltitle="main.cpp Example File" subtitle="fortuneserver/main.cpp" location=""/>
            <page access="public" status="commendable" name="fortuneserver/server.cpp" href="fortuneserver-server-cpp.html" subtype="file" title="" fulltitle="server.cpp Example File" subtitle="fortuneserver/server.cpp" location=""/>
            <page access="public" status="commendable" name="fortuneserver/server.h" href="fortuneserver-server-h.html" subtype="file" title="" fulltitle="server.h Example File" subtitle="fortuneserver/server.h" location=""/>
        </page>
        <page access="public" status="commendable" name="googlesuggest" href="googlesuggest.html" subtype="example" title="Google Suggest Example" fulltitle="Google Suggest Example" subtitle="" location="googlesuggest.qdoc" module="QtNetwork" groups="examples-network">
            <contents name="gsuggestcompletion-class-declaration" title="GSuggestCompletion Class Declaration" level="1"/>
            <contents name="gsuggestcompletion-class-implementation" title="GSuggestCompletion Class Implementation" level="1"/>
            <contents name="searchbox-class-declaration" title="SearchBox Class Declaration" level="1"/>
            <contents name="searchbox-class-implementation" title="SearchBox Class Implementation" level="1"/>
            <page access="public" status="commendable" name="googlesuggest/googlesuggest.cpp" href="googlesuggest-googlesuggest-cpp.html" subtype="file" title="" fulltitle="googlesuggest.cpp Example File" subtitle="googlesuggest/googlesuggest.cpp" location=""/>
            <page access="public" status="commendable" name="googlesuggest/googlesuggest.h" href="googlesuggest-googlesuggest-h.html" subtype="file" title="" fulltitle="googlesuggest.h Example File" subtitle="googlesuggest/googlesuggest.h" location=""/>
            <page access="public" status="commendable" name="googlesuggest/googlesuggest.pro" href="googlesuggest-googlesuggest-pro.html" subtype="file" title="" fulltitle="googlesuggest.pro Example File" subtitle="googlesuggest/googlesuggest.pro" location=""/>
            <page access="public" status="commendable" name="googlesuggest/main.cpp" href="googlesuggest-main-cpp.html" subtype="file" title="" fulltitle="main.cpp Example File" subtitle="googlesuggest/main.cpp" location=""/>
            <page access="public" status="commendable" name="googlesuggest/searchbox.cpp" href="googlesuggest-searchbox-cpp.html" subtype="file" title="" fulltitle="searchbox.cpp Example File" subtitle="googlesuggest/searchbox.cpp" location=""/>
            <page access="public" status="commendable" name="googlesuggest/searchbox.h" href="googlesuggest-searchbox-h.html" subtype="file" title="" fulltitle="searchbox.h Example File" subtitle="googlesuggest/searchbox.h" location=""/>
        </page>
        <page access="public" status="commendable" name="http" href="http.html" subtype="example" title="HTTP Example" fulltitle="HTTP Example" subtitle="" location="http.qdoc" module="QtNetwork" groups="examples-network">
            <page access="public" status="commendable" name="http/authenticationdialog.ui" href="http-authenticationdialog-ui.html" subtype="file" title="" fulltitle="authenticationdialog.ui Example File" subtitle="http/authenticationdialog.ui" location=""/>
            <page access="public" status="commendable" name="http/http.pro" href="http-http-pro.html" subtype="file" title="" fulltitle="http.pro Example File" subtitle="http/http.pro" location=""/>
            <page access="public" status="commendable" name="http/httpwindow.cpp" href="http-httpwindow-cpp.html" subtype="file" title="" fulltitle="httpwindow.cpp Example File" subtitle="http/httpwindow.cpp" location=""/>
            <page access="public" status="commendable" name="http/httpwindow.h" href="http-httpwindow-h.html" subtype="file" title="" fulltitle="httpwindow.h Example File" subtitle="http/httpwindow.h" location=""/>
            <page access="public" status="commendable" name="http/main.cpp" href="http-main-cpp.html" subtype="file" title="" fulltitle="main.cpp Example File" subtitle="http/main.cpp" location=""/>
        </page>
        <page access="public" status="commendable" name="loopback" href="loopback.html" subtype="example" title="Loopback Example" fulltitle="Loopback Example" subtitle="" location="loopback.qdoc" module="QtNetwork" groups="examples-network">
            <page access="public" status="commendable" name="loopback/dialog.cpp" href="loopback-dialog-cpp.html" subtype="file" title="" fulltitle="dialog.cpp Example File" subtitle="loopback/dialog.cpp" location=""/>
            <page access="public" status="commendable" name="loopback/dialog.h" href="loopback-dialog-h.html" subtype="file" title="" fulltitle="dialog.h Example File" subtitle="loopback/dialog.h" location=""/>
            <page access="public" status="commendable" name="loopback/loopback.pro" href="loopback-loopback-pro.html" subtype="file" title="" fulltitle="loopback.pro Example File" subtitle="loopback/loopback.pro" location=""/>
            <page access="public" status="commendable" name="loopback/main.cpp" href="loopback-main-cpp.html" subtype="file" title="" fulltitle="main.cpp Example File" subtitle="loopback/main.cpp" location=""/>
        </page>
        <page access="public" status="commendable" name="multicastreceiver" href="multicastreceiver.html" subtype="example" title="Multicast Receiver Example" fulltitle="Multicast Receiver Example" subtitle="" location="multicastreceiver.qdoc" module="QtNetwork" groups="examples-network">
            <page access="public" status="commendable" name="multicastreceiver/main.cpp" href="multicastreceiver-main-cpp.html" subtype="file" title="" fulltitle="main.cpp Example File" subtitle="multicastreceiver/main.cpp" location=""/>
            <page access="public" status="commendable" name="multicastreceiver/multicastreceiver.pro" href="multicastreceiver-multicastreceiver-pro.html" subtype="file" title="" fulltitle="multicastreceiver.pro Example File" subtitle="multicastreceiver/multicastreceiver.pro" location=""/>
            <page access="public" status="commendable" name="multicastreceiver/receiver.cpp" href="multicastreceiver-receiver-cpp.html" subtype="file" title="" fulltitle="receiver.cpp Example File" subtitle="multicastreceiver/receiver.cpp" location=""/>
            <page access="public" status="commendable" name="multicastreceiver/receiver.h" href="multicastreceiver-receiver-h.html" subtype="file" title="" fulltitle="receiver.h Example File" subtitle="multicastreceiver/receiver.h" location=""/>
        </page>
        <page access="public" status="commendable" name="multicastsender" href="multicastsender.html" subtype="example" title="Multicast Sender Example" fulltitle="Multicast Sender Example" subtitle="" location="multicastsender.qdoc" module="QtNetwork" groups="examples-network">
            <page access="public" status="commendable" name="multicastsender/main.cpp" href="multicastsender-main-cpp.html" subtype="file" title="" fulltitle="main.cpp Example File" subtitle="multicastsender/main.cpp" location=""/>
            <page access="public" status="commendable" name="multicastsender/multicastsender.pro" href="multicastsender-multicastsender-pro.html" subtype="file" title="" fulltitle="multicastsender.pro Example File" subtitle="multicastsender/multicastsender.pro" location=""/>
            <page access="public" status="commendable" name="multicastsender/sender.cpp" href="multicastsender-sender-cpp.html" subtype="file" title="" fulltitle="sender.cpp Example File" subtitle="multicastsender/sender.cpp" location=""/>
            <page access="public" status="commendable" name="multicastsender/sender.h" href="multicastsender-sender-h.html" subtype="file" title="" fulltitle="sender.h Example File" subtitle="multicastsender/sender.h" location=""/>
        </page>
        <page access="public" status="commendable" name="network-chat" href="network-chat.html" subtype="example" title="Network Chat Example" fulltitle="Network Chat Example" subtitle="" location="network-chat.qdoc" module="QtNetwork" groups="examples-network">
            <page access="public" status="commendable" name="network-chat/chatdialog.cpp" href="network-chat-chatdialog-cpp.html" subtype="file" title="" fulltitle="chatdialog.cpp Example File" subtitle="network-chat/chatdialog.cpp" location=""/>
            <page access="public" status="commendable" name="network-chat/chatdialog.h" href="network-chat-chatdialog-h.html" subtype="file" title="" fulltitle="chatdialog.h Example File" subtitle="network-chat/chatdialog.h" location=""/>
            <page access="public" status="commendable" name="network-chat/chatdialog.ui" href="network-chat-chatdialog-ui.html" subtype="file" title="" fulltitle="chatdialog.ui Example File" subtitle="network-chat/chatdialog.ui" location=""/>
            <page access="public" status="commendable" name="network-chat/client.cpp" href="network-chat-client-cpp.html" subtype="file" title="" fulltitle="client.cpp Example File" subtitle="network-chat/client.cpp" location=""/>
            <page access="public" status="commendable" name="network-chat/client.h" href="network-chat-client-h.html" subtype="file" title="" fulltitle="client.h Example File" subtitle="network-chat/client.h" location=""/>
            <page access="public" status="commendable" name="network-chat/connection.cpp" href="network-chat-connection-cpp.html" subtype="file" title="" fulltitle="connection.cpp Example File" subtitle="network-chat/connection.cpp" location=""/>
            <page access="public" status="commendable" name="network-chat/connection.h" href="network-chat-connection-h.html" subtype="file" title="" fulltitle="connection.h Example File" subtitle="network-chat/connection.h" location=""/>
            <page access="public" status="commendable" name="network-chat/main.cpp" href="network-chat-main-cpp.html" subtype="file" title="" fulltitle="main.cpp Example File" subtitle="network-chat/main.cpp" location=""/>
            <page access="public" status="commendable" name="network-chat/network-chat.pro" href="network-chat-network-chat-pro.html" subtype="file" title="" fulltitle="network-chat.pro Example File" subtitle="network-chat/network-chat.pro" location=""/>
            <page access="public" status="commendable" name="network-chat/peermanager.cpp" href="network-chat-peermanager-cpp.html" subtype="file" title="" fulltitle="peermanager.cpp Example File" subtitle="network-chat/peermanager.cpp" location=""/>
            <page access="public" status="commendable" name="network-chat/peermanager.h" href="network-chat-peermanager-h.html" subtype="file" title="" fulltitle="peermanager.h Example File" subtitle="network-chat/peermanager.h" location=""/>
            <page access="public" status="commendable" name="network-chat/server.cpp" href="network-chat-server-cpp.html" subtype="file" title="" fulltitle="server.cpp Example File" subtitle="network-chat/server.cpp" location=""/>
            <page access="public" status="commendable" name="network-chat/server.h" href="network-chat-server-h.html" subtype="file" title="" fulltitle="server.h Example File" subtitle="network-chat/server.h" location=""/>
        </page>
        <page access="public" status="commendable" name="network/download" href="network-download.html" subtype="example" title="Network Download Example" fulltitle="Network Download Example" subtitle="" location="network-download.qdoc" module="QtNetwork" groups="examples-network"/>
        <page access="public" status="commendable" name="network/downloadmanager" href="network-downloadmanager.html" subtype="example" title="Network Download Manager Example" fulltitle="Network Download Manager Example" subtitle="" location="network-downloadmanager.qdoc" module="QtNetwork" groups="examples-network"/>
        <page access="public" status="commendable" name="securesocketclient" href="securesocketclient.html" subtype="example" title="Secure Socket Client Example" fulltitle="Secure Socket Client Example" subtitle="" location="securesocketclient.qdoc" module="QtNetwork" groups="examples-network">
            <page access="public" status="commendable" name="securesocketclient/certificateinfo.cpp" href="securesocketclient-certificateinfo-cpp.html" subtype="file" title="" fulltitle="certificateinfo.cpp Example File" subtitle="securesocketclient/certificateinfo.cpp" location=""/>
            <page access="public" status="commendable" name="securesocketclient/certificateinfo.h" href="securesocketclient-certificateinfo-h.html" subtype="file" title="" fulltitle="certificateinfo.h Example File" subtitle="securesocketclient/certificateinfo.h" location=""/>
            <page access="public" status="commendable" name="securesocketclient/certificateinfo.ui" href="securesocketclient-certificateinfo-ui.html" subtype="file" title="" fulltitle="certificateinfo.ui Example File" subtitle="securesocketclient/certificateinfo.ui" location=""/>
            <page access="public" status="commendable" name="securesocketclient/main.cpp" href="securesocketclient-main-cpp.html" subtype="file" title="" fulltitle="main.cpp Example File" subtitle="securesocketclient/main.cpp" location=""/>
            <page access="public" status="commendable" name="securesocketclient/securesocketclient.pro" href="securesocketclient-securesocketclient-pro.html" subtype="file" title="" fulltitle="securesocketclient.pro Example File" subtitle="securesocketclient/securesocketclient.pro" location=""/>
            <page access="public" status="commendable" name="securesocketclient/securesocketclient.qrc" href="securesocketclient-securesocketclient-qrc.html" subtype="file" title="" fulltitle="securesocketclient.qrc Example File" subtitle="securesocketclient/securesocketclient.qrc" location=""/>
            <page access="public" status="commendable" name="securesocketclient/sslclient.cpp" href="securesocketclient-sslclient-cpp.html" subtype="file" title="" fulltitle="sslclient.cpp Example File" subtitle="securesocketclient/sslclient.cpp" location=""/>
            <page access="public" status="commendable" name="securesocketclient/sslclient.h" href="securesocketclient-sslclient-h.html" subtype="file" title="" fulltitle="sslclient.h Example File" subtitle="securesocketclient/sslclient.h" location=""/>
            <page access="public" status="commendable" name="securesocketclient/sslclient.ui" href="securesocketclient-sslclient-ui.html" subtype="file" title="" fulltitle="sslclient.ui Example File" subtitle="securesocketclient/sslclient.ui" location=""/>
            <page access="public" status="commendable" name="securesocketclient/sslerrors.ui" href="securesocketclient-sslerrors-ui.html" subtype="file" title="" fulltitle="sslerrors.ui Example File" subtitle="securesocketclient/sslerrors.ui" location=""/>
        </page>
        <page access="public" status="commendable" name="threadedfortuneserver" href="threadedfortuneserver.html" subtype="example" title="Threaded Fortune Server Example" fulltitle="Threaded Fortune Server Example" subtitle="" location="threadedfortuneserver.qdoc" module="QtNetwork" groups="examples-network">
            <page access="public" status="commendable" name="threadedfortuneserver/dialog.cpp" href="threadedfortuneserver-dialog-cpp.html" subtype="file" title="" fulltitle="dialog.cpp Example File" subtitle="threadedfortuneserver/dialog.cpp" location=""/>
            <page access="public" status="commendable" name="threadedfortuneserver/dialog.h" href="threadedfortuneserver-dialog-h.html" subtype="file" title="" fulltitle="dialog.h Example File" subtitle="threadedfortuneserver/dialog.h" location=""/>
            <page access="public" status="commendable" name="threadedfortuneserver/fortuneserver.cpp" href="threadedfortuneserver-fortuneserver-cpp.html" subtype="file" title="" fulltitle="fortuneserver.cpp Example File" subtitle="threadedfortuneserver/fortuneserver.cpp" location=""/>
            <page access="public" status="commendable" name="threadedfortuneserver/fortuneserver.h" href="threadedfortuneserver-fortuneserver-h.html" subtype="file" title="" fulltitle="fortuneserver.h Example File" subtitle="threadedfortuneserver/fortuneserver.h" location=""/>
            <page access="public" status="commendable" name="threadedfortuneserver/fortunethread.cpp" href="threadedfortuneserver-fortunethread-cpp.html" subtype="file" title="" fulltitle="fortunethread.cpp Example File" subtitle="threadedfortuneserver/fortunethread.cpp" location=""/>
            <page access="public" status="commendable" name="threadedfortuneserver/fortunethread.h" href="threadedfortuneserver-fortunethread-h.html" subtype="file" title="" fulltitle="fortunethread.h Example File" subtitle="threadedfortuneserver/fortunethread.h" location=""/>
            <page access="public" status="commendable" name="threadedfortuneserver/main.cpp" href="threadedfortuneserver-main-cpp.html" subtype="file" title="" fulltitle="main.cpp Example File" subtitle="threadedfortuneserver/main.cpp" location=""/>
            <page access="public" status="commendable" name="threadedfortuneserver/threadedfortuneserver.pro" href="threadedfortuneserver-threadedfortuneserver-pro.html" subtype="file" title="" fulltitle="threadedfortuneserver.pro Example File" subtitle="threadedfortuneserver/threadedfortuneserver.pro" location=""/>
        </page>
        <page access="public" status="commendable" name="torrent" href="torrent.html" subtype="example" title="Torrent Example" fulltitle="Torrent Example" subtitle="" location="torrent.qdoc" module="QtNetwork" groups="examples-network">
            <contents name="license-information" title="License Information" level="1"/>
            <page access="public" status="commendable" name="torrent/addtorrentdialog.cpp" href="torrent-addtorrentdialog-cpp.html" subtype="file" title="" fulltitle="addtorrentdialog.cpp Example File" subtitle="torrent/addtorrentdialog.cpp" location=""/>
            <page access="public" status="commendable" name="torrent/addtorrentdialog.h" href="torrent-addtorrentdialog-h.html" subtype="file" title="" fulltitle="addtorrentdialog.h Example File" subtitle="torrent/addtorrentdialog.h" location=""/>
            <page access="public" status="commendable" name="torrent/bencodeparser.cpp" href="torrent-bencodeparser-cpp.html" subtype="file" title="" fulltitle="bencodeparser.cpp Example File" subtitle="torrent/bencodeparser.cpp" location=""/>
            <page access="public" status="commendable" name="torrent/bencodeparser.h" href="torrent-bencodeparser-h.html" subtype="file" title="" fulltitle="bencodeparser.h Example File" subtitle="torrent/bencodeparser.h" location=""/>
            <page access="public" status="commendable" name="torrent/connectionmanager.cpp" href="torrent-connectionmanager-cpp.html" subtype="file" title="" fulltitle="connectionmanager.cpp Example File" subtitle="torrent/connectionmanager.cpp" location=""/>
            <page access="public" status="commendable" name="torrent/connectionmanager.h" href="torrent-connectionmanager-h.html" subtype="file" title="" fulltitle="connectionmanager.h Example File" subtitle="torrent/connectionmanager.h" location=""/>
            <page access="public" status="commendable" name="torrent/filemanager.cpp" href="torrent-filemanager-cpp.html" subtype="file" title="" fulltitle="filemanager.cpp Example File" subtitle="torrent/filemanager.cpp" location=""/>
            <page access="public" status="commendable" name="torrent/filemanager.h" href="torrent-filemanager-h.html" subtype="file" title="" fulltitle="filemanager.h Example File" subtitle="torrent/filemanager.h" location=""/>
            <page access="public" status="commendable" name="torrent/forms/addtorrentform.ui" href="torrent-forms-addtorrentform-ui.html" subtype="file" title="" fulltitle="addtorrentform.ui Example File" subtitle="torrent/forms/addtorrentform.ui" location=""/>
            <page access="public" status="commendable" name="torrent/icons.qrc" href="torrent-icons-qrc.html" subtype="file" title="" fulltitle="icons.qrc Example File" subtitle="torrent/icons.qrc" location=""/>
            <page access="public" status="commendable" name="torrent/main.cpp" href="torrent-main-cpp.html" subtype="file" title="" fulltitle="main.cpp Example File" subtitle="torrent/main.cpp" location=""/>
            <page access="public" status="commendable" name="torrent/mainwindow.cpp" href="torrent-mainwindow-cpp.html" subtype="file" title="" fulltitle="mainwindow.cpp Example File" subtitle="torrent/mainwindow.cpp" location=""/>
            <page access="public" status="commendable" name="torrent/mainwindow.h" href="torrent-mainwindow-h.html" subtype="file" title="" fulltitle="mainwindow.h Example File" subtitle="torrent/mainwindow.h" location=""/>
            <page access="public" status="commendable" name="torrent/metainfo.cpp" href="torrent-metainfo-cpp.html" subtype="file" title="" fulltitle="metainfo.cpp Example File" subtitle="torrent/metainfo.cpp" location=""/>
            <page access="public" status="commendable" name="torrent/metainfo.h" href="torrent-metainfo-h.html" subtype="file" title="" fulltitle="metainfo.h Example File" subtitle="torrent/metainfo.h" location=""/>
            <page access="public" status="commendable" name="torrent/peerwireclient.cpp" href="torrent-peerwireclient-cpp.html" subtype="file" title="" fulltitle="peerwireclient.cpp Example File" subtitle="torrent/peerwireclient.cpp" location=""/>
            <page access="public" status="commendable" name="torrent/peerwireclient.h" href="torrent-peerwireclient-h.html" subtype="file" title="" fulltitle="peerwireclient.h Example File" subtitle="torrent/peerwireclient.h" location=""/>
            <page access="public" status="commendable" name="torrent/ratecontroller.cpp" href="torrent-ratecontroller-cpp.html" subtype="file" title="" fulltitle="ratecontroller.cpp Example File" subtitle="torrent/ratecontroller.cpp" location=""/>
            <page access="public" status="commendable" name="torrent/ratecontroller.h" href="torrent-ratecontroller-h.html" subtype="file" title="" fulltitle="ratecontroller.h Example File" subtitle="torrent/ratecontroller.h" location=""/>
            <page access="public" status="commendable" name="torrent/torrent.pro" href="torrent-torrent-pro.html" subtype="file" title="" fulltitle="torrent.pro Example File" subtitle="torrent/torrent.pro" location=""/>
            <page access="public" status="commendable" name="torrent/torrentclient.cpp" href="torrent-torrentclient-cpp.html" subtype="file" title="" fulltitle="torrentclient.cpp Example File" subtitle="torrent/torrentclient.cpp" location=""/>
            <page access="public" status="commendable" name="torrent/torrentclient.h" href="torrent-torrentclient-h.html" subtype="file" title="" fulltitle="torrentclient.h Example File" subtitle="torrent/torrentclient.h" location=""/>
            <page access="public" status="commendable" name="torrent/torrentserver.cpp" href="torrent-torrentserver-cpp.html" subtype="file" title="" fulltitle="torrentserver.cpp Example File" subtitle="torrent/torrentserver.cpp" location=""/>
            <page access="public" status="commendable" name="torrent/torrentserver.h" href="torrent-torrentserver-h.html" subtype="file" title="" fulltitle="torrentserver.h Example File" subtitle="torrent/torrentserver.h" location=""/>
            <page access="public" status="commendable" name="torrent/trackerclient.cpp" href="torrent-trackerclient-cpp.html" subtype="file" title="" fulltitle="trackerclient.cpp Example File" subtitle="torrent/trackerclient.cpp" location=""/>
            <page access="public" status="commendable" name="torrent/trackerclient.h" href="torrent-trackerclient-h.html" subtype="file" title="" fulltitle="trackerclient.h Example File" subtitle="torrent/trackerclient.h" location=""/>
        </page>
        <class access="public" threadsafety="unspecified" status="commendable" name="QAbstractNetworkCache" href="qabstractnetworkcache.html" location="qabstractnetworkcache.h" since="4.5" bases="QObject" module="QtNetwork">
            <function access="protected" threadsafety="unspecified" status="commendable" name="QAbstractNetworkCache" fullname="QAbstractNetworkCache::QAbstractNetworkCache" href="qabstractnetworkcache.html#QAbstractNetworkCache" location="qabstractnetworkcache.h" virtual="non" meta="constructor" const="false" static="false" overload="false" type="" signature="QAbstractNetworkCache(QObject * parent)">
                <parameter left="QObject *" right="" name="parent" default="0"/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="cacheSize" fullname="QAbstractNetworkCache::cacheSize" href="qabstractnetworkcache.html#cacheSize" location="qabstractnetworkcache.h" virtual="pure" meta="plain" const="true" static="false" overload="false" type="qint64" signature="cacheSize() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="clear" fullname="QAbstractNetworkCache::clear" href="qabstractnetworkcache.html#clear" location="qabstractnetworkcache.h" virtual="pure" meta="slot" const="false" static="false" overload="false" type="void" signature="clear()"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="data" fullname="QAbstractNetworkCache::data" href="qabstractnetworkcache.html#data" location="qabstractnetworkcache.h" virtual="pure" meta="plain" const="false" static="false" overload="false" type="QIODevice *" signature="data(const QUrl &amp; url)">
                <parameter left="const QUrl &amp;" right="" name="url" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="insert" fullname="QAbstractNetworkCache::insert" href="qabstractnetworkcache.html#insert" location="qabstractnetworkcache.h" virtual="pure" meta="plain" const="false" static="false" overload="false" type="void" signature="insert(QIODevice * device)">
                <parameter left="QIODevice *" right="" name="device" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="metaData" fullname="QAbstractNetworkCache::metaData" href="qabstractnetworkcache.html#metaData" location="qabstractnetworkcache.h" virtual="pure" meta="plain" const="false" static="false" overload="false" type="QNetworkCacheMetaData" signature="metaData(const QUrl &amp; url)">
                <parameter left="const QUrl &amp;" right="" name="url" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="prepare" fullname="QAbstractNetworkCache::prepare" href="qabstractnetworkcache.html#prepare" location="qabstractnetworkcache.h" virtual="pure" meta="plain" const="false" static="false" overload="false" type="QIODevice *" signature="prepare(const QNetworkCacheMetaData &amp; metaData)">
                <parameter left="const QNetworkCacheMetaData &amp;" right="" name="metaData" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="remove" fullname="QAbstractNetworkCache::remove" href="qabstractnetworkcache.html#remove" location="qabstractnetworkcache.h" virtual="pure" meta="plain" const="false" static="false" overload="false" type="bool" signature="remove(const QUrl &amp; url)">
                <parameter left="const QUrl &amp;" right="" name="url" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="updateMetaData" fullname="QAbstractNetworkCache::updateMetaData" href="qabstractnetworkcache.html#updateMetaData" location="qabstractnetworkcache.h" virtual="pure" meta="plain" const="false" static="false" overload="false" type="void" signature="updateMetaData(const QNetworkCacheMetaData &amp; metaData)">
                <parameter left="const QNetworkCacheMetaData &amp;" right="" name="metaData" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="~QAbstractNetworkCache" fullname="QAbstractNetworkCache::~QAbstractNetworkCache" href="qabstractnetworkcache.html#dtor.QAbstractNetworkCache" location="qabstractnetworkcache.h" virtual="impure" meta="destructor" const="false" static="false" overload="false" type="" signature="~QAbstractNetworkCache()"/>
        </class>
        <class access="public" threadsafety="unspecified" status="commendable" name="QNetworkCacheMetaData" href="qnetworkcachemetadata.html" location="qabstractnetworkcache.h" since="4.5" bases="" module="QtNetwork" groups="shared">
            <typedef access="public" threadsafety="unspecified" status="commendable" name="AttributesMap" fullname="QNetworkCacheMetaData::AttributesMap" href="qnetworkcachemetadata.html#AttributesMap-typedef" location="qabstractnetworkcache.h"/>
            <typedef access="public" threadsafety="unspecified" status="commendable" name="RawHeader" fullname="QNetworkCacheMetaData::RawHeader" href="qnetworkcachemetadata.html#RawHeader-typedef" location="qabstractnetworkcache.h"/>
            <typedef access="public" threadsafety="unspecified" status="commendable" name="RawHeaderList" fullname="QNetworkCacheMetaData::RawHeaderList" href="qnetworkcachemetadata.html#RawHeaderList-typedef" location="qabstractnetworkcache.h"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="QNetworkCacheMetaData" fullname="QNetworkCacheMetaData::QNetworkCacheMetaData" href="qnetworkcachemetadata.html#QNetworkCacheMetaData" location="qabstractnetworkcache.h" virtual="non" meta="constructor" const="false" static="false" overload="false" type="" signature="QNetworkCacheMetaData()"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="QNetworkCacheMetaData" fullname="QNetworkCacheMetaData::QNetworkCacheMetaData" href="qnetworkcachemetadata.html#QNetworkCacheMetaData-2" location="qabstractnetworkcache.h" virtual="non" meta="constructor" const="false" static="false" overload="true" overload-number="2" type="" signature="QNetworkCacheMetaData(const QNetworkCacheMetaData &amp; other)">
                <parameter left="const QNetworkCacheMetaData &amp;" right="" name="other" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="attributes" fullname="QNetworkCacheMetaData::attributes" href="qnetworkcachemetadata.html#attributes" location="qabstractnetworkcache.h" since="4.6" virtual="non" meta="plain" const="true" static="false" overload="false" type="AttributesMap" signature="attributes() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="expirationDate" fullname="QNetworkCacheMetaData::expirationDate" href="qnetworkcachemetadata.html#expirationDate" location="qabstractnetworkcache.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QDateTime" signature="expirationDate() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="isValid" fullname="QNetworkCacheMetaData::isValid" href="qnetworkcachemetadata.html#isValid" location="qabstractnetworkcache.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="bool" signature="isValid() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="lastModified" fullname="QNetworkCacheMetaData::lastModified" href="qnetworkcachemetadata.html#lastModified" location="qabstractnetworkcache.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QDateTime" signature="lastModified() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="operator!=" fullname="QNetworkCacheMetaData::operator!=" href="qnetworkcachemetadata.html#operator!=" location="qabstractnetworkcache.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="bool" signature="operator!=(const QNetworkCacheMetaData &amp; other) const">
                <parameter left="const QNetworkCacheMetaData &amp;" right="" name="other" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="operator=" fullname="QNetworkCacheMetaData::operator=" href="qnetworkcachemetadata.html#operator=" location="qabstractnetworkcache.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="QNetworkCacheMetaData &amp;" signature="operator=(const QNetworkCacheMetaData &amp; other)">
                <parameter left="const QNetworkCacheMetaData &amp;" right="" name="other" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="operator==" fullname="QNetworkCacheMetaData::operator==" href="qnetworkcachemetadata.html#operator==" location="qabstractnetworkcache.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="bool" signature="operator==(const QNetworkCacheMetaData &amp; other) const">
                <parameter left="const QNetworkCacheMetaData &amp;" right="" name="other" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="rawHeaders" fullname="QNetworkCacheMetaData::rawHeaders" href="qnetworkcachemetadata.html#rawHeaders" location="qabstractnetworkcache.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="RawHeaderList" signature="rawHeaders() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="saveToDisk" fullname="QNetworkCacheMetaData::saveToDisk" href="qnetworkcachemetadata.html#saveToDisk" location="qabstractnetworkcache.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="bool" signature="saveToDisk() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="setAttributes" fullname="QNetworkCacheMetaData::setAttributes" href="qnetworkcachemetadata.html#setAttributes" location="qabstractnetworkcache.h" since="4.6" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setAttributes(const AttributesMap &amp; attributes)">
                <parameter left="const AttributesMap &amp;" right="" name="attributes" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setExpirationDate" fullname="QNetworkCacheMetaData::setExpirationDate" href="qnetworkcachemetadata.html#setExpirationDate" location="qabstractnetworkcache.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setExpirationDate(const QDateTime &amp; dateTime)">
                <parameter left="const QDateTime &amp;" right="" name="dateTime" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setLastModified" fullname="QNetworkCacheMetaData::setLastModified" href="qnetworkcachemetadata.html#setLastModified" location="qabstractnetworkcache.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setLastModified(const QDateTime &amp; dateTime)">
                <parameter left="const QDateTime &amp;" right="" name="dateTime" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setRawHeaders" fullname="QNetworkCacheMetaData::setRawHeaders" href="qnetworkcachemetadata.html#setRawHeaders" location="qabstractnetworkcache.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setRawHeaders(const RawHeaderList &amp; list)">
                <parameter left="const RawHeaderList &amp;" right="" name="list" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setSaveToDisk" fullname="QNetworkCacheMetaData::setSaveToDisk" href="qnetworkcachemetadata.html#setSaveToDisk" location="qabstractnetworkcache.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setSaveToDisk(bool allow)">
                <parameter left="bool" right="" name="allow" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setUrl" fullname="QNetworkCacheMetaData::setUrl" href="qnetworkcachemetadata.html#setUrl" location="qabstractnetworkcache.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setUrl(const QUrl &amp; url)">
                <parameter left="const QUrl &amp;" right="" name="url" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="swap" fullname="QNetworkCacheMetaData::swap" href="qnetworkcachemetadata.html#swap" location="qabstractnetworkcache.h" since="5.0" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="swap(QNetworkCacheMetaData &amp; other)">
                <parameter left="QNetworkCacheMetaData &amp;" right="" name="other" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="url" fullname="QNetworkCacheMetaData::url" href="qnetworkcachemetadata.html#url" location="qabstractnetworkcache.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QUrl" signature="url() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="~QNetworkCacheMetaData" fullname="QNetworkCacheMetaData::~QNetworkCacheMetaData" href="qnetworkcachemetadata.html#dtor.QNetworkCacheMetaData" location="qabstractnetworkcache.h" virtual="non" meta="destructor" const="false" static="false" overload="false" type="" signature="~QNetworkCacheMetaData()"/>
        </class>
        <function access="public" threadsafety="unspecified" status="commendable" name="operator&lt;&lt;" href="qnetworkcachemetadata.html#operator&lt;&lt;-36" location="qabstractnetworkcache.h" since="4.5" virtual="non" meta="plain" const="false" static="false" overload="true" overload-number="36" relates="QNetworkCacheMetaData" type="QDataStream &amp;" signature="operator&lt;&lt;(QDataStream &amp; out, const QNetworkCacheMetaData &amp; metaData)">
            <parameter left="QDataStream &amp;" right="" name="out" default=""/>
            <parameter left="const QNetworkCacheMetaData &amp;" right="" name="metaData" default=""/>
        </function>
        <function access="public" threadsafety="unspecified" status="commendable" name="operator&gt;&gt;" href="qnetworkcachemetadata.html#operator&gt;&gt;-32" location="qabstractnetworkcache.h" since="4.5" virtual="non" meta="plain" const="false" static="false" overload="true" overload-number="32" relates="QNetworkCacheMetaData" type="QDataStream &amp;" signature="operator&gt;&gt;(QDataStream &amp; in, QNetworkCacheMetaData &amp; metaData)">
            <parameter left="QDataStream &amp;" right="" name="in" default=""/>
            <parameter left="QNetworkCacheMetaData &amp;" right="" name="metaData" default=""/>
        </function>
        <class access="public" threadsafety="unspecified" status="commendable" name="QHttpMultiPart" href="qhttpmultipart.html" location="qhttpmultipart.h" since="4.8" bases="QObject" module="QtNetwork" groups="network">
            <enum access="public" threadsafety="unspecified" status="commendable" name="ContentType" fullname="QHttpMultiPart::ContentType" href="qhttpmultipart.html#ContentType-enum" location="qhttpmultipart.h">
                <value name="MixedType" value="0"/>
                <value name="RelatedType" value="1"/>
                <value name="FormDataType" value="2"/>
                <value name="AlternativeType" value="3"/>
            </enum>
            <function access="public" threadsafety="unspecified" status="commendable" name="QHttpMultiPart" fullname="QHttpMultiPart::QHttpMultiPart" href="qhttpmultipart.html#QHttpMultiPart-2" location="qhttpmultipart.h" virtual="non" meta="constructor" const="false" static="false" overload="true" overload-number="2" type="" signature="QHttpMultiPart(ContentType contentType, QObject * parent)">
                <parameter left="ContentType" right="" name="contentType" default=""/>
                <parameter left="QObject *" right="" name="parent" default="0"/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="QHttpMultiPart" fullname="QHttpMultiPart::QHttpMultiPart" href="qhttpmultipart.html#QHttpMultiPart" location="qhttpmultipart.h" virtual="non" meta="constructor" const="false" static="false" overload="false" type="" signature="QHttpMultiPart(QObject * parent)">
                <parameter left="QObject *" right="" name="parent" default="0"/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="append" fullname="QHttpMultiPart::append" href="qhttpmultipart.html#append" location="qhttpmultipart.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="append(const QHttpPart &amp; httpPart)">
                <parameter left="const QHttpPart &amp;" right="" name="httpPart" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="boundary" fullname="QHttpMultiPart::boundary" href="qhttpmultipart.html#boundary" location="qhttpmultipart.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QByteArray" signature="boundary() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="setBoundary" fullname="QHttpMultiPart::setBoundary" href="qhttpmultipart.html#setBoundary" location="qhttpmultipart.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setBoundary(const QByteArray &amp; boundary)">
                <parameter left="const QByteArray &amp;" right="" name="boundary" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setContentType" fullname="QHttpMultiPart::setContentType" href="qhttpmultipart.html#setContentType" location="qhttpmultipart.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setContentType(ContentType contentType)">
                <parameter left="ContentType" right="" name="contentType" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="~QHttpMultiPart" fullname="QHttpMultiPart::~QHttpMultiPart" href="qhttpmultipart.html#dtor.QHttpMultiPart" location="qhttpmultipart.h" virtual="non" meta="destructor" const="false" static="false" overload="false" type="" signature="~QHttpMultiPart()"/>
        </class>
        <class access="public" threadsafety="unspecified" status="commendable" name="QHttpPart" href="qhttppart.html" location="qhttpmultipart.h" since="4.8" bases="" module="QtNetwork" groups="network,shared">
            <function access="public" threadsafety="unspecified" status="commendable" name="QHttpPart" fullname="QHttpPart::QHttpPart" href="qhttppart.html#QHttpPart" location="qhttpmultipart.h" virtual="non" meta="constructor" const="false" static="false" overload="false" type="" signature="QHttpPart()"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="QHttpPart" fullname="QHttpPart::QHttpPart" href="qhttppart.html#QHttpPart-2" location="qhttpmultipart.h" virtual="non" meta="constructor" const="false" static="false" overload="true" overload-number="2" type="" signature="QHttpPart(const QHttpPart &amp; other)">
                <parameter left="const QHttpPart &amp;" right="" name="other" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="operator!=" fullname="QHttpPart::operator!=" href="qhttppart.html#operator!=" location="qhttpmultipart.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="bool" signature="operator!=(const QHttpPart &amp; other) const">
                <parameter left="const QHttpPart &amp;" right="" name="other" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="operator=" fullname="QHttpPart::operator=" href="qhttppart.html#operator=" location="qhttpmultipart.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="QHttpPart &amp;" signature="operator=(const QHttpPart &amp; other)">
                <parameter left="const QHttpPart &amp;" right="" name="other" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="operator==" fullname="QHttpPart::operator==" href="qhttppart.html#operator==" location="qhttpmultipart.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="bool" signature="operator==(const QHttpPart &amp; other) const">
                <parameter left="const QHttpPart &amp;" right="" name="other" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setBody" fullname="QHttpPart::setBody" href="qhttppart.html#setBody" location="qhttpmultipart.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setBody(const QByteArray &amp; body)">
                <parameter left="const QByteArray &amp;" right="" name="body" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setBodyDevice" fullname="QHttpPart::setBodyDevice" href="qhttppart.html#setBodyDevice" location="qhttpmultipart.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setBodyDevice(QIODevice * device)">
                <parameter left="QIODevice *" right="" name="device" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setHeader" fullname="QHttpPart::setHeader" href="qhttppart.html#setHeader" location="qhttpmultipart.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setHeader(QNetworkRequest::KnownHeaders header, const QVariant &amp; value)">
                <parameter left="QNetworkRequest::KnownHeaders" right="" name="header" default=""/>
                <parameter left="const QVariant &amp;" right="" name="value" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setRawHeader" fullname="QHttpPart::setRawHeader" href="qhttppart.html#setRawHeader" location="qhttpmultipart.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setRawHeader(const QByteArray &amp; headerName, const QByteArray &amp; headerValue)">
                <parameter left="const QByteArray &amp;" right="" name="headerName" default=""/>
                <parameter left="const QByteArray &amp;" right="" name="headerValue" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="swap" fullname="QHttpPart::swap" href="qhttppart.html#swap" location="qhttpmultipart.h" since="5.0" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="swap(QHttpPart &amp; other)">
                <parameter left="QHttpPart &amp;" right="" name="other" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="~QHttpPart" fullname="QHttpPart::~QHttpPart" href="qhttppart.html#dtor.QHttpPart" location="qhttpmultipart.h" virtual="non" meta="destructor" const="false" static="false" overload="false" type="" signature="~QHttpPart()"/>
        </class>
        <class access="public" threadsafety="reentrant" status="commendable" name="QNetworkAccessManager" href="qnetworkaccessmanager.html" location="qnetworkaccessmanager.h" since="4.4" bases="QObject" module="QtNetwork" groups="network">
            <contents name="network-and-roaming-support" title="Network and Roaming support" level="1"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="proxyFactory" fullname="QNetworkAccessManager::proxyFactory" href="qnetworkaccessmanager.html#proxyFactory" location="qnetworkaccessmanager.cpp" since="4.5" virtual="non" meta="plain" const="true" static="false" overload="false" type="QNetworkProxyFactory *" signature="proxyFactory() const"/>
            <enum access="public" threadsafety="unspecified" status="commendable" name="NetworkAccessibility" fullname="QNetworkAccessManager::NetworkAccessibility" href="qnetworkaccessmanager.html#NetworkAccessibility-enum" location="qnetworkaccessmanager.h">
                <value name="UnknownAccessibility" value="-1"/>
                <value name="NotAccessible" value="0"/>
                <value name="Accessible" value="1"/>
            </enum>
            <enum access="public" threadsafety="unspecified" status="commendable" name="Operation" fullname="QNetworkAccessManager::Operation" href="qnetworkaccessmanager.html#Operation-enum" location="qnetworkaccessmanager.h" since="4.7">
                <value name="HeadOperation" value="1"/>
                <value name="GetOperation" value="2"/>
                <value name="PutOperation" value="3"/>
                <value name="PostOperation" value="4"/>
                <value name="DeleteOperation" value="5"/>
                <value name="CustomOperation" value="6"/>
                <value name="UnknownOperation" value="0"/>
            </enum>
            <function access="public" threadsafety="unspecified" status="commendable" name="QNetworkAccessManager" fullname="QNetworkAccessManager::QNetworkAccessManager" href="qnetworkaccessmanager.html#QNetworkAccessManager" location="qnetworkaccessmanager.h" virtual="non" meta="constructor" const="false" static="false" overload="false" type="" signature="QNetworkAccessManager(QObject * parent)">
                <parameter left="QObject *" right="" name="parent" default="0"/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="activeConfiguration" fullname="QNetworkAccessManager::activeConfiguration" href="qnetworkaccessmanager.html#activeConfiguration" location="qnetworkaccessmanager.h" since="4.7" virtual="non" meta="plain" const="true" static="false" overload="false" type="QNetworkConfiguration" signature="activeConfiguration() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="authenticationRequired" fullname="QNetworkAccessManager::authenticationRequired" href="qnetworkaccessmanager.html#authenticationRequired" location="qnetworkaccessmanager.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="authenticationRequired(QNetworkReply * reply, QAuthenticator * authenticator)">
                <parameter left="QNetworkReply *" right="" name="reply" default=""/>
                <parameter left="QAuthenticator *" right="" name="authenticator" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="cache" fullname="QNetworkAccessManager::cache" href="qnetworkaccessmanager.html#cache" location="qnetworkaccessmanager.h" since="4.5" virtual="non" meta="plain" const="true" static="false" overload="false" type="QAbstractNetworkCache *" signature="cache() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="clearAccessCache" fullname="QNetworkAccessManager::clearAccessCache" href="qnetworkaccessmanager.html#clearAccessCache" location="qnetworkaccessmanager.h" since="5.0" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="clearAccessCache()"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="configuration" fullname="QNetworkAccessManager::configuration" href="qnetworkaccessmanager.html#configuration" location="qnetworkaccessmanager.h" since="4.7" virtual="non" meta="plain" const="true" static="false" overload="false" type="QNetworkConfiguration" signature="configuration() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="cookieJar" fullname="QNetworkAccessManager::cookieJar" href="qnetworkaccessmanager.html#cookieJar" location="qnetworkaccessmanager.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QNetworkCookieJar *" signature="cookieJar() const"/>
            <function access="protected" threadsafety="unspecified" status="commendable" name="createRequest" fullname="QNetworkAccessManager::createRequest" href="qnetworkaccessmanager.html#createRequest" location="qnetworkaccessmanager.h" virtual="impure" meta="plain" const="false" static="false" overload="false" type="QNetworkReply *" signature="createRequest(Operation op, const QNetworkRequest &amp; req, QIODevice * outgoingData)">
                <parameter left="Operation" right="" name="op" default=""/>
                <parameter left="const QNetworkRequest &amp;" right="" name="req" default=""/>
                <parameter left="QIODevice *" right="" name="outgoingData" default="0"/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="deleteResource" fullname="QNetworkAccessManager::deleteResource" href="qnetworkaccessmanager.html#deleteResource" location="qnetworkaccessmanager.h" since="4.6" virtual="non" meta="plain" const="false" static="false" overload="false" type="QNetworkReply *" signature="deleteResource(const QNetworkRequest &amp; request)">
                <parameter left="const QNetworkRequest &amp;" right="" name="request" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="finished" fullname="QNetworkAccessManager::finished" href="qnetworkaccessmanager.html#finished" location="qnetworkaccessmanager.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="finished(QNetworkReply * reply)">
                <parameter left="QNetworkReply *" right="" name="reply" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="get" fullname="QNetworkAccessManager::get" href="qnetworkaccessmanager.html#get" location="qnetworkaccessmanager.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="QNetworkReply *" signature="get(const QNetworkRequest &amp; request)">
                <parameter left="const QNetworkRequest &amp;" right="" name="request" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="head" fullname="QNetworkAccessManager::head" href="qnetworkaccessmanager.html#head" location="qnetworkaccessmanager.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="QNetworkReply *" signature="head(const QNetworkRequest &amp; request)">
                <parameter left="const QNetworkRequest &amp;" right="" name="request" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="networkAccessible" fullname="QNetworkAccessManager::networkAccessible" href="qnetworkaccessmanager.html#networkAccessible-prop" location="qnetworkaccessmanager.h" since="4.7" virtual="non" meta="plain" const="true" static="false" overload="false" associated-property="networkAccessible" type="NetworkAccessibility" signature="networkAccessible() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="networkAccessibleChanged" fullname="QNetworkAccessManager::networkAccessibleChanged" href="qnetworkaccessmanager.html#networkAccessible-prop" location="qnetworkaccessmanager.h" virtual="non" meta="signal" const="false" static="false" overload="false" associated-property="networkAccessible" type="void" signature="networkAccessibleChanged(QNetworkAccessManager::NetworkAccessibility accessible)">
                <parameter left="QNetworkAccessManager::NetworkAccessibility" right="" name="accessible" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="post" fullname="QNetworkAccessManager::post" href="qnetworkaccessmanager.html#post-3" location="qnetworkaccessmanager.h" since="4.8" virtual="non" meta="plain" const="false" static="false" overload="true" overload-number="3" type="QNetworkReply *" signature="post(const QNetworkRequest &amp; request, QHttpMultiPart * multiPart)">
                <parameter left="const QNetworkRequest &amp;" right="" name="request" default=""/>
                <parameter left="QHttpMultiPart *" right="" name="multiPart" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="post" fullname="QNetworkAccessManager::post" href="qnetworkaccessmanager.html#post" location="qnetworkaccessmanager.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="QNetworkReply *" signature="post(const QNetworkRequest &amp; request, QIODevice * data)">
                <parameter left="const QNetworkRequest &amp;" right="" name="request" default=""/>
                <parameter left="QIODevice *" right="" name="data" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="post" fullname="QNetworkAccessManager::post" href="qnetworkaccessmanager.html#post-2" location="qnetworkaccessmanager.h" virtual="non" meta="plain" const="false" static="false" overload="true" overload-number="2" type="QNetworkReply *" signature="post(const QNetworkRequest &amp; request, const QByteArray &amp; data)">
                <parameter left="const QNetworkRequest &amp;" right="" name="request" default=""/>
                <parameter left="const QByteArray &amp;" right="" name="data" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="proxy" fullname="QNetworkAccessManager::proxy" href="qnetworkaccessmanager.html#proxy" location="qnetworkaccessmanager.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QNetworkProxy" signature="proxy() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="proxyAuthenticationRequired" fullname="QNetworkAccessManager::proxyAuthenticationRequired" href="qnetworkaccessmanager.html#proxyAuthenticationRequired" location="qnetworkaccessmanager.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="proxyAuthenticationRequired(const QNetworkProxy &amp; proxy, QAuthenticator * authenticator)">
                <parameter left="const QNetworkProxy &amp;" right="" name="proxy" default=""/>
                <parameter left="QAuthenticator *" right="" name="authenticator" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="put" fullname="QNetworkAccessManager::put" href="qnetworkaccessmanager.html#put-2" location="qnetworkaccessmanager.h" since="4.8" virtual="non" meta="plain" const="false" static="false" overload="true" overload-number="2" type="QNetworkReply *" signature="put(const QNetworkRequest &amp; request, QHttpMultiPart * multiPart)">
                <parameter left="const QNetworkRequest &amp;" right="" name="request" default=""/>
                <parameter left="QHttpMultiPart *" right="" name="multiPart" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="put" fullname="QNetworkAccessManager::put" href="qnetworkaccessmanager.html#put" location="qnetworkaccessmanager.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="QNetworkReply *" signature="put(const QNetworkRequest &amp; request, QIODevice * data)">
                <parameter left="const QNetworkRequest &amp;" right="" name="request" default=""/>
                <parameter left="QIODevice *" right="" name="data" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="put" fullname="QNetworkAccessManager::put" href="qnetworkaccessmanager.html#put-3" location="qnetworkaccessmanager.h" virtual="non" meta="plain" const="false" static="false" overload="true" overload-number="3" type="QNetworkReply *" signature="put(const QNetworkRequest &amp; request, const QByteArray &amp; data)">
                <parameter left="const QNetworkRequest &amp;" right="" name="request" default=""/>
                <parameter left="const QByteArray &amp;" right="" name="data" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="sendCustomRequest" fullname="QNetworkAccessManager::sendCustomRequest" href="qnetworkaccessmanager.html#sendCustomRequest" location="qnetworkaccessmanager.h" since="4.7" virtual="non" meta="plain" const="false" static="false" overload="false" type="QNetworkReply *" signature="sendCustomRequest(const QNetworkRequest &amp; request, const QByteArray &amp; verb, QIODevice * data)">
                <parameter left="const QNetworkRequest &amp;" right="" name="request" default=""/>
                <parameter left="const QByteArray &amp;" right="" name="verb" default=""/>
                <parameter left="QIODevice *" right="" name="data" default="0"/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setCache" fullname="QNetworkAccessManager::setCache" href="qnetworkaccessmanager.html#setCache" location="qnetworkaccessmanager.h" since="4.5" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setCache(QAbstractNetworkCache * cache)">
                <parameter left="QAbstractNetworkCache *" right="" name="cache" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setConfiguration" fullname="QNetworkAccessManager::setConfiguration" href="qnetworkaccessmanager.html#setConfiguration" location="qnetworkaccessmanager.h" since="4.7" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setConfiguration(const QNetworkConfiguration &amp; config)">
                <parameter left="const QNetworkConfiguration &amp;" right="" name="config" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setCookieJar" fullname="QNetworkAccessManager::setCookieJar" href="qnetworkaccessmanager.html#setCookieJar" location="qnetworkaccessmanager.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setCookieJar(QNetworkCookieJar * cookieJar)">
                <parameter left="QNetworkCookieJar *" right="" name="cookieJar" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setNetworkAccessible" fullname="QNetworkAccessManager::setNetworkAccessible" href="qnetworkaccessmanager.html#networkAccessible-prop" location="qnetworkaccessmanager.h" since="4.7" virtual="non" meta="plain" const="false" static="false" overload="false" associated-property="networkAccessible" type="void" signature="setNetworkAccessible(NetworkAccessibility accessible)">
                <parameter left="NetworkAccessibility" right="" name="accessible" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setProxy" fullname="QNetworkAccessManager::setProxy" href="qnetworkaccessmanager.html#setProxy" location="qnetworkaccessmanager.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setProxy(const QNetworkProxy &amp; proxy)">
                <parameter left="const QNetworkProxy &amp;" right="" name="proxy" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setProxyFactory" fullname="QNetworkAccessManager::setProxyFactory" href="qnetworkaccessmanager.html#setProxyFactory" location="qnetworkaccessmanager.h" since="4.5" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setProxyFactory(QNetworkProxyFactory * factory)">
                <parameter left="QNetworkProxyFactory *" right="" name="factory" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="sslErrors" fullname="QNetworkAccessManager::sslErrors" href="qnetworkaccessmanager.html#sslErrors" location="qnetworkaccessmanager.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="sslErrors(QNetworkReply * reply, const QList&lt;QSslError&gt; &amp; errors)">
                <parameter left="QNetworkReply *" right="" name="reply" default=""/>
                <parameter left="const QList&lt;QSslError&gt; &amp;" right="" name="errors" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="~QNetworkAccessManager" fullname="QNetworkAccessManager::~QNetworkAccessManager" href="qnetworkaccessmanager.html#dtor.QNetworkAccessManager" location="qnetworkaccessmanager.h" virtual="non" meta="destructor" const="false" static="false" overload="false" type="" signature="~QNetworkAccessManager()"/>
            <property access="public" threadsafety="unspecified" status="commendable" name="networkAccessible" fullname="QNetworkAccessManager::networkAccessible" href="qnetworkaccessmanager.html#networkAccessible-prop" location="qnetworkaccessmanager.h" since="4.7" type="NetworkAccessibility">
                <getter name="networkAccessible"/>
                <setter name="setNetworkAccessible"/>
                <notifier name="networkAccessibleChanged"/>
            </property>
        </class>
        <class access="public" threadsafety="unspecified" status="commendable" name="QNetworkCookie" href="qnetworkcookie.html" location="qnetworkcookie.h" since="4.4" bases="" module="QtNetwork" groups="shared">
            <enum access="public" threadsafety="unspecified" status="commendable" name="RawForm" fullname="QNetworkCookie::RawForm" href="qnetworkcookie.html#RawForm-enum" location="qnetworkcookie.h">
                <value name="NameAndValueOnly" value="0"/>
                <value name="Full" value="1"/>
            </enum>
            <function access="public" threadsafety="unspecified" status="commendable" name="QNetworkCookie" fullname="QNetworkCookie::QNetworkCookie" href="qnetworkcookie.html#QNetworkCookie" location="qnetworkcookie.h" virtual="non" meta="constructor" const="false" static="false" overload="false" type="" signature="QNetworkCookie(const QByteArray &amp; name, const QByteArray &amp; value)">
                <parameter left="const QByteArray &amp;" right="" name="name" default="QByteArray()"/>
                <parameter left="const QByteArray &amp;" right="" name="value" default="QByteArray()"/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="QNetworkCookie" fullname="QNetworkCookie::QNetworkCookie" href="qnetworkcookie.html#QNetworkCookie-2" location="qnetworkcookie.h" virtual="non" meta="constructor" const="false" static="false" overload="true" overload-number="2" type="" signature="QNetworkCookie(const QNetworkCookie &amp; other)">
                <parameter left="const QNetworkCookie &amp;" right="" name="other" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="domain" fullname="QNetworkCookie::domain" href="qnetworkcookie.html#domain" location="qnetworkcookie.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QString" signature="domain() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="expirationDate" fullname="QNetworkCookie::expirationDate" href="qnetworkcookie.html#expirationDate" location="qnetworkcookie.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QDateTime" signature="expirationDate() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="hasSameIdentifier" fullname="QNetworkCookie::hasSameIdentifier" href="qnetworkcookie.html#hasSameIdentifier" location="qnetworkcookie.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="bool" signature="hasSameIdentifier(const QNetworkCookie &amp; other) const">
                <parameter left="const QNetworkCookie &amp;" right="" name="other" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="isHttpOnly" fullname="QNetworkCookie::isHttpOnly" href="qnetworkcookie.html#isHttpOnly" location="qnetworkcookie.h" since="4.5" virtual="non" meta="plain" const="true" static="false" overload="false" type="bool" signature="isHttpOnly() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="isSecure" fullname="QNetworkCookie::isSecure" href="qnetworkcookie.html#isSecure" location="qnetworkcookie.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="bool" signature="isSecure() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="isSessionCookie" fullname="QNetworkCookie::isSessionCookie" href="qnetworkcookie.html#isSessionCookie" location="qnetworkcookie.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="bool" signature="isSessionCookie() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="name" fullname="QNetworkCookie::name" href="qnetworkcookie.html#name" location="qnetworkcookie.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QByteArray" signature="name() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="normalize" fullname="QNetworkCookie::normalize" href="qnetworkcookie.html#normalize" location="qnetworkcookie.h" since="5.0" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="normalize(const QUrl &amp; url)">
                <parameter left="const QUrl &amp;" right="" name="url" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="operator!=" fullname="QNetworkCookie::operator!=" href="qnetworkcookie.html#operator!=" location="qnetworkcookie.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="bool" signature="operator!=(const QNetworkCookie &amp; other) const">
                <parameter left="const QNetworkCookie &amp;" right="" name="other" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="operator=" fullname="QNetworkCookie::operator=" href="qnetworkcookie.html#operator=" location="qnetworkcookie.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="QNetworkCookie &amp;" signature="operator=(const QNetworkCookie &amp; other)">
                <parameter left="const QNetworkCookie &amp;" right="" name="other" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="operator==" fullname="QNetworkCookie::operator==" href="qnetworkcookie.html#operator==" location="qnetworkcookie.h" since="5.0" virtual="non" meta="plain" const="true" static="false" overload="false" type="bool" signature="operator==(const QNetworkCookie &amp; other) const">
                <parameter left="const QNetworkCookie &amp;" right="" name="other" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="parseCookies" fullname="QNetworkCookie::parseCookies" href="qnetworkcookie.html#parseCookies" location="qnetworkcookie.h" virtual="non" meta="plain" const="false" static="true" overload="false" type="QList&lt;QNetworkCookie&gt;" signature="parseCookies(const QByteArray &amp; cookieString)">
                <parameter left="const QByteArray &amp;" right="" name="cookieString" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="path" fullname="QNetworkCookie::path" href="qnetworkcookie.html#path" location="qnetworkcookie.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QString" signature="path() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="setDomain" fullname="QNetworkCookie::setDomain" href="qnetworkcookie.html#setDomain" location="qnetworkcookie.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setDomain(const QString &amp; domain)">
                <parameter left="const QString &amp;" right="" name="domain" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setExpirationDate" fullname="QNetworkCookie::setExpirationDate" href="qnetworkcookie.html#setExpirationDate" location="qnetworkcookie.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setExpirationDate(const QDateTime &amp; date)">
                <parameter left="const QDateTime &amp;" right="" name="date" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setHttpOnly" fullname="QNetworkCookie::setHttpOnly" href="qnetworkcookie.html#setHttpOnly" location="qnetworkcookie.h" since="4.5" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setHttpOnly(bool enable)">
                <parameter left="bool" right="" name="enable" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setName" fullname="QNetworkCookie::setName" href="qnetworkcookie.html#setName" location="qnetworkcookie.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setName(const QByteArray &amp; cookieName)">
                <parameter left="const QByteArray &amp;" right="" name="cookieName" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setPath" fullname="QNetworkCookie::setPath" href="qnetworkcookie.html#setPath" location="qnetworkcookie.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setPath(const QString &amp; path)">
                <parameter left="const QString &amp;" right="" name="path" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setSecure" fullname="QNetworkCookie::setSecure" href="qnetworkcookie.html#setSecure" location="qnetworkcookie.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setSecure(bool enable)">
                <parameter left="bool" right="" name="enable" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setValue" fullname="QNetworkCookie::setValue" href="qnetworkcookie.html#setValue" location="qnetworkcookie.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setValue(const QByteArray &amp; value)">
                <parameter left="const QByteArray &amp;" right="" name="value" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="swap" fullname="QNetworkCookie::swap" href="qnetworkcookie.html#swap" location="qnetworkcookie.h" since="5.0" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="swap(QNetworkCookie &amp; other)">
                <parameter left="QNetworkCookie &amp;" right="" name="other" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="toRawForm" fullname="QNetworkCookie::toRawForm" href="qnetworkcookie.html#toRawForm" location="qnetworkcookie.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QByteArray" signature="toRawForm(RawForm form) const">
                <parameter left="RawForm" right="" name="form" default="Full"/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="value" fullname="QNetworkCookie::value" href="qnetworkcookie.html#value" location="qnetworkcookie.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QByteArray" signature="value() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="~QNetworkCookie" fullname="QNetworkCookie::~QNetworkCookie" href="qnetworkcookie.html#dtor.QNetworkCookie" location="qnetworkcookie.h" virtual="non" meta="destructor" const="false" static="false" overload="false" type="" signature="~QNetworkCookie()"/>
        </class>
        <class access="public" threadsafety="unspecified" status="commendable" name="QNetworkCookieJar" href="qnetworkcookiejar.html" location="qnetworkcookiejar.h" since="4.4" bases="QObject" module="QtNetwork">
            <function access="public" threadsafety="unspecified" status="commendable" name="QNetworkCookieJar" fullname="QNetworkCookieJar::QNetworkCookieJar" href="qnetworkcookiejar.html#QNetworkCookieJar" location="qnetworkcookiejar.h" virtual="non" meta="constructor" const="false" static="false" overload="false" type="" signature="QNetworkCookieJar(QObject * parent)">
                <parameter left="QObject *" right="" name="parent" default="0"/>
            </function>
            <function access="protected" threadsafety="unspecified" status="commendable" name="allCookies" fullname="QNetworkCookieJar::allCookies" href="qnetworkcookiejar.html#allCookies" location="qnetworkcookiejar.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QList&lt;QNetworkCookie&gt;" signature="allCookies() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="cookiesForUrl" fullname="QNetworkCookieJar::cookiesForUrl" href="qnetworkcookiejar.html#cookiesForUrl" location="qnetworkcookiejar.h" virtual="impure" meta="plain" const="true" static="false" overload="false" type="QList&lt;QNetworkCookie&gt;" signature="cookiesForUrl(const QUrl &amp; url) const">
                <parameter left="const QUrl &amp;" right="" name="url" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="deleteCookie" fullname="QNetworkCookieJar::deleteCookie" href="qnetworkcookiejar.html#deleteCookie" location="qnetworkcookiejar.h" since="5.0" virtual="impure" meta="plain" const="false" static="false" overload="false" type="bool" signature="deleteCookie(const QNetworkCookie &amp; cookie)">
                <parameter left="const QNetworkCookie &amp;" right="" name="cookie" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="insertCookie" fullname="QNetworkCookieJar::insertCookie" href="qnetworkcookiejar.html#insertCookie" location="qnetworkcookiejar.h" since="5.0" virtual="impure" meta="plain" const="false" static="false" overload="false" type="bool" signature="insertCookie(const QNetworkCookie &amp; cookie)">
                <parameter left="const QNetworkCookie &amp;" right="" name="cookie" default=""/>
            </function>
            <function access="protected" threadsafety="unspecified" status="commendable" name="setAllCookies" fullname="QNetworkCookieJar::setAllCookies" href="qnetworkcookiejar.html#setAllCookies" location="qnetworkcookiejar.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setAllCookies(const QList&lt;QNetworkCookie&gt; &amp; cookieList)">
                <parameter left="const QList&lt;QNetworkCookie&gt; &amp;" right="" name="cookieList" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setCookiesFromUrl" fullname="QNetworkCookieJar::setCookiesFromUrl" href="qnetworkcookiejar.html#setCookiesFromUrl" location="qnetworkcookiejar.h" virtual="impure" meta="plain" const="false" static="false" overload="false" type="bool" signature="setCookiesFromUrl(const QList&lt;QNetworkCookie&gt; &amp; cookieList, const QUrl &amp; url)">
                <parameter left="const QList&lt;QNetworkCookie&gt; &amp;" right="" name="cookieList" default=""/>
                <parameter left="const QUrl &amp;" right="" name="url" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="updateCookie" fullname="QNetworkCookieJar::updateCookie" href="qnetworkcookiejar.html#updateCookie" location="qnetworkcookiejar.h" since="5.0" virtual="impure" meta="plain" const="false" static="false" overload="false" type="bool" signature="updateCookie(const QNetworkCookie &amp; cookie)">
                <parameter left="const QNetworkCookie &amp;" right="" name="cookie" default=""/>
            </function>
            <function access="protected" threadsafety="unspecified" status="commendable" name="validateCookie" fullname="QNetworkCookieJar::validateCookie" href="qnetworkcookiejar.html#validateCookie" location="qnetworkcookiejar.h" since="5.0" virtual="impure" meta="plain" const="true" static="false" overload="false" type="bool" signature="validateCookie(const QNetworkCookie &amp; cookie, const QUrl &amp; url) const">
                <parameter left="const QNetworkCookie &amp;" right="" name="cookie" default=""/>
                <parameter left="const QUrl &amp;" right="" name="url" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="~QNetworkCookieJar" fullname="QNetworkCookieJar::~QNetworkCookieJar" href="qnetworkcookiejar.html#dtor.QNetworkCookieJar" location="qnetworkcookiejar.h" virtual="impure" meta="destructor" const="false" static="false" overload="false" type="" signature="~QNetworkCookieJar()"/>
        </class>
        <class access="public" threadsafety="unspecified" status="commendable" name="QNetworkDiskCache" href="qnetworkdiskcache.html" location="qnetworkdiskcache.h" since="4.5" bases="QAbstractNetworkCache" module="QtNetwork">
            <function access="public" threadsafety="unspecified" status="commendable" name="QNetworkDiskCache" fullname="QNetworkDiskCache::QNetworkDiskCache" href="qnetworkdiskcache.html#QNetworkDiskCache" location="qnetworkdiskcache.h" virtual="non" meta="constructor" const="false" static="false" overload="false" type="" signature="QNetworkDiskCache(QObject * parent)">
                <parameter left="QObject *" right="" name="parent" default="0"/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="cacheDirectory" fullname="QNetworkDiskCache::cacheDirectory" href="qnetworkdiskcache.html#cacheDirectory" location="qnetworkdiskcache.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QString" signature="cacheDirectory() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="cacheSize" fullname="QNetworkDiskCache::cacheSize" href="qnetworkdiskcache.html#cacheSize" location="qnetworkdiskcache.h" virtual="impure" meta="plain" const="true" static="false" overload="false" type="qint64" signature="cacheSize() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="clear" fullname="QNetworkDiskCache::clear" href="qnetworkdiskcache.html#clear" location="qnetworkdiskcache.h" virtual="impure" meta="slot" const="false" static="false" overload="false" type="void" signature="clear()"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="data" fullname="QNetworkDiskCache::data" href="qnetworkdiskcache.html#data" location="qnetworkdiskcache.h" virtual="impure" meta="plain" const="false" static="false" overload="false" type="QIODevice *" signature="data(const QUrl &amp; url)">
                <parameter left="const QUrl &amp;" right="" name="url" default=""/>
            </function>
            <function access="protected" threadsafety="unspecified" status="commendable" name="expire" fullname="QNetworkDiskCache::expire" href="qnetworkdiskcache.html#expire" location="qnetworkdiskcache.h" virtual="impure" meta="plain" const="false" static="false" overload="false" type="qint64" signature="expire()"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="fileMetaData" fullname="QNetworkDiskCache::fileMetaData" href="qnetworkdiskcache.html#fileMetaData" location="qnetworkdiskcache.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QNetworkCacheMetaData" signature="fileMetaData(const QString &amp; fileName) const">
                <parameter left="const QString &amp;" right="" name="fileName" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="insert" fullname="QNetworkDiskCache::insert" href="qnetworkdiskcache.html#insert" location="qnetworkdiskcache.h" virtual="impure" meta="plain" const="false" static="false" overload="false" type="void" signature="insert(QIODevice * device)">
                <parameter left="QIODevice *" right="" name="device" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="maximumCacheSize" fullname="QNetworkDiskCache::maximumCacheSize" href="qnetworkdiskcache.html#maximumCacheSize" location="qnetworkdiskcache.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="qint64" signature="maximumCacheSize() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="metaData" fullname="QNetworkDiskCache::metaData" href="qnetworkdiskcache.html#metaData" location="qnetworkdiskcache.h" virtual="impure" meta="plain" const="false" static="false" overload="false" type="QNetworkCacheMetaData" signature="metaData(const QUrl &amp; url)">
                <parameter left="const QUrl &amp;" right="" name="url" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="prepare" fullname="QNetworkDiskCache::prepare" href="qnetworkdiskcache.html#prepare" location="qnetworkdiskcache.h" virtual="impure" meta="plain" const="false" static="false" overload="false" type="QIODevice *" signature="prepare(const QNetworkCacheMetaData &amp; metaData)">
                <parameter left="const QNetworkCacheMetaData &amp;" right="" name="metaData" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="remove" fullname="QNetworkDiskCache::remove" href="qnetworkdiskcache.html#remove" location="qnetworkdiskcache.h" virtual="impure" meta="plain" const="false" static="false" overload="false" type="bool" signature="remove(const QUrl &amp; url)">
                <parameter left="const QUrl &amp;" right="" name="url" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setCacheDirectory" fullname="QNetworkDiskCache::setCacheDirectory" href="qnetworkdiskcache.html#setCacheDirectory" location="qnetworkdiskcache.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setCacheDirectory(const QString &amp; cacheDir)">
                <parameter left="const QString &amp;" right="" name="cacheDir" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setMaximumCacheSize" fullname="QNetworkDiskCache::setMaximumCacheSize" href="qnetworkdiskcache.html#setMaximumCacheSize" location="qnetworkdiskcache.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setMaximumCacheSize(qint64 size)">
                <parameter left="qint64" right="" name="size" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="updateMetaData" fullname="QNetworkDiskCache::updateMetaData" href="qnetworkdiskcache.html#updateMetaData" location="qnetworkdiskcache.h" virtual="impure" meta="plain" const="false" static="false" overload="false" type="void" signature="updateMetaData(const QNetworkCacheMetaData &amp; metaData)">
                <parameter left="const QNetworkCacheMetaData &amp;" right="" name="metaData" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="~QNetworkDiskCache" fullname="QNetworkDiskCache::~QNetworkDiskCache" href="qnetworkdiskcache.html#dtor.QNetworkDiskCache" location="qnetworkdiskcache.h" virtual="non" meta="destructor" const="false" static="false" overload="false" type="" signature="~QNetworkDiskCache()"/>
        </class>
        <class access="public" threadsafety="reentrant" status="commendable" name="QNetworkReply" href="qnetworkreply.html" location="qnetworkreply.h" since="4.4" bases="QIODevice" module="QtNetwork" groups="network">
            <function access="protected" threadsafety="unspecified" status="commendable" name="ignoreSslErrorsImplementation" fullname="QNetworkReply::ignoreSslErrorsImplementation" href="qnetworkreply.html#ignoreSslErrorsImplementation" location="qnetworkreply.cpp" since="5.0" virtual="impure" meta="plain" const="false" static="false" overload="false" type="void" signature="ignoreSslErrorsImplementation(const QList&lt;QSslError&gt; &amp; errors)">
                <parameter left="const QList&lt;QSslError&gt; &amp;" right="" name="errors" default=""/>
            </function>
            <function access="protected" threadsafety="unspecified" status="commendable" name="setSslConfigurationImplementation" fullname="QNetworkReply::setSslConfigurationImplementation" href="qnetworkreply.html#setSslConfigurationImplementation" location="qnetworkreply.cpp" since="5.0" virtual="impure" meta="plain" const="false" static="false" overload="false" type="void" signature="setSslConfigurationImplementation(const QSslConfiguration &amp; configuration)">
                <parameter left="const QSslConfiguration &amp;" right="" name="configuration" default=""/>
            </function>
            <function access="protected" threadsafety="unspecified" status="commendable" name="sslConfigurationImplementation" fullname="QNetworkReply::sslConfigurationImplementation" href="qnetworkreply.html#sslConfigurationImplementation" location="qnetworkreply.cpp" since="5.0" virtual="impure" meta="plain" const="true" static="false" overload="false" type="void" signature="sslConfigurationImplementation(QSslConfiguration &amp; configuration) const">
                <parameter left="QSslConfiguration &amp;" right="" name="configuration" default=""/>
            </function>
            <enum access="public" threadsafety="unspecified" status="commendable" name="NetworkError" fullname="QNetworkReply::NetworkError" href="qnetworkreply.html#NetworkError-enum" location="qnetworkreply.h">
                <value name="NoError" value="0"/>
                <value name="ConnectionRefusedError" value="1"/>
                <value name="RemoteHostClosedError" value="2"/>
                <value name="HostNotFoundError" value="3"/>
                <value name="TimeoutError" value="4"/>
                <value name="OperationCanceledError" value="5"/>
                <value name="SslHandshakeFailedError" value="6"/>
                <value name="TemporaryNetworkFailureError" value="7"/>
                <value name="NetworkSessionFailedError" value="8"/>
                <value name="BackgroundRequestNotAllowedError" value="9"/>
                <value name="UnknownNetworkError" value="99"/>
                <value name="ProxyConnectionRefusedError" value="101"/>
                <value name="ProxyConnectionClosedError" value="102"/>
                <value name="ProxyNotFoundError" value="103"/>
                <value name="ProxyTimeoutError" value="104"/>
                <value name="ProxyAuthenticationRequiredError" value="105"/>
                <value name="UnknownProxyError" value="199"/>
                <value name="ContentAccessDenied" value="201"/>
                <value name="ContentOperationNotPermittedError" value="202"/>
                <value name="ContentNotFoundError" value="203"/>
                <value name="AuthenticationRequiredError" value="204"/>
                <value name="ContentReSendError" value="205"/>
                <value name="UnknownContentError" value="299"/>
                <value name="ProtocolUnknownError" value="301"/>
                <value name="ProtocolInvalidOperationError" value="302"/>
                <value name="ProtocolFailure" value="399"/>
            </enum>
            <typedef access="public" threadsafety="unspecified" status="commendable" name="RawHeaderPair" fullname="QNetworkReply::RawHeaderPair" href="qnetworkreply.html#RawHeaderPair-typedef" location="qnetworkreply.h"/>
            <function access="protected" threadsafety="unspecified" status="commendable" name="QNetworkReply" fullname="QNetworkReply::QNetworkReply" href="qnetworkreply.html#QNetworkReply" location="qnetworkreply.h" virtual="non" meta="constructor" const="false" static="false" overload="false" type="" signature="QNetworkReply(QObject * parent)">
                <parameter left="QObject *" right="" name="parent" default="0"/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="abort" fullname="QNetworkReply::abort" href="qnetworkreply.html#abort" location="qnetworkreply.h" virtual="pure" meta="slot" const="false" static="false" overload="false" type="void" signature="abort()"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="attribute" fullname="QNetworkReply::attribute" href="qnetworkreply.html#attribute" location="qnetworkreply.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QVariant" signature="attribute(QNetworkRequest::Attribute code) const">
                <parameter left="QNetworkRequest::Attribute" right="" name="code" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="close" fullname="QNetworkReply::close" href="qnetworkreply.html#close" location="qnetworkreply.h" virtual="impure" meta="plain" const="false" static="false" overload="false" type="void" signature="close()"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="downloadProgress" fullname="QNetworkReply::downloadProgress" href="qnetworkreply.html#downloadProgress" location="qnetworkreply.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="downloadProgress(qint64 bytesReceived, qint64 bytesTotal)">
                <parameter left="qint64" right="" name="bytesReceived" default=""/>
                <parameter left="qint64" right="" name="bytesTotal" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="error" fullname="QNetworkReply::error" href="qnetworkreply.html#error-2" location="qnetworkreply.h" virtual="non" meta="signal" const="false" static="false" overload="true" overload-number="2" type="void" signature="error(QNetworkReply::NetworkError code)">
                <parameter left="QNetworkReply::NetworkError" right="" name="code" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="error" fullname="QNetworkReply::error" href="qnetworkreply.html#error" location="qnetworkreply.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="NetworkError" signature="error() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="finished" fullname="QNetworkReply::finished" href="qnetworkreply.html#finished" location="qnetworkreply.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="finished()"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="hasRawHeader" fullname="QNetworkReply::hasRawHeader" href="qnetworkreply.html#hasRawHeader" location="qnetworkreply.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="bool" signature="hasRawHeader(const QByteArray &amp; headerName) const">
                <parameter left="const QByteArray &amp;" right="" name="headerName" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="header" fullname="QNetworkReply::header" href="qnetworkreply.html#header" location="qnetworkreply.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QVariant" signature="header(QNetworkRequest::KnownHeaders header) const">
                <parameter left="QNetworkRequest::KnownHeaders" right="" name="header" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="ignoreSslErrors" fullname="QNetworkReply::ignoreSslErrors" href="qnetworkreply.html#ignoreSslErrors" location="qnetworkreply.h" virtual="impure" meta="slot" const="false" static="false" overload="false" type="void" signature="ignoreSslErrors()"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="ignoreSslErrors" fullname="QNetworkReply::ignoreSslErrors" href="qnetworkreply.html#ignoreSslErrors-2" location="qnetworkreply.h" since="4.6" virtual="non" meta="plain" const="false" static="false" overload="true" overload-number="2" type="void" signature="ignoreSslErrors(const QList&lt;QSslError&gt; &amp; errors)">
                <parameter left="const QList&lt;QSslError&gt; &amp;" right="" name="errors" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="isFinished" fullname="QNetworkReply::isFinished" href="qnetworkreply.html#isFinished" location="qnetworkreply.h" since="4.6" virtual="non" meta="plain" const="true" static="false" overload="false" type="bool" signature="isFinished() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="isRunning" fullname="QNetworkReply::isRunning" href="qnetworkreply.html#isRunning" location="qnetworkreply.h" since="4.6" virtual="non" meta="plain" const="true" static="false" overload="false" type="bool" signature="isRunning() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="manager" fullname="QNetworkReply::manager" href="qnetworkreply.html#manager" location="qnetworkreply.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QNetworkAccessManager *" signature="manager() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="metaDataChanged" fullname="QNetworkReply::metaDataChanged" href="qnetworkreply.html#metaDataChanged" location="qnetworkreply.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="metaDataChanged()"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="operation" fullname="QNetworkReply::operation" href="qnetworkreply.html#operation" location="qnetworkreply.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QNetworkAccessManager::Operation" signature="operation() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="rawHeader" fullname="QNetworkReply::rawHeader" href="qnetworkreply.html#rawHeader" location="qnetworkreply.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QByteArray" signature="rawHeader(const QByteArray &amp; headerName) const">
                <parameter left="const QByteArray &amp;" right="" name="headerName" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="rawHeaderList" fullname="QNetworkReply::rawHeaderList" href="qnetworkreply.html#rawHeaderList" location="qnetworkreply.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QList&lt;QByteArray&gt;" signature="rawHeaderList() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="rawHeaderPairs" fullname="QNetworkReply::rawHeaderPairs" href="qnetworkreply.html#rawHeaderPairs" location="qnetworkreply.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="const QList&lt;RawHeaderPair&gt; &amp;" signature="rawHeaderPairs() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="readBufferSize" fullname="QNetworkReply::readBufferSize" href="qnetworkreply.html#readBufferSize" location="qnetworkreply.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="qint64" signature="readBufferSize() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="request" fullname="QNetworkReply::request" href="qnetworkreply.html#request" location="qnetworkreply.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QNetworkRequest" signature="request() const"/>
            <function access="protected" threadsafety="unspecified" status="commendable" name="setAttribute" fullname="QNetworkReply::setAttribute" href="qnetworkreply.html#setAttribute" location="qnetworkreply.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setAttribute(QNetworkRequest::Attribute code, const QVariant &amp; value)">
                <parameter left="QNetworkRequest::Attribute" right="" name="code" default=""/>
                <parameter left="const QVariant &amp;" right="" name="value" default=""/>
            </function>
            <function access="protected" threadsafety="unspecified" status="commendable" name="setError" fullname="QNetworkReply::setError" href="qnetworkreply.html#setError" location="qnetworkreply.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setError(NetworkError errorCode, const QString &amp; errorString)">
                <parameter left="NetworkError" right="" name="errorCode" default=""/>
                <parameter left="const QString &amp;" right="" name="errorString" default=""/>
            </function>
            <function access="protected" threadsafety="unspecified" status="commendable" name="setFinished" fullname="QNetworkReply::setFinished" href="qnetworkreply.html#setFinished" location="qnetworkreply.h" since="4.8" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setFinished(bool finished)">
                <parameter left="bool" right="" name="finished" default=""/>
            </function>
            <function access="protected" threadsafety="unspecified" status="commendable" name="setHeader" fullname="QNetworkReply::setHeader" href="qnetworkreply.html#setHeader" location="qnetworkreply.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setHeader(QNetworkRequest::KnownHeaders header, const QVariant &amp; value)">
                <parameter left="QNetworkRequest::KnownHeaders" right="" name="header" default=""/>
                <parameter left="const QVariant &amp;" right="" name="value" default=""/>
            </function>
            <function access="protected" threadsafety="unspecified" status="commendable" name="setOperation" fullname="QNetworkReply::setOperation" href="qnetworkreply.html#setOperation" location="qnetworkreply.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setOperation(QNetworkAccessManager::Operation operation)">
                <parameter left="QNetworkAccessManager::Operation" right="" name="operation" default=""/>
            </function>
            <function access="protected" threadsafety="unspecified" status="commendable" name="setRawHeader" fullname="QNetworkReply::setRawHeader" href="qnetworkreply.html#setRawHeader" location="qnetworkreply.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setRawHeader(const QByteArray &amp; headerName, const QByteArray &amp; value)">
                <parameter left="const QByteArray &amp;" right="" name="headerName" default=""/>
                <parameter left="const QByteArray &amp;" right="" name="value" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setReadBufferSize" fullname="QNetworkReply::setReadBufferSize" href="qnetworkreply.html#setReadBufferSize" location="qnetworkreply.h" virtual="impure" meta="plain" const="false" static="false" overload="false" type="void" signature="setReadBufferSize(qint64 size)">
                <parameter left="qint64" right="" name="size" default=""/>
            </function>
            <function access="protected" threadsafety="unspecified" status="commendable" name="setRequest" fullname="QNetworkReply::setRequest" href="qnetworkreply.html#setRequest" location="qnetworkreply.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setRequest(const QNetworkRequest &amp; request)">
                <parameter left="const QNetworkRequest &amp;" right="" name="request" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setSslConfiguration" fullname="QNetworkReply::setSslConfiguration" href="qnetworkreply.html#setSslConfiguration" location="qnetworkreply.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setSslConfiguration(const QSslConfiguration &amp; config)">
                <parameter left="const QSslConfiguration &amp;" right="" name="config" default=""/>
            </function>
            <function access="protected" threadsafety="unspecified" status="commendable" name="setUrl" fullname="QNetworkReply::setUrl" href="qnetworkreply.html#setUrl" location="qnetworkreply.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setUrl(const QUrl &amp; url)">
                <parameter left="const QUrl &amp;" right="" name="url" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="sslConfiguration" fullname="QNetworkReply::sslConfiguration" href="qnetworkreply.html#sslConfiguration" location="qnetworkreply.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QSslConfiguration" signature="sslConfiguration() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="sslErrors" fullname="QNetworkReply::sslErrors" href="qnetworkreply.html#sslErrors" location="qnetworkreply.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="sslErrors(const QList&lt;QSslError&gt; &amp; errors)">
                <parameter left="const QList&lt;QSslError&gt; &amp;" right="" name="errors" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="uploadProgress" fullname="QNetworkReply::uploadProgress" href="qnetworkreply.html#uploadProgress" location="qnetworkreply.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="uploadProgress(qint64 bytesSent, qint64 bytesTotal)">
                <parameter left="qint64" right="" name="bytesSent" default=""/>
                <parameter left="qint64" right="" name="bytesTotal" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="url" fullname="QNetworkReply::url" href="qnetworkreply.html#url" location="qnetworkreply.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QUrl" signature="url() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="~QNetworkReply" fullname="QNetworkReply::~QNetworkReply" href="qnetworkreply.html#dtor.QNetworkReply" location="qnetworkreply.h" virtual="non" meta="destructor" const="false" static="false" overload="false" type="" signature="~QNetworkReply()"/>
        </class>
        <class access="public" threadsafety="unspecified" status="commendable" name="QNetworkRequest" href="qnetworkrequest.html" location="qnetworkrequest.h" since="4.4" bases="" module="QtNetwork" groups="network,shared">
            <enum access="public" threadsafety="unspecified" status="commendable" name="Attribute" fullname="QNetworkRequest::Attribute" href="qnetworkrequest.html#Attribute-enum" location="qnetworkrequest.h" since="4.7">
                <value name="HttpStatusCodeAttribute" value="0"/>
                <value name="HttpReasonPhraseAttribute" value="1"/>
                <value name="RedirectionTargetAttribute" value="2"/>
                <value name="ConnectionEncryptedAttribute" value="3"/>
                <value name="CacheLoadControlAttribute" value="4"/>
                <value name="CacheSaveControlAttribute" value="5"/>
                <value name="SourceIsFromCacheAttribute" value="6"/>
                <value name="DoNotBufferUploadDataAttribute" value="7"/>
                <value name="HttpPipeliningAllowedAttribute" value="8"/>
                <value name="HttpPipeliningWasUsedAttribute" value="9"/>
                <value name="CustomVerbAttribute" value="10"/>
                <value name="CookieLoadControlAttribute" value="11"/>
                <value name="AuthenticationReuseAttribute" value="12"/>
                <value name="CookieSaveControlAttribute" value="13"/>
                <value name="MaximumDownloadBufferSizeAttribute" value="14"/>
                <value name="DownloadBufferAttribute" value="15"/>
                <value name="SynchronousRequestAttribute" value="16"/>
                <value name="BackgroundRequestAttribute" value="17"/>
                <value name="User" value="1000"/>
                <value name="UserMax" value="32767"/>
            </enum>
            <enum access="public" threadsafety="unspecified" status="commendable" name="CacheLoadControl" fullname="QNetworkRequest::CacheLoadControl" href="qnetworkrequest.html#CacheLoadControl-enum" location="qnetworkrequest.h">
                <value name="AlwaysNetwork" value="0"/>
                <value name="PreferNetwork" value="1"/>
                <value name="PreferCache" value="2"/>
                <value name="AlwaysCache" value="3"/>
            </enum>
            <enum access="public" threadsafety="unspecified" status="commendable" name="KnownHeaders" fullname="QNetworkRequest::KnownHeaders" href="qnetworkrequest.html#KnownHeaders-enum" location="qnetworkrequest.h">
                <value name="ContentTypeHeader" value="0"/>
                <value name="ContentLengthHeader" value="1"/>
                <value name="LocationHeader" value="2"/>
                <value name="LastModifiedHeader" value="3"/>
                <value name="CookieHeader" value="4"/>
                <value name="SetCookieHeader" value="5"/>
                <value name="ContentDispositionHeader" value="6"/>
                <value name="UserAgentHeader" value="7"/>
                <value name="ServerHeader" value="8"/>
            </enum>
            <enum access="public" threadsafety="unspecified" status="commendable" name="LoadControl" fullname="QNetworkRequest::LoadControl" href="qnetworkrequest.html#LoadControl-enum" location="qnetworkrequest.h" since="4.7">
                <value name="Automatic" value="0"/>
                <value name="Manual" value="1"/>
            </enum>
            <enum access="public" threadsafety="unspecified" status="commendable" name="Priority" fullname="QNetworkRequest::Priority" href="qnetworkrequest.html#Priority-enum" location="qnetworkrequest.h" since="4.7">
                <value name="HighPriority" value="1"/>
                <value name="NormalPriority" value="3"/>
                <value name="LowPriority" value="5"/>
            </enum>
            <function access="public" threadsafety="unspecified" status="commendable" name="QNetworkRequest" fullname="QNetworkRequest::QNetworkRequest" href="qnetworkrequest.html#QNetworkRequest-2" location="qnetworkrequest.h" virtual="non" meta="constructor" const="false" static="false" overload="true" overload-number="2" type="" signature="QNetworkRequest(const QNetworkRequest &amp; other)">
                <parameter left="const QNetworkRequest &amp;" right="" name="other" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="QNetworkRequest" fullname="QNetworkRequest::QNetworkRequest" href="qnetworkrequest.html#QNetworkRequest" location="qnetworkrequest.h" virtual="non" meta="constructor" const="false" static="false" overload="false" type="" signature="QNetworkRequest(const QUrl &amp; url)">
                <parameter left="const QUrl &amp;" right="" name="url" default="QUrl()"/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="attribute" fullname="QNetworkRequest::attribute" href="qnetworkrequest.html#attribute" location="qnetworkrequest.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QVariant" signature="attribute(Attribute code, const QVariant &amp; defaultValue) const">
                <parameter left="Attribute" right="" name="code" default=""/>
                <parameter left="const QVariant &amp;" right="" name="defaultValue" default="QVariant()"/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="hasRawHeader" fullname="QNetworkRequest::hasRawHeader" href="qnetworkrequest.html#hasRawHeader" location="qnetworkrequest.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="bool" signature="hasRawHeader(const QByteArray &amp; headerName) const">
                <parameter left="const QByteArray &amp;" right="" name="headerName" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="header" fullname="QNetworkRequest::header" href="qnetworkrequest.html#header" location="qnetworkrequest.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QVariant" signature="header(KnownHeaders header) const">
                <parameter left="KnownHeaders" right="" name="header" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="operator!=" fullname="QNetworkRequest::operator!=" href="qnetworkrequest.html#operator!=" location="qnetworkrequest.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="bool" signature="operator!=(const QNetworkRequest &amp; other) const">
                <parameter left="const QNetworkRequest &amp;" right="" name="other" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="operator=" fullname="QNetworkRequest::operator=" href="qnetworkrequest.html#operator=" location="qnetworkrequest.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="QNetworkRequest &amp;" signature="operator=(const QNetworkRequest &amp; other)">
                <parameter left="const QNetworkRequest &amp;" right="" name="other" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="operator==" fullname="QNetworkRequest::operator==" href="qnetworkrequest.html#operator==" location="qnetworkrequest.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="bool" signature="operator==(const QNetworkRequest &amp; other) const">
                <parameter left="const QNetworkRequest &amp;" right="" name="other" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="originatingObject" fullname="QNetworkRequest::originatingObject" href="qnetworkrequest.html#originatingObject" location="qnetworkrequest.h" since="4.6" virtual="non" meta="plain" const="true" static="false" overload="false" type="QObject *" signature="originatingObject() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="priority" fullname="QNetworkRequest::priority" href="qnetworkrequest.html#priority" location="qnetworkrequest.h" since="4.7" virtual="non" meta="plain" const="true" static="false" overload="false" type="Priority" signature="priority() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="rawHeader" fullname="QNetworkRequest::rawHeader" href="qnetworkrequest.html#rawHeader" location="qnetworkrequest.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QByteArray" signature="rawHeader(const QByteArray &amp; headerName) const">
                <parameter left="const QByteArray &amp;" right="" name="headerName" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="rawHeaderList" fullname="QNetworkRequest::rawHeaderList" href="qnetworkrequest.html#rawHeaderList" location="qnetworkrequest.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QList&lt;QByteArray&gt;" signature="rawHeaderList() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="setAttribute" fullname="QNetworkRequest::setAttribute" href="qnetworkrequest.html#setAttribute" location="qnetworkrequest.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setAttribute(Attribute code, const QVariant &amp; value)">
                <parameter left="Attribute" right="" name="code" default=""/>
                <parameter left="const QVariant &amp;" right="" name="value" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setHeader" fullname="QNetworkRequest::setHeader" href="qnetworkrequest.html#setHeader" location="qnetworkrequest.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setHeader(KnownHeaders header, const QVariant &amp; value)">
                <parameter left="KnownHeaders" right="" name="header" default=""/>
                <parameter left="const QVariant &amp;" right="" name="value" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setOriginatingObject" fullname="QNetworkRequest::setOriginatingObject" href="qnetworkrequest.html#setOriginatingObject" location="qnetworkrequest.h" since="4.6" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setOriginatingObject(QObject * object)">
                <parameter left="QObject *" right="" name="object" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setPriority" fullname="QNetworkRequest::setPriority" href="qnetworkrequest.html#setPriority" location="qnetworkrequest.h" since="4.7" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setPriority(Priority priority)">
                <parameter left="Priority" right="" name="priority" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setRawHeader" fullname="QNetworkRequest::setRawHeader" href="qnetworkrequest.html#setRawHeader" location="qnetworkrequest.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setRawHeader(const QByteArray &amp; headerName, const QByteArray &amp; headerValue)">
                <parameter left="const QByteArray &amp;" right="" name="headerName" default=""/>
                <parameter left="const QByteArray &amp;" right="" name="headerValue" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setSslConfiguration" fullname="QNetworkRequest::setSslConfiguration" href="qnetworkrequest.html#setSslConfiguration" location="qnetworkrequest.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setSslConfiguration(const QSslConfiguration &amp; config)">
                <parameter left="const QSslConfiguration &amp;" right="" name="config" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setUrl" fullname="QNetworkRequest::setUrl" href="qnetworkrequest.html#setUrl" location="qnetworkrequest.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setUrl(const QUrl &amp; url)">
                <parameter left="const QUrl &amp;" right="" name="url" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="sslConfiguration" fullname="QNetworkRequest::sslConfiguration" href="qnetworkrequest.html#sslConfiguration" location="qnetworkrequest.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QSslConfiguration" signature="sslConfiguration() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="swap" fullname="QNetworkRequest::swap" href="qnetworkrequest.html#swap" location="qnetworkrequest.h" since="5.0" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="swap(QNetworkRequest &amp; other)">
                <parameter left="QNetworkRequest &amp;" right="" name="other" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="url" fullname="QNetworkRequest::url" href="qnetworkrequest.html#url" location="qnetworkrequest.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QUrl" signature="url() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="~QNetworkRequest" fullname="QNetworkRequest::~QNetworkRequest" href="qnetworkrequest.html#dtor.QNetworkRequest" location="qnetworkrequest.h" virtual="non" meta="destructor" const="false" static="false" overload="false" type="" signature="~QNetworkRequest()"/>
        </class>
        <class access="public" threadsafety="unspecified" status="commendable" name="QNetworkConfigurationManager" href="qnetworkconfigurationmanager.html" location="qnetworkconfigmanager.h" since="4.7" bases="QObject" module="QtNetwork" groups="network">
            <enum access="public" threadsafety="unspecified" status="commendable" name="Capability" fullname="QNetworkConfigurationManager::Capability" href="qnetworkconfigurationmanager.html#Capability-enum" location="qnetworkconfigmanager.h" typedef="QNetworkConfigurationManager::Capabilities">
                <value name="CanStartAndStopInterfaces" value="0x00000001"/>
                <value name="DirectConnectionRouting" value="0x00000002"/>
                <value name="SystemSessionSupport" value="0x00000004"/>
                <value name="ApplicationLevelRoaming" value="0x00000008"/>
                <value name="ForcedRoaming" value="0x00000010"/>
                <value name="DataStatistics" value="0x00000020"/>
                <value name="NetworkSessionRequired" value="0x00000040"/>
            </enum>
            <typedef access="public" threadsafety="unspecified" status="commendable" name="Capabilities" fullname="QNetworkConfigurationManager::Capabilities" href="qnetworkconfigurationmanager.html#Capabilities-typedef" location="qnetworkconfigmanager.h" enum="QNetworkConfigurationManager::Capability"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="QNetworkConfigurationManager" fullname="QNetworkConfigurationManager::QNetworkConfigurationManager" href="qnetworkconfigurationmanager.html#QNetworkConfigurationManager" location="qnetworkconfigmanager.h" virtual="non" meta="constructor" const="false" static="false" overload="false" type="" signature="QNetworkConfigurationManager(QObject * parent)">
                <parameter left="QObject *" right="" name="parent" default="0"/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="allConfigurations" fullname="QNetworkConfigurationManager::allConfigurations" href="qnetworkconfigurationmanager.html#allConfigurations" location="qnetworkconfigmanager.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QList&lt;QNetworkConfiguration&gt;" signature="allConfigurations(QFlags&lt;QNetworkConfiguration::StateFlag&gt; filter) const">
                <parameter left="QFlags&lt;QNetworkConfiguration::StateFlag&gt;" right="" name="filter" default="0"/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="capabilities" fullname="QNetworkConfigurationManager::capabilities" href="qnetworkconfigurationmanager.html#capabilities" location="qnetworkconfigmanager.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QNetworkConfigurationManager::Capabilities" signature="capabilities() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="configurationAdded" fullname="QNetworkConfigurationManager::configurationAdded" href="qnetworkconfigurationmanager.html#configurationAdded" location="qnetworkconfigmanager.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="configurationAdded(const QNetworkConfiguration &amp; config)">
                <parameter left="const QNetworkConfiguration &amp;" right="" name="config" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="configurationChanged" fullname="QNetworkConfigurationManager::configurationChanged" href="qnetworkconfigurationmanager.html#configurationChanged" location="qnetworkconfigmanager.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="configurationChanged(const QNetworkConfiguration &amp; config)">
                <parameter left="const QNetworkConfiguration &amp;" right="" name="config" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="configurationFromIdentifier" fullname="QNetworkConfigurationManager::configurationFromIdentifier" href="qnetworkconfigurationmanager.html#configurationFromIdentifier" location="qnetworkconfigmanager.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QNetworkConfiguration" signature="configurationFromIdentifier(const QString &amp; identifier) const">
                <parameter left="const QString &amp;" right="" name="identifier" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="configurationRemoved" fullname="QNetworkConfigurationManager::configurationRemoved" href="qnetworkconfigurationmanager.html#configurationRemoved" location="qnetworkconfigmanager.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="configurationRemoved(const QNetworkConfiguration &amp; config)">
                <parameter left="const QNetworkConfiguration &amp;" right="" name="config" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="defaultConfiguration" fullname="QNetworkConfigurationManager::defaultConfiguration" href="qnetworkconfigurationmanager.html#defaultConfiguration" location="qnetworkconfigmanager.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QNetworkConfiguration" signature="defaultConfiguration() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="isOnline" fullname="QNetworkConfigurationManager::isOnline" href="qnetworkconfigurationmanager.html#isOnline" location="qnetworkconfigmanager.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="bool" signature="isOnline() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="onlineStateChanged" fullname="QNetworkConfigurationManager::onlineStateChanged" href="qnetworkconfigurationmanager.html#onlineStateChanged" location="qnetworkconfigmanager.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="onlineStateChanged(bool isOnline)">
                <parameter left="bool" right="" name="isOnline" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="updateCompleted" fullname="QNetworkConfigurationManager::updateCompleted" href="qnetworkconfigurationmanager.html#updateCompleted" location="qnetworkconfigmanager.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="updateCompleted()"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="updateConfigurations" fullname="QNetworkConfigurationManager::updateConfigurations" href="qnetworkconfigurationmanager.html#updateConfigurations" location="qnetworkconfigmanager.h" virtual="non" meta="slot" const="false" static="false" overload="false" type="void" signature="updateConfigurations()"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="~QNetworkConfigurationManager" fullname="QNetworkConfigurationManager::~QNetworkConfigurationManager" href="qnetworkconfigurationmanager.html#dtor.QNetworkConfigurationManager" location="qnetworkconfigmanager.h" virtual="impure" meta="destructor" const="false" static="false" overload="false" type="" signature="~QNetworkConfigurationManager()"/>
        </class>
        <class access="public" threadsafety="unspecified" status="commendable" name="QNetworkConfiguration" href="qnetworkconfiguration.html" location="qnetworkconfiguration.h" since="4.7" bases="" module="QtNetwork" groups="network,shared">
            <contents name="configuration-states" title="Configuration states" level="1"/>
            <enum access="public" threadsafety="unspecified" status="commendable" name="BearerType" fullname="QNetworkConfiguration::BearerType" href="qnetworkconfiguration.html#BearerType-enum" location="qnetworkconfiguration.h">
                <value name="BearerUnknown" value="0"/>
                <value name="BearerEthernet" value="1"/>
                <value name="BearerWLAN" value="2"/>
                <value name="Bearer2G" value="3"/>
                <value name="BearerCDMA2000" value="4"/>
                <value name="BearerWCDMA" value="5"/>
                <value name="BearerHSPA" value="6"/>
                <value name="BearerBluetooth" value="7"/>
                <value name="BearerWiMAX" value="8"/>
            </enum>
            <enum access="public" threadsafety="unspecified" status="commendable" name="Purpose" fullname="QNetworkConfiguration::Purpose" href="qnetworkconfiguration.html#Purpose-enum" location="qnetworkconfiguration.h">
                <value name="UnknownPurpose" value="0"/>
                <value name="PublicPurpose" value="1"/>
                <value name="PrivatePurpose" value="2"/>
                <value name="ServiceSpecificPurpose" value="3"/>
            </enum>
            <enum access="public" threadsafety="unspecified" status="commendable" name="StateFlag" fullname="QNetworkConfiguration::StateFlag" href="qnetworkconfiguration.html#StateFlag-enum" location="qnetworkconfiguration.h" typedef="QNetworkConfiguration::StateFlags">
                <value name="Undefined" value="0x0000001"/>
                <value name="Defined" value="0x0000002"/>
                <value name="Discovered" value="0x0000006"/>
                <value name="Active" value="0x000000e"/>
            </enum>
            <enum access="public" threadsafety="unspecified" status="commendable" name="Type" fullname="QNetworkConfiguration::Type" href="qnetworkconfiguration.html#Type-enum" location="qnetworkconfiguration.h">
                <value name="InternetAccessPoint" value="0"/>
                <value name="ServiceNetwork" value="1"/>
                <value name="UserChoice" value="2"/>
                <value name="Invalid" value="3"/>
            </enum>
            <typedef access="public" threadsafety="unspecified" status="commendable" name="StateFlags" fullname="QNetworkConfiguration::StateFlags" href="qnetworkconfiguration.html#StateFlags-typedef" location="qnetworkconfiguration.h" enum="QNetworkConfiguration::StateFlag"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="QNetworkConfiguration" fullname="QNetworkConfiguration::QNetworkConfiguration" href="qnetworkconfiguration.html#QNetworkConfiguration" location="qnetworkconfiguration.h" virtual="non" meta="constructor" const="false" static="false" overload="false" type="" signature="QNetworkConfiguration()"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="QNetworkConfiguration" fullname="QNetworkConfiguration::QNetworkConfiguration" href="qnetworkconfiguration.html#QNetworkConfiguration-2" location="qnetworkconfiguration.h" virtual="non" meta="constructor" const="false" static="false" overload="true" overload-number="2" type="" signature="QNetworkConfiguration(const QNetworkConfiguration &amp; other)">
                <parameter left="const QNetworkConfiguration &amp;" right="" name="other" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="bearerType" fullname="QNetworkConfiguration::bearerType" href="qnetworkconfiguration.html#bearerType" location="qnetworkconfiguration.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="BearerType" signature="bearerType() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="bearerTypeName" fullname="QNetworkConfiguration::bearerTypeName" href="qnetworkconfiguration.html#bearerTypeName" location="qnetworkconfiguration.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QString" signature="bearerTypeName() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="children" fullname="QNetworkConfiguration::children" href="qnetworkconfiguration.html#children" location="qnetworkconfiguration.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QList&lt;QNetworkConfiguration&gt;" signature="children() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="identifier" fullname="QNetworkConfiguration::identifier" href="qnetworkconfiguration.html#identifier" location="qnetworkconfiguration.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QString" signature="identifier() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="isRoamingAvailable" fullname="QNetworkConfiguration::isRoamingAvailable" href="qnetworkconfiguration.html#isRoamingAvailable" location="qnetworkconfiguration.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="bool" signature="isRoamingAvailable() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="isValid" fullname="QNetworkConfiguration::isValid" href="qnetworkconfiguration.html#isValid" location="qnetworkconfiguration.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="bool" signature="isValid() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="name" fullname="QNetworkConfiguration::name" href="qnetworkconfiguration.html#name" location="qnetworkconfiguration.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QString" signature="name() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="operator!=" fullname="QNetworkConfiguration::operator!=" href="qnetworkconfiguration.html#operator!=" location="qnetworkconfiguration.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="bool" signature="operator!=(const QNetworkConfiguration &amp; other) const">
                <parameter left="const QNetworkConfiguration &amp;" right="" name="other" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="operator=" fullname="QNetworkConfiguration::operator=" href="qnetworkconfiguration.html#operator=" location="qnetworkconfiguration.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="QNetworkConfiguration &amp;" signature="operator=(const QNetworkConfiguration &amp; other)">
                <parameter left="const QNetworkConfiguration &amp;" right="" name="other" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="operator==" fullname="QNetworkConfiguration::operator==" href="qnetworkconfiguration.html#operator==" location="qnetworkconfiguration.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="bool" signature="operator==(const QNetworkConfiguration &amp; other) const">
                <parameter left="const QNetworkConfiguration &amp;" right="" name="other" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="purpose" fullname="QNetworkConfiguration::purpose" href="qnetworkconfiguration.html#purpose" location="qnetworkconfiguration.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="Purpose" signature="purpose() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="state" fullname="QNetworkConfiguration::state" href="qnetworkconfiguration.html#state" location="qnetworkconfiguration.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="StateFlags" signature="state() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="swap" fullname="QNetworkConfiguration::swap" href="qnetworkconfiguration.html#swap" location="qnetworkconfiguration.h" since="5.0" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="swap(QNetworkConfiguration &amp; other)">
                <parameter left="QNetworkConfiguration &amp;" right="" name="other" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="type" fullname="QNetworkConfiguration::type" href="qnetworkconfiguration.html#type" location="qnetworkconfiguration.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="Type" signature="type() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="~QNetworkConfiguration" fullname="QNetworkConfiguration::~QNetworkConfiguration" href="qnetworkconfiguration.html#dtor.QNetworkConfiguration" location="qnetworkconfiguration.h" virtual="non" meta="destructor" const="false" static="false" overload="false" type="" signature="~QNetworkConfiguration()"/>
        </class>
        <class access="public" threadsafety="unspecified" status="commendable" name="QNetworkSession" href="qnetworksession.html" location="qnetworksession.h" since="4.7" bases="QObject" module="QtNetwork" groups="network">
            <contents name="roaming" title="Roaming" level="1"/>
            <enum access="public" threadsafety="unspecified" status="commendable" name="SessionError" fullname="QNetworkSession::SessionError" href="qnetworksession.html#SessionError-enum" location="qnetworksession.h">
                <value name="UnknownSessionError" value="0"/>
                <value name="SessionAbortedError" value="1"/>
                <value name="RoamingError" value="2"/>
                <value name="OperationNotSupportedError" value="3"/>
                <value name="InvalidConfigurationError" value="4"/>
            </enum>
            <enum access="public" threadsafety="unspecified" status="commendable" name="State" fullname="QNetworkSession::State" href="qnetworksession.html#State-enum" location="qnetworksession.h">
                <value name="Invalid" value="0"/>
                <value name="NotAvailable" value="1"/>
                <value name="Connecting" value="2"/>
                <value name="Connected" value="3"/>
                <value name="Closing" value="4"/>
                <value name="Disconnected" value="5"/>
                <value name="Roaming" value="6"/>
            </enum>
            <enum access="public" threadsafety="unspecified" status="commendable" name="UsagePolicy" fullname="QNetworkSession::UsagePolicy" href="qnetworksession.html#UsagePolicy-enum" location="qnetworksession.h" since="5.0" typedef="QNetworkSession::UsagePolicies">
                <value name="NoPolicy" value="0"/>
                <value name="NoBackgroundTrafficPolicy" value="1"/>
            </enum>
            <typedef access="public" threadsafety="unspecified" status="commendable" name="UsagePolicies" fullname="QNetworkSession::UsagePolicies" href="qnetworksession.html#UsagePolicies-typedef" location="qnetworksession.h" enum="QNetworkSession::UsagePolicy"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="QNetworkSession" fullname="QNetworkSession::QNetworkSession" href="qnetworksession.html#QNetworkSession" location="qnetworksession.h" virtual="non" meta="constructor" const="false" static="false" overload="false" type="" signature="QNetworkSession(const QNetworkConfiguration &amp; connectionConfig, QObject * parent)">
                <parameter left="const QNetworkConfiguration &amp;" right="" name="connectionConfig" default=""/>
                <parameter left="QObject *" right="" name="parent" default="0"/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="accept" fullname="QNetworkSession::accept" href="qnetworksession.html#accept" location="qnetworksession.h" virtual="non" meta="slot" const="false" static="false" overload="false" type="void" signature="accept()"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="activeTime" fullname="QNetworkSession::activeTime" href="qnetworksession.html#activeTime" location="qnetworksession.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="quint64" signature="activeTime() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="bytesReceived" fullname="QNetworkSession::bytesReceived" href="qnetworksession.html#bytesReceived" location="qnetworksession.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="quint64" signature="bytesReceived() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="bytesWritten" fullname="QNetworkSession::bytesWritten" href="qnetworksession.html#bytesWritten" location="qnetworksession.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="quint64" signature="bytesWritten() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="close" fullname="QNetworkSession::close" href="qnetworksession.html#close" location="qnetworksession.h" virtual="non" meta="slot" const="false" static="false" overload="false" type="void" signature="close()"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="closed" fullname="QNetworkSession::closed" href="qnetworksession.html#closed" location="qnetworksession.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="closed()"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="configuration" fullname="QNetworkSession::configuration" href="qnetworksession.html#configuration" location="qnetworksession.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QNetworkConfiguration" signature="configuration() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="error" fullname="QNetworkSession::error" href="qnetworksession.html#error-2" location="qnetworksession.h" virtual="non" meta="signal" const="false" static="false" overload="true" overload-number="2" type="void" signature="error(QNetworkSession::SessionError error)">
                <parameter left="QNetworkSession::SessionError" right="" name="error" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="error" fullname="QNetworkSession::error" href="qnetworksession.html#error" location="qnetworksession.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="SessionError" signature="error() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="errorString" fullname="QNetworkSession::errorString" href="qnetworksession.html#errorString" location="qnetworksession.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QString" signature="errorString() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="ignore" fullname="QNetworkSession::ignore" href="qnetworksession.html#ignore" location="qnetworksession.h" virtual="non" meta="slot" const="false" static="false" overload="false" type="void" signature="ignore()"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="interface" fullname="QNetworkSession::interface" href="qnetworksession.html#interface" location="qnetworksession.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QNetworkInterface" signature="interface() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="isOpen" fullname="QNetworkSession::isOpen" href="qnetworksession.html#isOpen" location="qnetworksession.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="bool" signature="isOpen() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="migrate" fullname="QNetworkSession::migrate" href="qnetworksession.html#migrate" location="qnetworksession.h" virtual="non" meta="slot" const="false" static="false" overload="false" type="void" signature="migrate()"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="newConfigurationActivated" fullname="QNetworkSession::newConfigurationActivated" href="qnetworksession.html#newConfigurationActivated" location="qnetworksession.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="newConfigurationActivated()"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="open" fullname="QNetworkSession::open" href="qnetworksession.html#open" location="qnetworksession.h" virtual="non" meta="slot" const="false" static="false" overload="false" type="void" signature="open()"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="opened" fullname="QNetworkSession::opened" href="qnetworksession.html#opened" location="qnetworksession.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="opened()"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="preferredConfigurationChanged" fullname="QNetworkSession::preferredConfigurationChanged" href="qnetworksession.html#preferredConfigurationChanged" location="qnetworksession.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="preferredConfigurationChanged(const QNetworkConfiguration &amp; config, bool isSeamless)">
                <parameter left="const QNetworkConfiguration &amp;" right="" name="config" default=""/>
                <parameter left="bool" right="" name="isSeamless" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="reject" fullname="QNetworkSession::reject" href="qnetworksession.html#reject" location="qnetworksession.h" virtual="non" meta="slot" const="false" static="false" overload="false" type="void" signature="reject()"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="sessionProperty" fullname="QNetworkSession::sessionProperty" href="qnetworksession.html#sessionProperty" location="qnetworksession.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QVariant" signature="sessionProperty(const QString &amp; key) const">
                <parameter left="const QString &amp;" right="" name="key" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setSessionProperty" fullname="QNetworkSession::setSessionProperty" href="qnetworksession.html#setSessionProperty" location="qnetworksession.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setSessionProperty(const QString &amp; key, const QVariant &amp; value)">
                <parameter left="const QString &amp;" right="" name="key" default=""/>
                <parameter left="const QVariant &amp;" right="" name="value" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="state" fullname="QNetworkSession::state" href="qnetworksession.html#state" location="qnetworksession.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="State" signature="state() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="stateChanged" fullname="QNetworkSession::stateChanged" href="qnetworksession.html#stateChanged" location="qnetworksession.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="stateChanged(QNetworkSession::State state)">
                <parameter left="QNetworkSession::State" right="" name="state" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="stop" fullname="QNetworkSession::stop" href="qnetworksession.html#stop" location="qnetworksession.h" virtual="non" meta="slot" const="false" static="false" overload="false" type="void" signature="stop()"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="usagePolicies" fullname="QNetworkSession::usagePolicies" href="qnetworksession.html#usagePolicies" location="qnetworksession.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QNetworkSession::UsagePolicies" signature="usagePolicies() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="usagePoliciesChanged" fullname="QNetworkSession::usagePoliciesChanged" href="qnetworksession.html#usagePoliciesChanged" location="qnetworksession.h" since="5.0" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="usagePoliciesChanged(QFlags&lt;QNetworkSession::UsagePolicy&gt; usagePolicies)">
                <parameter left="QFlags&lt;QNetworkSession::UsagePolicy&gt;" right="" name="usagePolicies" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="waitForOpened" fullname="QNetworkSession::waitForOpened" href="qnetworksession.html#waitForOpened" location="qnetworksession.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="bool" signature="waitForOpened(int msecs)">
                <parameter left="int" right="" name="msecs" default="30000"/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="~QNetworkSession" fullname="QNetworkSession::~QNetworkSession" href="qnetworksession.html#dtor.QNetworkSession" location="qnetworksession.h" virtual="impure" meta="destructor" const="false" static="false" overload="false" type="" signature="~QNetworkSession()"/>
        </class>
        <class access="public" threadsafety="reentrant" status="commendable" name="QAuthenticator" href="qauthenticator.html" location="qauthenticator.h" since="4.3" bases="" module="QtNetwork" groups="network">
            <contents name="options" title="Options" level="1"/>
            <contents name="basic" title="Basic" level="2"/>
            <contents name="ntlm-version-2" title="NTLM version 2" level="2"/>
            <contents name="digest-md5" title="Digest-MD5" level="2"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="QAuthenticator" fullname="QAuthenticator::QAuthenticator" href="qauthenticator.html#QAuthenticator" location="qauthenticator.h" virtual="non" meta="constructor" const="false" static="false" overload="false" type="" signature="QAuthenticator()"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="QAuthenticator" fullname="QAuthenticator::QAuthenticator" href="qauthenticator.html#QAuthenticator-2" location="qauthenticator.h" virtual="non" meta="constructor" const="false" static="false" overload="true" overload-number="2" type="" signature="QAuthenticator(const QAuthenticator &amp; other)">
                <parameter left="const QAuthenticator &amp;" right="" name="other" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="isNull" fullname="QAuthenticator::isNull" href="qauthenticator.html#isNull" location="qauthenticator.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="bool" signature="isNull() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="operator!=" fullname="QAuthenticator::operator!=" href="qauthenticator.html#operator!=" location="qauthenticator.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="bool" signature="operator!=(const QAuthenticator &amp; other) const">
                <parameter left="const QAuthenticator &amp;" right="" name="other" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="operator=" fullname="QAuthenticator::operator=" href="qauthenticator.html#operator=" location="qauthenticator.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="QAuthenticator &amp;" signature="operator=(const QAuthenticator &amp; other)">
                <parameter left="const QAuthenticator &amp;" right="" name="other" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="operator==" fullname="QAuthenticator::operator==" href="qauthenticator.html#operator==" location="qauthenticator.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="bool" signature="operator==(const QAuthenticator &amp; other) const">
                <parameter left="const QAuthenticator &amp;" right="" name="other" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="option" fullname="QAuthenticator::option" href="qauthenticator.html#option" location="qauthenticator.h" since="4.7" virtual="non" meta="plain" const="true" static="false" overload="false" type="QVariant" signature="option(const QString &amp; opt) const">
                <parameter left="const QString &amp;" right="" name="opt" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="options" fullname="QAuthenticator::options" href="qauthenticator.html#options" location="qauthenticator.h" since="4.7" virtual="non" meta="plain" const="true" static="false" overload="false" type="QVariantHash" signature="options() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="password" fullname="QAuthenticator::password" href="qauthenticator.html#password" location="qauthenticator.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QString" signature="password() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="realm" fullname="QAuthenticator::realm" href="qauthenticator.html#realm" location="qauthenticator.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QString" signature="realm() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="setOption" fullname="QAuthenticator::setOption" href="qauthenticator.html#setOption" location="qauthenticator.h" since="4.7" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setOption(const QString &amp; opt, const QVariant &amp; value)">
                <parameter left="const QString &amp;" right="" name="opt" default=""/>
                <parameter left="const QVariant &amp;" right="" name="value" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setPassword" fullname="QAuthenticator::setPassword" href="qauthenticator.html#setPassword" location="qauthenticator.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setPassword(const QString &amp; password)">
                <parameter left="const QString &amp;" right="" name="password" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setUser" fullname="QAuthenticator::setUser" href="qauthenticator.html#setUser" location="qauthenticator.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setUser(const QString &amp; user)">
                <parameter left="const QString &amp;" right="" name="user" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="user" fullname="QAuthenticator::user" href="qauthenticator.html#user" location="qauthenticator.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QString" signature="user() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="~QAuthenticator" fullname="QAuthenticator::~QAuthenticator" href="qauthenticator.html#dtor.QAuthenticator" location="qauthenticator.h" virtual="non" meta="destructor" const="false" static="false" overload="false" type="" signature="~QAuthenticator()"/>
        </class>
        <class access="public" threadsafety="unspecified" status="commendable" name="QDnsDomainNameRecord" href="qdnsdomainnamerecord.html" location="qdnslookup.h" bases="" module="QtNetwork" groups="network,shared">
            <function access="public" threadsafety="unspecified" status="commendable" name="QDnsDomainNameRecord" fullname="QDnsDomainNameRecord::QDnsDomainNameRecord" href="qdnsdomainnamerecord.html#QDnsDomainNameRecord" location="qdnslookup.h" virtual="non" meta="constructor" const="false" static="false" overload="false" type="" signature="QDnsDomainNameRecord()"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="QDnsDomainNameRecord" fullname="QDnsDomainNameRecord::QDnsDomainNameRecord" href="qdnsdomainnamerecord.html#QDnsDomainNameRecord-2" location="qdnslookup.h" virtual="non" meta="constructor" const="false" static="false" overload="true" overload-number="2" type="" signature="QDnsDomainNameRecord(const QDnsDomainNameRecord &amp; other)">
                <parameter left="const QDnsDomainNameRecord &amp;" right="" name="other" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="name" fullname="QDnsDomainNameRecord::name" href="qdnsdomainnamerecord.html#name" location="qdnslookup.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QString" signature="name() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="operator=" fullname="QDnsDomainNameRecord::operator=" href="qdnsdomainnamerecord.html#operator=" location="qdnslookup.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="QDnsDomainNameRecord &amp;" signature="operator=(const QDnsDomainNameRecord &amp; other)">
                <parameter left="const QDnsDomainNameRecord &amp;" right="" name="other" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="swap" fullname="QDnsDomainNameRecord::swap" href="qdnsdomainnamerecord.html#swap" location="qdnslookup.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="swap(QDnsDomainNameRecord &amp; other)">
                <parameter left="QDnsDomainNameRecord &amp;" right="" name="other" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="timeToLive" fullname="QDnsDomainNameRecord::timeToLive" href="qdnsdomainnamerecord.html#timeToLive" location="qdnslookup.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="quint32" signature="timeToLive() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="value" fullname="QDnsDomainNameRecord::value" href="qdnsdomainnamerecord.html#value" location="qdnslookup.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QString" signature="value() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="~QDnsDomainNameRecord" fullname="QDnsDomainNameRecord::~QDnsDomainNameRecord" href="qdnsdomainnamerecord.html#dtor.QDnsDomainNameRecord" location="qdnslookup.h" virtual="non" meta="destructor" const="false" static="false" overload="false" type="" signature="~QDnsDomainNameRecord()"/>
        </class>
        <class access="public" threadsafety="unspecified" status="commendable" name="QDnsHostAddressRecord" href="qdnshostaddressrecord.html" location="qdnslookup.h" bases="" module="QtNetwork" groups="network,shared">
            <function access="public" threadsafety="unspecified" status="commendable" name="QDnsHostAddressRecord" fullname="QDnsHostAddressRecord::QDnsHostAddressRecord" href="qdnshostaddressrecord.html#QDnsHostAddressRecord" location="qdnslookup.h" virtual="non" meta="constructor" const="false" static="false" overload="false" type="" signature="QDnsHostAddressRecord()"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="QDnsHostAddressRecord" fullname="QDnsHostAddressRecord::QDnsHostAddressRecord" href="qdnshostaddressrecord.html#QDnsHostAddressRecord-2" location="qdnslookup.h" virtual="non" meta="constructor" const="false" static="false" overload="true" overload-number="2" type="" signature="QDnsHostAddressRecord(const QDnsHostAddressRecord &amp; other)">
                <parameter left="const QDnsHostAddressRecord &amp;" right="" name="other" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="name" fullname="QDnsHostAddressRecord::name" href="qdnshostaddressrecord.html#name" location="qdnslookup.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QString" signature="name() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="operator=" fullname="QDnsHostAddressRecord::operator=" href="qdnshostaddressrecord.html#operator=" location="qdnslookup.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="QDnsHostAddressRecord &amp;" signature="operator=(const QDnsHostAddressRecord &amp; other)">
                <parameter left="const QDnsHostAddressRecord &amp;" right="" name="other" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="swap" fullname="QDnsHostAddressRecord::swap" href="qdnshostaddressrecord.html#swap" location="qdnslookup.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="swap(QDnsHostAddressRecord &amp; other)">
                <parameter left="QDnsHostAddressRecord &amp;" right="" name="other" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="timeToLive" fullname="QDnsHostAddressRecord::timeToLive" href="qdnshostaddressrecord.html#timeToLive" location="qdnslookup.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="quint32" signature="timeToLive() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="value" fullname="QDnsHostAddressRecord::value" href="qdnshostaddressrecord.html#value" location="qdnslookup.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QHostAddress" signature="value() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="~QDnsHostAddressRecord" fullname="QDnsHostAddressRecord::~QDnsHostAddressRecord" href="qdnshostaddressrecord.html#dtor.QDnsHostAddressRecord" location="qdnslookup.h" virtual="non" meta="destructor" const="false" static="false" overload="false" type="" signature="~QDnsHostAddressRecord()"/>
        </class>
        <class access="public" threadsafety="unspecified" status="commendable" name="QDnsLookup" href="qdnslookup.html" location="qdnslookup.h" since="5.0" bases="QObject" module="QtNetwork" groups="network">
            <function access="public" threadsafety="unspecified" status="commendable" name="error" fullname="QDnsLookup::error" href="qdnslookup.html#error-prop" location="qdnslookup.cpp" virtual="non" meta="plain" const="true" static="false" overload="false" associated-property="error" type="Error" signature="error() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="errorString" fullname="QDnsLookup::errorString" href="qdnslookup.html#errorString-prop" location="qdnslookup.cpp" virtual="non" meta="plain" const="true" static="false" overload="false" associated-property="errorString" type="QString" signature="errorString() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="name" fullname="QDnsLookup::name" href="qdnslookup.html#name-prop" location="qdnslookup.cpp" virtual="non" meta="plain" const="true" static="false" overload="false" associated-property="name" type="QString" signature="name() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="setName" fullname="QDnsLookup::setName" href="qdnslookup.html#name-prop" location="qdnslookup.cpp" virtual="non" meta="plain" const="false" static="false" overload="false" associated-property="name" type="void" signature="setName(const QString &amp; name)">
                <parameter left="const QString &amp;" right="" name="name" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setType" fullname="QDnsLookup::setType" href="qdnslookup.html#type-prop" location="qdnslookup.cpp" virtual="non" meta="plain" const="false" static="false" overload="false" associated-property="type" type="void" signature="setType(QDnsLookup::Type )">
                <parameter left="QDnsLookup::Type" right="" name="" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="type" fullname="QDnsLookup::type" href="qdnslookup.html#type-prop" location="qdnslookup.cpp" virtual="non" meta="plain" const="true" static="false" overload="false" associated-property="type" type="Type" signature="type() const"/>
            <enum access="public" threadsafety="unspecified" status="commendable" name="Error" fullname="QDnsLookup::Error" href="qdnslookup.html#Error-enum" location="qdnslookup.h">
                <value name="NoError" value="0"/>
                <value name="ResolverError" value="1"/>
                <value name="OperationCancelledError" value="2"/>
                <value name="InvalidRequestError" value="3"/>
                <value name="InvalidReplyError" value="4"/>
                <value name="ServerFailureError" value="5"/>
                <value name="ServerRefusedError" value="6"/>
                <value name="NotFoundError" value="7"/>
            </enum>
            <enum access="public" threadsafety="unspecified" status="commendable" name="Type" fullname="QDnsLookup::Type" href="qdnslookup.html#Type-enum" location="qdnslookup.h">
                <value name="A" value="1"/>
                <value name="AAAA" value="28"/>
                <value name="ANY" value="255"/>
                <value name="CNAME" value="5"/>
                <value name="MX" value="15"/>
                <value name="NS" value="2"/>
                <value name="PTR" value="12"/>
                <value name="SRV" value="33"/>
                <value name="TXT" value="16"/>
            </enum>
            <function access="public" threadsafety="unspecified" status="commendable" name="QDnsLookup" fullname="QDnsLookup::QDnsLookup" href="qdnslookup.html#QDnsLookup" location="qdnslookup.h" virtual="non" meta="constructor" const="false" static="false" overload="false" type="" signature="QDnsLookup(QObject * parent)">
                <parameter left="QObject *" right="" name="parent" default="0"/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="QDnsLookup" fullname="QDnsLookup::QDnsLookup" href="qdnslookup.html#QDnsLookup-2" location="qdnslookup.h" virtual="non" meta="constructor" const="false" static="false" overload="true" overload-number="2" type="" signature="QDnsLookup(Type type, const QString &amp; name, QObject * parent)">
                <parameter left="Type" right="" name="type" default=""/>
                <parameter left="const QString &amp;" right="" name="name" default=""/>
                <parameter left="QObject *" right="" name="parent" default="0"/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="abort" fullname="QDnsLookup::abort" href="qdnslookup.html#abort" location="qdnslookup.h" virtual="non" meta="slot" const="false" static="false" overload="false" type="void" signature="abort()"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="canonicalNameRecords" fullname="QDnsLookup::canonicalNameRecords" href="qdnslookup.html#canonicalNameRecords" location="qdnslookup.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QList&lt;QDnsDomainNameRecord&gt;" signature="canonicalNameRecords() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="finished" fullname="QDnsLookup::finished" href="qdnslookup.html#error-prop" location="qdnslookup.h" virtual="non" meta="signal" const="false" static="false" overload="false" associated-property="error" type="void" signature="finished()"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="hostAddressRecords" fullname="QDnsLookup::hostAddressRecords" href="qdnslookup.html#hostAddressRecords" location="qdnslookup.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QList&lt;QDnsHostAddressRecord&gt;" signature="hostAddressRecords() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="isFinished" fullname="QDnsLookup::isFinished" href="qdnslookup.html#isFinished" location="qdnslookup.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="bool" signature="isFinished() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="lookup" fullname="QDnsLookup::lookup" href="qdnslookup.html#lookup" location="qdnslookup.h" virtual="non" meta="slot" const="false" static="false" overload="false" type="void" signature="lookup()"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="mailExchangeRecords" fullname="QDnsLookup::mailExchangeRecords" href="qdnslookup.html#mailExchangeRecords" location="qdnslookup.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QList&lt;QDnsMailExchangeRecord&gt;" signature="mailExchangeRecords() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="nameChanged" fullname="QDnsLookup::nameChanged" href="qdnslookup.html#name-prop" location="qdnslookup.h" virtual="non" meta="signal" const="false" static="false" overload="false" associated-property="name" type="void" signature="nameChanged(const QString &amp; name)">
                <parameter left="const QString &amp;" right="" name="name" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="nameServerRecords" fullname="QDnsLookup::nameServerRecords" href="qdnslookup.html#nameServerRecords" location="qdnslookup.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QList&lt;QDnsDomainNameRecord&gt;" signature="nameServerRecords() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="pointerRecords" fullname="QDnsLookup::pointerRecords" href="qdnslookup.html#pointerRecords" location="qdnslookup.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QList&lt;QDnsDomainNameRecord&gt;" signature="pointerRecords() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="serviceRecords" fullname="QDnsLookup::serviceRecords" href="qdnslookup.html#serviceRecords" location="qdnslookup.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QList&lt;QDnsServiceRecord&gt;" signature="serviceRecords() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="textRecords" fullname="QDnsLookup::textRecords" href="qdnslookup.html#textRecords" location="qdnslookup.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QList&lt;QDnsTextRecord&gt;" signature="textRecords() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="typeChanged" fullname="QDnsLookup::typeChanged" href="qdnslookup.html#type-prop" location="qdnslookup.h" virtual="non" meta="signal" const="false" static="false" overload="false" associated-property="type" type="void" signature="typeChanged(Type type)">
                <parameter left="Type" right="" name="type" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="~QDnsLookup" fullname="QDnsLookup::~QDnsLookup" href="qdnslookup.html#dtor.QDnsLookup" location="qdnslookup.h" virtual="non" meta="destructor" const="false" static="false" overload="false" type="" signature="~QDnsLookup()"/>
            <property access="public" threadsafety="unspecified" status="commendable" name="error" fullname="QDnsLookup::error" href="qdnslookup.html#error-prop" location="qdnslookup.h" type="Error">
                <getter name="error"/>
                <notifier name="finished"/>
            </property>
            <property access="public" threadsafety="unspecified" status="commendable" name="errorString" fullname="QDnsLookup::errorString" href="qdnslookup.html#errorString-prop" location="qdnslookup.h" type="QString">
                <getter name="errorString"/>
                <notifier name="finished"/>
            </property>
            <property access="public" threadsafety="unspecified" status="commendable" name="name" fullname="QDnsLookup::name" href="qdnslookup.html#name-prop" location="qdnslookup.h" type="QString">
                <getter name="name"/>
                <setter name="setName"/>
                <notifier name="nameChanged"/>
            </property>
            <property access="public" threadsafety="unspecified" status="commendable" name="type" fullname="QDnsLookup::type" href="qdnslookup.html#type-prop" location="qdnslookup.h" type="Type">
                <getter name="type"/>
                <setter name="setType"/>
                <notifier name="typeChanged"/>
            </property>
        </class>
        <class access="public" threadsafety="unspecified" status="commendable" name="QDnsMailExchangeRecord" href="qdnsmailexchangerecord.html" location="qdnslookup.h" bases="" module="QtNetwork" groups="network,shared">
            <function access="public" threadsafety="unspecified" status="commendable" name="QDnsMailExchangeRecord" fullname="QDnsMailExchangeRecord::QDnsMailExchangeRecord" href="qdnsmailexchangerecord.html#QDnsMailExchangeRecord" location="qdnslookup.h" virtual="non" meta="constructor" const="false" static="false" overload="false" type="" signature="QDnsMailExchangeRecord()"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="QDnsMailExchangeRecord" fullname="QDnsMailExchangeRecord::QDnsMailExchangeRecord" href="qdnsmailexchangerecord.html#QDnsMailExchangeRecord-2" location="qdnslookup.h" virtual="non" meta="constructor" const="false" static="false" overload="true" overload-number="2" type="" signature="QDnsMailExchangeRecord(const QDnsMailExchangeRecord &amp; other)">
                <parameter left="const QDnsMailExchangeRecord &amp;" right="" name="other" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="exchange" fullname="QDnsMailExchangeRecord::exchange" href="qdnsmailexchangerecord.html#exchange" location="qdnslookup.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QString" signature="exchange() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="name" fullname="QDnsMailExchangeRecord::name" href="qdnsmailexchangerecord.html#name" location="qdnslookup.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QString" signature="name() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="operator=" fullname="QDnsMailExchangeRecord::operator=" href="qdnsmailexchangerecord.html#operator=" location="qdnslookup.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="QDnsMailExchangeRecord &amp;" signature="operator=(const QDnsMailExchangeRecord &amp; other)">
                <parameter left="const QDnsMailExchangeRecord &amp;" right="" name="other" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="preference" fullname="QDnsMailExchangeRecord::preference" href="qdnsmailexchangerecord.html#preference" location="qdnslookup.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="quint16" signature="preference() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="swap" fullname="QDnsMailExchangeRecord::swap" href="qdnsmailexchangerecord.html#swap" location="qdnslookup.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="swap(QDnsMailExchangeRecord &amp; other)">
                <parameter left="QDnsMailExchangeRecord &amp;" right="" name="other" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="timeToLive" fullname="QDnsMailExchangeRecord::timeToLive" href="qdnsmailexchangerecord.html#timeToLive" location="qdnslookup.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="quint32" signature="timeToLive() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="~QDnsMailExchangeRecord" fullname="QDnsMailExchangeRecord::~QDnsMailExchangeRecord" href="qdnsmailexchangerecord.html#dtor.QDnsMailExchangeRecord" location="qdnslookup.h" virtual="non" meta="destructor" const="false" static="false" overload="false" type="" signature="~QDnsMailExchangeRecord()"/>
        </class>
        <class access="public" threadsafety="unspecified" status="commendable" name="QDnsServiceRecord" href="qdnsservicerecord.html" location="qdnslookup.h" bases="" module="QtNetwork" groups="network,shared">
            <function access="public" threadsafety="unspecified" status="commendable" name="QDnsServiceRecord" fullname="QDnsServiceRecord::QDnsServiceRecord" href="qdnsservicerecord.html#QDnsServiceRecord" location="qdnslookup.h" virtual="non" meta="constructor" const="false" static="false" overload="false" type="" signature="QDnsServiceRecord()"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="QDnsServiceRecord" fullname="QDnsServiceRecord::QDnsServiceRecord" href="qdnsservicerecord.html#QDnsServiceRecord-2" location="qdnslookup.h" virtual="non" meta="constructor" const="false" static="false" overload="true" overload-number="2" type="" signature="QDnsServiceRecord(const QDnsServiceRecord &amp; other)">
                <parameter left="const QDnsServiceRecord &amp;" right="" name="other" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="name" fullname="QDnsServiceRecord::name" href="qdnsservicerecord.html#name" location="qdnslookup.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QString" signature="name() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="operator=" fullname="QDnsServiceRecord::operator=" href="qdnsservicerecord.html#operator=" location="qdnslookup.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="QDnsServiceRecord &amp;" signature="operator=(const QDnsServiceRecord &amp; other)">
                <parameter left="const QDnsServiceRecord &amp;" right="" name="other" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="port" fullname="QDnsServiceRecord::port" href="qdnsservicerecord.html#port" location="qdnslookup.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="quint16" signature="port() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="priority" fullname="QDnsServiceRecord::priority" href="qdnsservicerecord.html#priority" location="qdnslookup.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="quint16" signature="priority() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="swap" fullname="QDnsServiceRecord::swap" href="qdnsservicerecord.html#swap" location="qdnslookup.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="swap(QDnsServiceRecord &amp; other)">
                <parameter left="QDnsServiceRecord &amp;" right="" name="other" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="target" fullname="QDnsServiceRecord::target" href="qdnsservicerecord.html#target" location="qdnslookup.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QString" signature="target() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="timeToLive" fullname="QDnsServiceRecord::timeToLive" href="qdnsservicerecord.html#timeToLive" location="qdnslookup.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="quint32" signature="timeToLive() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="weight" fullname="QDnsServiceRecord::weight" href="qdnsservicerecord.html#weight" location="qdnslookup.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="quint16" signature="weight() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="~QDnsServiceRecord" fullname="QDnsServiceRecord::~QDnsServiceRecord" href="qdnsservicerecord.html#dtor.QDnsServiceRecord" location="qdnslookup.h" virtual="non" meta="destructor" const="false" static="false" overload="false" type="" signature="~QDnsServiceRecord()"/>
        </class>
        <class access="public" threadsafety="unspecified" status="commendable" name="QDnsTextRecord" href="qdnstextrecord.html" location="qdnslookup.h" bases="" module="QtNetwork" groups="network,shared">
            <function access="public" threadsafety="unspecified" status="commendable" name="QDnsTextRecord" fullname="QDnsTextRecord::QDnsTextRecord" href="qdnstextrecord.html#QDnsTextRecord" location="qdnslookup.h" virtual="non" meta="constructor" const="false" static="false" overload="false" type="" signature="QDnsTextRecord()"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="QDnsTextRecord" fullname="QDnsTextRecord::QDnsTextRecord" href="qdnstextrecord.html#QDnsTextRecord-2" location="qdnslookup.h" virtual="non" meta="constructor" const="false" static="false" overload="true" overload-number="2" type="" signature="QDnsTextRecord(const QDnsTextRecord &amp; other)">
                <parameter left="const QDnsTextRecord &amp;" right="" name="other" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="name" fullname="QDnsTextRecord::name" href="qdnstextrecord.html#name" location="qdnslookup.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QString" signature="name() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="operator=" fullname="QDnsTextRecord::operator=" href="qdnstextrecord.html#operator=" location="qdnslookup.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="QDnsTextRecord &amp;" signature="operator=(const QDnsTextRecord &amp; other)">
                <parameter left="const QDnsTextRecord &amp;" right="" name="other" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="swap" fullname="QDnsTextRecord::swap" href="qdnstextrecord.html#swap" location="qdnslookup.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="swap(QDnsTextRecord &amp; other)">
                <parameter left="QDnsTextRecord &amp;" right="" name="other" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="timeToLive" fullname="QDnsTextRecord::timeToLive" href="qdnstextrecord.html#timeToLive" location="qdnslookup.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="quint32" signature="timeToLive() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="values" fullname="QDnsTextRecord::values" href="qdnstextrecord.html#values" location="qdnslookup.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QList&lt;QByteArray&gt;" signature="values() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="~QDnsTextRecord" fullname="QDnsTextRecord::~QDnsTextRecord" href="qdnstextrecord.html#dtor.QDnsTextRecord" location="qdnslookup.h" virtual="non" meta="destructor" const="false" static="false" overload="false" type="" signature="~QDnsTextRecord()"/>
        </class>
        <class access="public" threadsafety="unspecified" status="commendable" name="QHostAddress" href="qhostaddress.html" location="qhostaddress.h" bases="" module="QtNetwork" groups="network">
            <enum access="public" threadsafety="unspecified" status="commendable" name="SpecialAddress" fullname="QHostAddress::SpecialAddress" href="qhostaddress.html#SpecialAddress-enum" location="qhostaddress.h">
                <value name="Null" value="0"/>
                <value name="Broadcast" value="1"/>
                <value name="LocalHost" value="2"/>
                <value name="LocalHostIPv6" value="3"/>
                <value name="Any" value="4"/>
                <value name="AnyIPv6" value="5"/>
                <value name="AnyIPv4" value="6"/>
            </enum>
            <function access="public" threadsafety="unspecified" status="commendable" name="QHostAddress" fullname="QHostAddress::QHostAddress" href="qhostaddress.html#QHostAddress" location="qhostaddress.h" virtual="non" meta="constructor" const="false" static="false" overload="false" type="" signature="QHostAddress()"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="QHostAddress" fullname="QHostAddress::QHostAddress" href="qhostaddress.html#QHostAddress-8" location="qhostaddress.h" virtual="non" meta="constructor" const="false" static="false" overload="true" overload-number="8" type="" signature="QHostAddress(SpecialAddress address)">
                <parameter left="SpecialAddress" right="" name="address" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="QHostAddress" fullname="QHostAddress::QHostAddress" href="qhostaddress.html#QHostAddress-7" location="qhostaddress.h" virtual="non" meta="constructor" const="false" static="false" overload="true" overload-number="7" type="" signature="QHostAddress(const QHostAddress &amp; address)">
                <parameter left="const QHostAddress &amp;" right="" name="address" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="QHostAddress" fullname="QHostAddress::QHostAddress" href="qhostaddress.html#QHostAddress-6" location="qhostaddress.h" virtual="non" meta="constructor" const="false" static="false" overload="true" overload-number="6" type="" signature="QHostAddress(const QString &amp; address)">
                <parameter left="const QString &amp;" right="" name="address" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="QHostAddress" fullname="QHostAddress::QHostAddress" href="qhostaddress.html#QHostAddress-4" location="qhostaddress.h" virtual="non" meta="constructor" const="false" static="false" overload="true" overload-number="4" type="" signature="QHostAddress(const Q_IPV6ADDR &amp; ip6Addr)">
                <parameter left="const Q_IPV6ADDR &amp;" right="" name="ip6Addr" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="QHostAddress" fullname="QHostAddress::QHostAddress" href="qhostaddress.html#QHostAddress-5" location="qhostaddress.h" virtual="non" meta="constructor" const="false" static="false" overload="true" overload-number="5" type="" signature="QHostAddress(const sockaddr * sockaddr)">
                <parameter left="const sockaddr *" right="" name="sockaddr" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="QHostAddress" fullname="QHostAddress::QHostAddress" href="qhostaddress.html#QHostAddress-2" location="qhostaddress.h" virtual="non" meta="constructor" const="false" static="false" overload="true" overload-number="2" type="" signature="QHostAddress(quint32 ip4Addr)">
                <parameter left="quint32" right="" name="ip4Addr" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="QHostAddress" fullname="QHostAddress::QHostAddress" href="qhostaddress.html#QHostAddress-3" location="qhostaddress.h" virtual="non" meta="constructor" const="false" static="false" overload="true" overload-number="3" type="" signature="QHostAddress(quint8 * ip6Addr)">
                <parameter left="quint8 *" right="" name="ip6Addr" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="clear" fullname="QHostAddress::clear" href="qhostaddress.html#clear" location="qhostaddress.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="clear()"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="isInSubnet" fullname="QHostAddress::isInSubnet" href="qhostaddress.html#isInSubnet" location="qhostaddress.h" since="4.5" virtual="non" meta="plain" const="true" static="false" overload="false" type="bool" signature="isInSubnet(const QHostAddress &amp; subnet, int netmask) const">
                <parameter left="const QHostAddress &amp;" right="" name="subnet" default=""/>
                <parameter left="int" right="" name="netmask" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="isInSubnet" fullname="QHostAddress::isInSubnet" href="qhostaddress.html#isInSubnet-2" location="qhostaddress.h" since="4.5" virtual="non" meta="plain" const="true" static="false" overload="true" overload-number="2" type="bool" signature="isInSubnet(const QPair&lt;QHostAddress, int&gt; &amp; subnet) const">
                <parameter left="const QPair&lt;QHostAddress, int&gt; &amp;" right="" name="subnet" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="isLoopback" fullname="QHostAddress::isLoopback" href="qhostaddress.html#isLoopback" location="qhostaddress.h" since="5.0" virtual="non" meta="plain" const="true" static="false" overload="false" type="bool" signature="isLoopback() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="isNull" fullname="QHostAddress::isNull" href="qhostaddress.html#isNull" location="qhostaddress.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="bool" signature="isNull() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="operator!=" fullname="QHostAddress::operator!=" href="qhostaddress.html#operator!=-2" location="qhostaddress.h" virtual="non" meta="plain" const="true" static="false" overload="true" overload-number="2" type="bool" signature="operator!=(SpecialAddress other) const">
                <parameter left="SpecialAddress" right="" name="other" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="operator!=" fullname="QHostAddress::operator!=" href="qhostaddress.html#operator!=" location="qhostaddress.h" since="4.2" virtual="non" meta="plain" const="true" static="false" overload="false" type="bool" signature="operator!=(const QHostAddress &amp; other) const">
                <parameter left="const QHostAddress &amp;" right="" name="other" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="operator=" fullname="QHostAddress::operator=" href="qhostaddress.html#operator=" location="qhostaddress.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="QHostAddress &amp;" signature="operator=(const QHostAddress &amp; address)">
                <parameter left="const QHostAddress &amp;" right="" name="address" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="operator=" fullname="QHostAddress::operator=" href="qhostaddress.html#operator=-2" location="qhostaddress.h" virtual="non" meta="plain" const="false" static="false" overload="true" overload-number="2" type="QHostAddress &amp;" signature="operator=(const QString &amp; address)">
                <parameter left="const QString &amp;" right="" name="address" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="operator==" fullname="QHostAddress::operator==" href="qhostaddress.html#operator==-2" location="qhostaddress.h" virtual="non" meta="plain" const="true" static="false" overload="true" overload-number="2" type="bool" signature="operator==(SpecialAddress other) const">
                <parameter left="SpecialAddress" right="" name="other" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="operator==" fullname="QHostAddress::operator==" href="qhostaddress.html#operator==" location="qhostaddress.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="bool" signature="operator==(const QHostAddress &amp; other) const">
                <parameter left="const QHostAddress &amp;" right="" name="other" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="parseSubnet" fullname="QHostAddress::parseSubnet" href="qhostaddress.html#parseSubnet" location="qhostaddress.h" since="4.5" virtual="non" meta="plain" const="false" static="true" overload="false" type="QPair&lt;QHostAddress, int&gt;" signature="parseSubnet(const QString &amp; subnet)">
                <parameter left="const QString &amp;" right="" name="subnet" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="protocol" fullname="QHostAddress::protocol" href="qhostaddress.html#protocol" location="qhostaddress.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QAbstractSocket::NetworkLayerProtocol" signature="protocol() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="scopeId" fullname="QHostAddress::scopeId" href="qhostaddress.html#scopeId" location="qhostaddress.h" since="4.1" virtual="non" meta="plain" const="true" static="false" overload="false" type="QString" signature="scopeId() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="setAddress" fullname="QHostAddress::setAddress" href="qhostaddress.html#setAddress-4" location="qhostaddress.h" virtual="non" meta="plain" const="false" static="false" overload="true" overload-number="4" type="bool" signature="setAddress(const QString &amp; address)">
                <parameter left="const QString &amp;" right="" name="address" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setAddress" fullname="QHostAddress::setAddress" href="qhostaddress.html#setAddress-3" location="qhostaddress.h" virtual="non" meta="plain" const="false" static="false" overload="true" overload-number="3" type="void" signature="setAddress(const Q_IPV6ADDR &amp; ip6Addr)">
                <parameter left="const Q_IPV6ADDR &amp;" right="" name="ip6Addr" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setAddress" fullname="QHostAddress::setAddress" href="qhostaddress.html#setAddress-5" location="qhostaddress.h" virtual="non" meta="plain" const="false" static="false" overload="true" overload-number="5" type="void" signature="setAddress(const sockaddr * sockaddr)">
                <parameter left="const sockaddr *" right="" name="sockaddr" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setAddress" fullname="QHostAddress::setAddress" href="qhostaddress.html#setAddress" location="qhostaddress.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setAddress(quint32 ip4Addr)">
                <parameter left="quint32" right="" name="ip4Addr" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setAddress" fullname="QHostAddress::setAddress" href="qhostaddress.html#setAddress-2" location="qhostaddress.h" virtual="non" meta="plain" const="false" static="false" overload="true" overload-number="2" type="void" signature="setAddress(quint8 * ip6Addr)">
                <parameter left="quint8 *" right="" name="ip6Addr" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setScopeId" fullname="QHostAddress::setScopeId" href="qhostaddress.html#setScopeId" location="qhostaddress.h" since="4.1" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setScopeId(const QString &amp; id)">
                <parameter left="const QString &amp;" right="" name="id" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="toIPv4Address" fullname="QHostAddress::toIPv4Address" href="qhostaddress.html#toIPv4Address" location="qhostaddress.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="quint32" signature="toIPv4Address() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="toIPv6Address" fullname="QHostAddress::toIPv6Address" href="qhostaddress.html#toIPv6Address" location="qhostaddress.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="Q_IPV6ADDR" signature="toIPv6Address() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="toString" fullname="QHostAddress::toString" href="qhostaddress.html#toString" location="qhostaddress.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QString" signature="toString() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="~QHostAddress" fullname="QHostAddress::~QHostAddress" href="qhostaddress.html#dtor.QHostAddress" location="qhostaddress.h" virtual="non" meta="destructor" const="false" static="false" overload="false" type="" signature="~QHostAddress()"/>
            <variable access="protected" threadsafety="unspecified" status="commendable" name="d" fullname="QHostAddress::d" href="qhostaddress.html#d-var" location="qhostaddress.h" type="QScopedPointer&lt;QHostAddressPrivate&gt;" static="false"/>
        </class>
        <function access="public" threadsafety="unspecified" status="commendable" name="operator&lt;&lt;" href="qhostaddress.html#operator&lt;&lt;-39" location="qhostaddress.h" virtual="non" meta="plain" const="false" static="false" overload="true" overload-number="39" relates="QHostAddress" type="QDataStream &amp;" signature="operator&lt;&lt;(QDataStream &amp; out, const QHostAddress &amp; address)">
            <parameter left="QDataStream &amp;" right="" name="out" default=""/>
            <parameter left="const QHostAddress &amp;" right="" name="address" default=""/>
        </function>
        <function access="public" threadsafety="unspecified" status="commendable" name="operator&gt;&gt;" href="qhostaddress.html#operator&gt;&gt;-33" location="qhostaddress.h" virtual="non" meta="plain" const="false" static="false" overload="true" overload-number="33" relates="QHostAddress" type="QDataStream &amp;" signature="operator&gt;&gt;(QDataStream &amp; in, QHostAddress &amp; address)">
            <parameter left="QDataStream &amp;" right="" name="in" default=""/>
            <parameter left="QHostAddress &amp;" right="" name="address" default=""/>
        </function>
        <class access="public" threadsafety="reentrant" status="commendable" name="QHostInfo" href="qhostinfo.html" location="qhostinfo.h" bases="" module="QtNetwork" groups="network">
            <enum access="public" threadsafety="unspecified" status="commendable" name="HostInfoError" fullname="QHostInfo::HostInfoError" href="qhostinfo.html#HostInfoError-enum" location="qhostinfo.h">
                <value name="NoError" value="0"/>
                <value name="HostNotFound" value="1"/>
                <value name="UnknownError" value="2"/>
            </enum>
            <function access="public" threadsafety="unspecified" status="commendable" name="QHostInfo" fullname="QHostInfo::QHostInfo" href="qhostinfo.html#QHostInfo-2" location="qhostinfo.h" virtual="non" meta="constructor" const="false" static="false" overload="true" overload-number="2" type="" signature="QHostInfo(const QHostInfo &amp; other)">
                <parameter left="const QHostInfo &amp;" right="" name="other" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="QHostInfo" fullname="QHostInfo::QHostInfo" href="qhostinfo.html#QHostInfo" location="qhostinfo.h" virtual="non" meta="constructor" const="false" static="false" overload="false" type="" signature="QHostInfo(int id)">
                <parameter left="int" right="" name="id" default="-1"/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="abortHostLookup" fullname="QHostInfo::abortHostLookup" href="qhostinfo.html#abortHostLookup" location="qhostinfo.h" virtual="non" meta="plain" const="false" static="true" overload="false" type="void" signature="abortHostLookup(int id)">
                <parameter left="int" right="" name="id" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="addresses" fullname="QHostInfo::addresses" href="qhostinfo.html#addresses" location="qhostinfo.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QList&lt;QHostAddress&gt;" signature="addresses() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="error" fullname="QHostInfo::error" href="qhostinfo.html#error" location="qhostinfo.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="HostInfoError" signature="error() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="errorString" fullname="QHostInfo::errorString" href="qhostinfo.html#errorString" location="qhostinfo.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QString" signature="errorString() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="fromName" fullname="QHostInfo::fromName" href="qhostinfo.html#fromName" location="qhostinfo.h" virtual="non" meta="plain" const="false" static="true" overload="false" type="QHostInfo" signature="fromName(const QString &amp; name)">
                <parameter left="const QString &amp;" right="" name="name" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="hostName" fullname="QHostInfo::hostName" href="qhostinfo.html#hostName" location="qhostinfo.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QString" signature="hostName() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="lookupHost" fullname="QHostInfo::lookupHost" href="qhostinfo.html#lookupHost" location="qhostinfo.h" virtual="non" meta="plain" const="false" static="true" overload="false" type="int" signature="lookupHost(const QString &amp; name, QObject * receiver, const char * member)">
                <parameter left="const QString &amp;" right="" name="name" default=""/>
                <parameter left="QObject *" right="" name="receiver" default=""/>
                <parameter left="const char *" right="" name="member" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="lookupId" fullname="QHostInfo::lookupId" href="qhostinfo.html#lookupId" location="qhostinfo.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="int" signature="lookupId() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="operator=" fullname="QHostInfo::operator=" href="qhostinfo.html#operator=" location="qhostinfo.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="QHostInfo &amp;" signature="operator=(const QHostInfo &amp; other)">
                <parameter left="const QHostInfo &amp;" right="" name="other" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setAddresses" fullname="QHostInfo::setAddresses" href="qhostinfo.html#setAddresses" location="qhostinfo.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setAddresses(const QList&lt;QHostAddress&gt; &amp; addresses)">
                <parameter left="const QList&lt;QHostAddress&gt; &amp;" right="" name="addresses" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setError" fullname="QHostInfo::setError" href="qhostinfo.html#setError" location="qhostinfo.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setError(HostInfoError error)">
                <parameter left="HostInfoError" right="" name="error" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setErrorString" fullname="QHostInfo::setErrorString" href="qhostinfo.html#setErrorString" location="qhostinfo.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setErrorString(const QString &amp; str)">
                <parameter left="const QString &amp;" right="" name="str" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setHostName" fullname="QHostInfo::setHostName" href="qhostinfo.html#setHostName" location="qhostinfo.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setHostName(const QString &amp; hostName)">
                <parameter left="const QString &amp;" right="" name="hostName" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setLookupId" fullname="QHostInfo::setLookupId" href="qhostinfo.html#setLookupId" location="qhostinfo.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setLookupId(int id)">
                <parameter left="int" right="" name="id" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="~QHostInfo" fullname="QHostInfo::~QHostInfo" href="qhostinfo.html#dtor.QHostInfo" location="qhostinfo.h" virtual="non" meta="destructor" const="false" static="false" overload="false" type="" signature="~QHostInfo()"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="localHostName" fullname="QHostInfo::localHostName" href="qhostinfo.html#localHostName" location="qhostinfo_win.cpp" virtual="non" meta="plain" const="false" static="true" overload="false" type="QString" signature="localHostName()"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="localDomainName" fullname="QHostInfo::localDomainName" href="qhostinfo.html#localDomainName" location="qnetworkinterface_win.cpp" virtual="non" meta="plain" const="false" static="true" overload="false" type="QString" signature="localDomainName()"/>
        </class>
        <class access="public" threadsafety="reentrant" status="commendable" name="QNetworkAddressEntry" href="qnetworkaddressentry.html" location="qnetworkinterface.h" since="4.2" bases="" module="QtNetwork" groups="network,shared">
            <function access="public" threadsafety="unspecified" status="commendable" name="QNetworkAddressEntry" fullname="QNetworkAddressEntry::QNetworkAddressEntry" href="qnetworkaddressentry.html#QNetworkAddressEntry" location="qnetworkinterface.h" virtual="non" meta="constructor" const="false" static="false" overload="false" type="" signature="QNetworkAddressEntry()"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="QNetworkAddressEntry" fullname="QNetworkAddressEntry::QNetworkAddressEntry" href="qnetworkaddressentry.html#QNetworkAddressEntry-2" location="qnetworkinterface.h" virtual="non" meta="constructor" const="false" static="false" overload="true" overload-number="2" type="" signature="QNetworkAddressEntry(const QNetworkAddressEntry &amp; other)">
                <parameter left="const QNetworkAddressEntry &amp;" right="" name="other" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="broadcast" fullname="QNetworkAddressEntry::broadcast" href="qnetworkaddressentry.html#broadcast" location="qnetworkinterface.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QHostAddress" signature="broadcast() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="ip" fullname="QNetworkAddressEntry::ip" href="qnetworkaddressentry.html#ip" location="qnetworkinterface.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QHostAddress" signature="ip() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="netmask" fullname="QNetworkAddressEntry::netmask" href="qnetworkaddressentry.html#netmask" location="qnetworkinterface.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QHostAddress" signature="netmask() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="operator!=" fullname="QNetworkAddressEntry::operator!=" href="qnetworkaddressentry.html#operator!=" location="qnetworkinterface.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="bool" signature="operator!=(const QNetworkAddressEntry &amp; other) const">
                <parameter left="const QNetworkAddressEntry &amp;" right="" name="other" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="operator=" fullname="QNetworkAddressEntry::operator=" href="qnetworkaddressentry.html#operator=" location="qnetworkinterface.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="QNetworkAddressEntry &amp;" signature="operator=(const QNetworkAddressEntry &amp; other)">
                <parameter left="const QNetworkAddressEntry &amp;" right="" name="other" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="operator==" fullname="QNetworkAddressEntry::operator==" href="qnetworkaddressentry.html#operator==" location="qnetworkinterface.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="bool" signature="operator==(const QNetworkAddressEntry &amp; other) const">
                <parameter left="const QNetworkAddressEntry &amp;" right="" name="other" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="prefixLength" fullname="QNetworkAddressEntry::prefixLength" href="qnetworkaddressentry.html#prefixLength" location="qnetworkinterface.h" since="4.5" virtual="non" meta="plain" const="true" static="false" overload="false" type="int" signature="prefixLength() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="setBroadcast" fullname="QNetworkAddressEntry::setBroadcast" href="qnetworkaddressentry.html#setBroadcast" location="qnetworkinterface.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setBroadcast(const QHostAddress &amp; newBroadcast)">
                <parameter left="const QHostAddress &amp;" right="" name="newBroadcast" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setIp" fullname="QNetworkAddressEntry::setIp" href="qnetworkaddressentry.html#setIp" location="qnetworkinterface.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setIp(const QHostAddress &amp; newIp)">
                <parameter left="const QHostAddress &amp;" right="" name="newIp" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setNetmask" fullname="QNetworkAddressEntry::setNetmask" href="qnetworkaddressentry.html#setNetmask" location="qnetworkinterface.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setNetmask(const QHostAddress &amp; newNetmask)">
                <parameter left="const QHostAddress &amp;" right="" name="newNetmask" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setPrefixLength" fullname="QNetworkAddressEntry::setPrefixLength" href="qnetworkaddressentry.html#setPrefixLength" location="qnetworkinterface.h" since="4.5" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setPrefixLength(int length)">
                <parameter left="int" right="" name="length" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="swap" fullname="QNetworkAddressEntry::swap" href="qnetworkaddressentry.html#swap" location="qnetworkinterface.h" since="5.0" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="swap(QNetworkAddressEntry &amp; other)">
                <parameter left="QNetworkAddressEntry &amp;" right="" name="other" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="~QNetworkAddressEntry" fullname="QNetworkAddressEntry::~QNetworkAddressEntry" href="qnetworkaddressentry.html#dtor.QNetworkAddressEntry" location="qnetworkinterface.h" virtual="non" meta="destructor" const="false" static="false" overload="false" type="" signature="~QNetworkAddressEntry()"/>
        </class>
        <class access="public" threadsafety="reentrant" status="commendable" name="QNetworkInterface" href="qnetworkinterface.html" location="qnetworkinterface.h" since="4.2" bases="" module="QtNetwork" groups="network,shared">
            <enum access="public" threadsafety="unspecified" status="commendable" name="InterfaceFlag" fullname="QNetworkInterface::InterfaceFlag" href="qnetworkinterface.html#InterfaceFlag-enum" location="qnetworkinterface.h" typedef="QNetworkInterface::InterfaceFlags">
                <value name="IsUp" value="0x1"/>
                <value name="IsRunning" value="0x2"/>
                <value name="CanBroadcast" value="0x4"/>
                <value name="IsLoopBack" value="0x8"/>
                <value name="IsPointToPoint" value="0x10"/>
                <value name="CanMulticast" value="0x20"/>
            </enum>
            <typedef access="public" threadsafety="unspecified" status="commendable" name="InterfaceFlags" fullname="QNetworkInterface::InterfaceFlags" href="qnetworkinterface.html#InterfaceFlags-typedef" location="qnetworkinterface.h" enum="QNetworkInterface::InterfaceFlag"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="QNetworkInterface" fullname="QNetworkInterface::QNetworkInterface" href="qnetworkinterface.html#QNetworkInterface" location="qnetworkinterface.h" virtual="non" meta="constructor" const="false" static="false" overload="false" type="" signature="QNetworkInterface()"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="QNetworkInterface" fullname="QNetworkInterface::QNetworkInterface" href="qnetworkinterface.html#QNetworkInterface-2" location="qnetworkinterface.h" virtual="non" meta="constructor" const="false" static="false" overload="true" overload-number="2" type="" signature="QNetworkInterface(const QNetworkInterface &amp; other)">
                <parameter left="const QNetworkInterface &amp;" right="" name="other" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="addressEntries" fullname="QNetworkInterface::addressEntries" href="qnetworkinterface.html#addressEntries" location="qnetworkinterface.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QList&lt;QNetworkAddressEntry&gt;" signature="addressEntries() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="allAddresses" fullname="QNetworkInterface::allAddresses" href="qnetworkinterface.html#allAddresses" location="qnetworkinterface.h" virtual="non" meta="plain" const="false" static="true" overload="false" type="QList&lt;QHostAddress&gt;" signature="allAddresses()"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="allInterfaces" fullname="QNetworkInterface::allInterfaces" href="qnetworkinterface.html#allInterfaces" location="qnetworkinterface.h" virtual="non" meta="plain" const="false" static="true" overload="false" type="QList&lt;QNetworkInterface&gt;" signature="allInterfaces()"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="flags" fullname="QNetworkInterface::flags" href="qnetworkinterface.html#flags" location="qnetworkinterface.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="InterfaceFlags" signature="flags() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="hardwareAddress" fullname="QNetworkInterface::hardwareAddress" href="qnetworkinterface.html#hardwareAddress" location="qnetworkinterface.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QString" signature="hardwareAddress() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="humanReadableName" fullname="QNetworkInterface::humanReadableName" href="qnetworkinterface.html#humanReadableName" location="qnetworkinterface.h" since="4.5" virtual="non" meta="plain" const="true" static="false" overload="false" type="QString" signature="humanReadableName() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="index" fullname="QNetworkInterface::index" href="qnetworkinterface.html#index" location="qnetworkinterface.h" since="4.5" virtual="non" meta="plain" const="true" static="false" overload="false" type="int" signature="index() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="interfaceFromIndex" fullname="QNetworkInterface::interfaceFromIndex" href="qnetworkinterface.html#interfaceFromIndex" location="qnetworkinterface.h" virtual="non" meta="plain" const="false" static="true" overload="false" type="QNetworkInterface" signature="interfaceFromIndex(int index)">
                <parameter left="int" right="" name="index" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="interfaceFromName" fullname="QNetworkInterface::interfaceFromName" href="qnetworkinterface.html#interfaceFromName" location="qnetworkinterface.h" virtual="non" meta="plain" const="false" static="true" overload="false" type="QNetworkInterface" signature="interfaceFromName(const QString &amp; name)">
                <parameter left="const QString &amp;" right="" name="name" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="isValid" fullname="QNetworkInterface::isValid" href="qnetworkinterface.html#isValid" location="qnetworkinterface.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="bool" signature="isValid() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="name" fullname="QNetworkInterface::name" href="qnetworkinterface.html#name" location="qnetworkinterface.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QString" signature="name() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="operator=" fullname="QNetworkInterface::operator=" href="qnetworkinterface.html#operator=" location="qnetworkinterface.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="QNetworkInterface &amp;" signature="operator=(const QNetworkInterface &amp; other)">
                <parameter left="const QNetworkInterface &amp;" right="" name="other" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="swap" fullname="QNetworkInterface::swap" href="qnetworkinterface.html#swap" location="qnetworkinterface.h" since="5.0" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="swap(QNetworkInterface &amp; other)">
                <parameter left="QNetworkInterface &amp;" right="" name="other" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="~QNetworkInterface" fullname="QNetworkInterface::~QNetworkInterface" href="qnetworkinterface.html#dtor.QNetworkInterface" location="qnetworkinterface.h" virtual="non" meta="destructor" const="false" static="false" overload="false" type="" signature="~QNetworkInterface()"/>
        </class>
        <class access="public" threadsafety="reentrant" status="commendable" name="QNetworkProxy" href="qnetworkproxy.html" location="qnetworkproxy.h" since="4.1" bases="" module="QtNetwork" groups="network,shared">
            <contents name="socks5" title="SOCKS5" level="1"/>
            <enum access="public" threadsafety="unspecified" status="commendable" name="Capability" fullname="QNetworkProxy::Capability" href="qnetworkproxy.html#Capability-enum" location="qnetworkproxy.h" since="4.5" typedef="QNetworkProxy::Capabilities">
                <value name="TunnelingCapability" value="0x0001"/>
                <value name="ListeningCapability" value="0x0002"/>
                <value name="UdpTunnelingCapability" value="0x0004"/>
                <value name="CachingCapability" value="0x0008"/>
                <value name="HostNameLookupCapability" value="0x0010"/>
            </enum>
            <enum access="public" threadsafety="unspecified" status="commendable" name="ProxyType" fullname="QNetworkProxy::ProxyType" href="qnetworkproxy.html#ProxyType-enum" location="qnetworkproxy.h">
                <value name="DefaultProxy" value="0"/>
                <value name="Socks5Proxy" value="1"/>
                <value name="NoProxy" value="2"/>
                <value name="HttpProxy" value="3"/>
                <value name="HttpCachingProxy" value="4"/>
                <value name="FtpCachingProxy" value="5"/>
            </enum>
            <typedef access="public" threadsafety="unspecified" status="commendable" name="Capabilities" fullname="QNetworkProxy::Capabilities" href="qnetworkproxy.html#Capabilities-typedef" location="qnetworkproxy.h" enum="QNetworkProxy::Capability"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="QNetworkProxy" fullname="QNetworkProxy::QNetworkProxy" href="qnetworkproxy.html#QNetworkProxy" location="qnetworkproxy.h" virtual="non" meta="constructor" const="false" static="false" overload="false" type="" signature="QNetworkProxy()"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="QNetworkProxy" fullname="QNetworkProxy::QNetworkProxy" href="qnetworkproxy.html#QNetworkProxy-2" location="qnetworkproxy.h" virtual="non" meta="constructor" const="false" static="false" overload="true" overload-number="2" type="" signature="QNetworkProxy(ProxyType type, const QString &amp; hostName, quint16 port, const QString &amp; user, const QString &amp; password)">
                <parameter left="ProxyType" right="" name="type" default=""/>
                <parameter left="const QString &amp;" right="" name="hostName" default="QString()"/>
                <parameter left="quint16" right="" name="port" default="0"/>
                <parameter left="const QString &amp;" right="" name="user" default="QString()"/>
                <parameter left="const QString &amp;" right="" name="password" default="QString()"/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="QNetworkProxy" fullname="QNetworkProxy::QNetworkProxy" href="qnetworkproxy.html#QNetworkProxy-3" location="qnetworkproxy.h" virtual="non" meta="constructor" const="false" static="false" overload="true" overload-number="3" type="" signature="QNetworkProxy(const QNetworkProxy &amp; other)">
                <parameter left="const QNetworkProxy &amp;" right="" name="other" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="applicationProxy" fullname="QNetworkProxy::applicationProxy" href="qnetworkproxy.html#applicationProxy" location="qnetworkproxy.h" virtual="non" meta="plain" const="false" static="true" overload="false" type="QNetworkProxy" signature="applicationProxy()"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="capabilities" fullname="QNetworkProxy::capabilities" href="qnetworkproxy.html#capabilities" location="qnetworkproxy.h" since="4.5" virtual="non" meta="plain" const="true" static="false" overload="false" type="Capabilities" signature="capabilities() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="hasRawHeader" fullname="QNetworkProxy::hasRawHeader" href="qnetworkproxy.html#hasRawHeader" location="qnetworkproxy.h" since="5.0" virtual="non" meta="plain" const="true" static="false" overload="false" type="bool" signature="hasRawHeader(const QByteArray &amp; headerName) const">
                <parameter left="const QByteArray &amp;" right="" name="headerName" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="header" fullname="QNetworkProxy::header" href="qnetworkproxy.html#header" location="qnetworkproxy.h" since="5.0" virtual="non" meta="plain" const="true" static="false" overload="false" type="QVariant" signature="header(QNetworkRequest::KnownHeaders header) const">
                <parameter left="QNetworkRequest::KnownHeaders" right="" name="header" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="hostName" fullname="QNetworkProxy::hostName" href="qnetworkproxy.html#hostName" location="qnetworkproxy.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QString" signature="hostName() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="isCachingProxy" fullname="QNetworkProxy::isCachingProxy" href="qnetworkproxy.html#isCachingProxy" location="qnetworkproxy.h" since="4.4" virtual="non" meta="plain" const="true" static="false" overload="false" type="bool" signature="isCachingProxy() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="isTransparentProxy" fullname="QNetworkProxy::isTransparentProxy" href="qnetworkproxy.html#isTransparentProxy" location="qnetworkproxy.h" since="4.4" virtual="non" meta="plain" const="true" static="false" overload="false" type="bool" signature="isTransparentProxy() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="operator!=" fullname="QNetworkProxy::operator!=" href="qnetworkproxy.html#operator!=" location="qnetworkproxy.h" since="4.4" virtual="non" meta="plain" const="true" static="false" overload="false" type="bool" signature="operator!=(const QNetworkProxy &amp; other) const">
                <parameter left="const QNetworkProxy &amp;" right="" name="other" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="operator=" fullname="QNetworkProxy::operator=" href="qnetworkproxy.html#operator=" location="qnetworkproxy.h" since="4.2" virtual="non" meta="plain" const="false" static="false" overload="false" type="QNetworkProxy &amp;" signature="operator=(const QNetworkProxy &amp; other)">
                <parameter left="const QNetworkProxy &amp;" right="" name="other" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="operator==" fullname="QNetworkProxy::operator==" href="qnetworkproxy.html#operator==" location="qnetworkproxy.h" since="4.4" virtual="non" meta="plain" const="true" static="false" overload="false" type="bool" signature="operator==(const QNetworkProxy &amp; other) const">
                <parameter left="const QNetworkProxy &amp;" right="" name="other" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="password" fullname="QNetworkProxy::password" href="qnetworkproxy.html#password" location="qnetworkproxy.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QString" signature="password() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="port" fullname="QNetworkProxy::port" href="qnetworkproxy.html#port" location="qnetworkproxy.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="quint16" signature="port() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="rawHeader" fullname="QNetworkProxy::rawHeader" href="qnetworkproxy.html#rawHeader" location="qnetworkproxy.h" since="5.0" virtual="non" meta="plain" const="true" static="false" overload="false" type="QByteArray" signature="rawHeader(const QByteArray &amp; headerName) const">
                <parameter left="const QByteArray &amp;" right="" name="headerName" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="rawHeaderList" fullname="QNetworkProxy::rawHeaderList" href="qnetworkproxy.html#rawHeaderList" location="qnetworkproxy.h" since="5.0" virtual="non" meta="plain" const="true" static="false" overload="false" type="QList&lt;QByteArray&gt;" signature="rawHeaderList() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="setApplicationProxy" fullname="QNetworkProxy::setApplicationProxy" href="qnetworkproxy.html#setApplicationProxy" location="qnetworkproxy.h" virtual="non" meta="plain" const="false" static="true" overload="false" type="void" signature="setApplicationProxy(const QNetworkProxy &amp; networkProxy)">
                <parameter left="const QNetworkProxy &amp;" right="" name="networkProxy" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setCapabilities" fullname="QNetworkProxy::setCapabilities" href="qnetworkproxy.html#setCapabilities" location="qnetworkproxy.h" since="4.5" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setCapabilities(QFlags&lt;QNetworkProxy::Capability&gt; capabilities)">
                <parameter left="QFlags&lt;QNetworkProxy::Capability&gt;" right="" name="capabilities" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setHeader" fullname="QNetworkProxy::setHeader" href="qnetworkproxy.html#setHeader" location="qnetworkproxy.h" since="5.0" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setHeader(QNetworkRequest::KnownHeaders header, const QVariant &amp; value)">
                <parameter left="QNetworkRequest::KnownHeaders" right="" name="header" default=""/>
                <parameter left="const QVariant &amp;" right="" name="value" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setHostName" fullname="QNetworkProxy::setHostName" href="qnetworkproxy.html#setHostName" location="qnetworkproxy.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setHostName(const QString &amp; hostName)">
                <parameter left="const QString &amp;" right="" name="hostName" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setPassword" fullname="QNetworkProxy::setPassword" href="qnetworkproxy.html#setPassword" location="qnetworkproxy.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setPassword(const QString &amp; password)">
                <parameter left="const QString &amp;" right="" name="password" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setPort" fullname="QNetworkProxy::setPort" href="qnetworkproxy.html#setPort" location="qnetworkproxy.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setPort(quint16 port)">
                <parameter left="quint16" right="" name="port" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setRawHeader" fullname="QNetworkProxy::setRawHeader" href="qnetworkproxy.html#setRawHeader" location="qnetworkproxy.h" since="5.0" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setRawHeader(const QByteArray &amp; headerName, const QByteArray &amp; headerValue)">
                <parameter left="const QByteArray &amp;" right="" name="headerName" default=""/>
                <parameter left="const QByteArray &amp;" right="" name="headerValue" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setType" fullname="QNetworkProxy::setType" href="qnetworkproxy.html#setType" location="qnetworkproxy.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setType(QNetworkProxy::ProxyType type)">
                <parameter left="QNetworkProxy::ProxyType" right="" name="type" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setUser" fullname="QNetworkProxy::setUser" href="qnetworkproxy.html#setUser" location="qnetworkproxy.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setUser(const QString &amp; user)">
                <parameter left="const QString &amp;" right="" name="user" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="swap" fullname="QNetworkProxy::swap" href="qnetworkproxy.html#swap" location="qnetworkproxy.h" since="5.0" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="swap(QNetworkProxy &amp; other)">
                <parameter left="QNetworkProxy &amp;" right="" name="other" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="type" fullname="QNetworkProxy::type" href="qnetworkproxy.html#type" location="qnetworkproxy.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QNetworkProxy::ProxyType" signature="type() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="user" fullname="QNetworkProxy::user" href="qnetworkproxy.html#user" location="qnetworkproxy.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QString" signature="user() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="~QNetworkProxy" fullname="QNetworkProxy::~QNetworkProxy" href="qnetworkproxy.html#dtor.QNetworkProxy" location="qnetworkproxy.h" virtual="non" meta="destructor" const="false" static="false" overload="false" type="" signature="~QNetworkProxy()"/>
        </class>
        <class access="public" threadsafety="unspecified" status="commendable" name="QNetworkProxyFactory" href="qnetworkproxyfactory.html" location="qnetworkproxy.h" since="4.5" bases="" module="QtNetwork" groups="network">
            <contents name="system-proxies" title="System Proxies" level="1"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="QNetworkProxyFactory" fullname="QNetworkProxyFactory::QNetworkProxyFactory" href="qnetworkproxyfactory.html#QNetworkProxyFactory" location="qnetworkproxy.h" virtual="non" meta="constructor" const="false" static="false" overload="false" type="" signature="QNetworkProxyFactory()"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="proxyForQuery" fullname="QNetworkProxyFactory::proxyForQuery" href="qnetworkproxyfactory.html#proxyForQuery" location="qnetworkproxy.h" virtual="non" meta="plain" const="false" static="true" overload="false" type="QList&lt;QNetworkProxy&gt;" signature="proxyForQuery(const QNetworkProxyQuery &amp; query)">
                <parameter left="const QNetworkProxyQuery &amp;" right="" name="query" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="queryProxy" fullname="QNetworkProxyFactory::queryProxy" href="qnetworkproxyfactory.html#queryProxy" location="qnetworkproxy.h" virtual="pure" meta="plain" const="false" static="false" overload="false" type="QList&lt;QNetworkProxy&gt;" signature="queryProxy(const QNetworkProxyQuery &amp; query)">
                <parameter left="const QNetworkProxyQuery &amp;" right="" name="query" default="QNetworkProxyQuery()"/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setApplicationProxyFactory" fullname="QNetworkProxyFactory::setApplicationProxyFactory" href="qnetworkproxyfactory.html#setApplicationProxyFactory" location="qnetworkproxy.h" virtual="non" meta="plain" const="false" static="true" overload="false" type="void" signature="setApplicationProxyFactory(QNetworkProxyFactory * factory)">
                <parameter left="QNetworkProxyFactory *" right="" name="factory" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setUseSystemConfiguration" fullname="QNetworkProxyFactory::setUseSystemConfiguration" href="qnetworkproxyfactory.html#setUseSystemConfiguration" location="qnetworkproxy.h" since="4.6" virtual="non" meta="plain" const="false" static="true" overload="false" type="void" signature="setUseSystemConfiguration(bool enable)">
                <parameter left="bool" right="" name="enable" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="~QNetworkProxyFactory" fullname="QNetworkProxyFactory::~QNetworkProxyFactory" href="qnetworkproxyfactory.html#dtor.QNetworkProxyFactory" location="qnetworkproxy.h" virtual="impure" meta="destructor" const="false" static="false" overload="false" type="" signature="~QNetworkProxyFactory()"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="systemProxyForQuery" fullname="QNetworkProxyFactory::systemProxyForQuery" href="qnetworkproxyfactory.html#systemProxyForQuery" location="qnetworkproxy_win.cpp" virtual="non" meta="plain" const="false" static="true" overload="false" type="QList&lt;QNetworkProxy&gt;" signature="systemProxyForQuery(const QNetworkProxyQuery &amp; query)">
                <parameter left="const QNetworkProxyQuery &amp;" right="" name="query" default="QNetworkProxyQuery()"/>
            </function>
        </class>
        <class access="public" threadsafety="unspecified" status="commendable" name="QNetworkProxyQuery" href="qnetworkproxyquery.html" location="qnetworkproxy.h" since="4.5" bases="" module="QtNetwork" groups="shared">
            <enum access="public" threadsafety="unspecified" status="commendable" name="QueryType" fullname="QNetworkProxyQuery::QueryType" href="qnetworkproxyquery.html#QueryType-enum" location="qnetworkproxy.h">
                <value name="TcpSocket" value="0"/>
                <value name="UdpSocket" value="1"/>
                <value name="TcpServer" value="100"/>
                <value name="UrlRequest" value="101"/>
            </enum>
            <function access="public" threadsafety="unspecified" status="commendable" name="QNetworkProxyQuery" fullname="QNetworkProxyQuery::QNetworkProxyQuery" href="qnetworkproxyquery.html#QNetworkProxyQuery" location="qnetworkproxy.h" virtual="non" meta="constructor" const="false" static="false" overload="false" type="" signature="QNetworkProxyQuery()"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="QNetworkProxyQuery" fullname="QNetworkProxyQuery::QNetworkProxyQuery" href="qnetworkproxyquery.html#QNetworkProxyQuery-7" location="qnetworkproxy.h" virtual="non" meta="constructor" const="false" static="false" overload="true" overload-number="7" type="" signature="QNetworkProxyQuery(const QNetworkConfiguration &amp; networkConfiguration, const QString &amp; hostname, int port, const QString &amp; protocolTag, QueryType queryType)">
                <parameter left="const QNetworkConfiguration &amp;" right="" name="networkConfiguration" default=""/>
                <parameter left="const QString &amp;" right="" name="hostname" default=""/>
                <parameter left="int" right="" name="port" default=""/>
                <parameter left="const QString &amp;" right="" name="protocolTag" default="QString()"/>
                <parameter left="QueryType" right="" name="queryType" default="TcpSocket"/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="QNetworkProxyQuery" fullname="QNetworkProxyQuery::QNetworkProxyQuery" href="qnetworkproxyquery.html#QNetworkProxyQuery-6" location="qnetworkproxy.h" virtual="non" meta="constructor" const="false" static="false" overload="true" overload-number="6" type="" signature="QNetworkProxyQuery(const QNetworkConfiguration &amp; networkConfiguration, const QUrl &amp; requestUrl, QueryType queryType)">
                <parameter left="const QNetworkConfiguration &amp;" right="" name="networkConfiguration" default=""/>
                <parameter left="const QUrl &amp;" right="" name="requestUrl" default=""/>
                <parameter left="QueryType" right="" name="queryType" default="UrlRequest"/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="QNetworkProxyQuery" fullname="QNetworkProxyQuery::QNetworkProxyQuery" href="qnetworkproxyquery.html#QNetworkProxyQuery-8" location="qnetworkproxy.h" virtual="non" meta="constructor" const="false" static="false" overload="true" overload-number="8" type="" signature="QNetworkProxyQuery(const QNetworkConfiguration &amp; networkConfiguration, quint16 bindPort, const QString &amp; protocolTag, QueryType queryType)">
                <parameter left="const QNetworkConfiguration &amp;" right="" name="networkConfiguration" default=""/>
                <parameter left="quint16" right="" name="bindPort" default=""/>
                <parameter left="const QString &amp;" right="" name="protocolTag" default="QString()"/>
                <parameter left="QueryType" right="" name="queryType" default="TcpServer"/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="QNetworkProxyQuery" fullname="QNetworkProxyQuery::QNetworkProxyQuery" href="qnetworkproxyquery.html#QNetworkProxyQuery-5" location="qnetworkproxy.h" virtual="non" meta="constructor" const="false" static="false" overload="true" overload-number="5" type="" signature="QNetworkProxyQuery(const QNetworkProxyQuery &amp; other)">
                <parameter left="const QNetworkProxyQuery &amp;" right="" name="other" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="QNetworkProxyQuery" fullname="QNetworkProxyQuery::QNetworkProxyQuery" href="qnetworkproxyquery.html#QNetworkProxyQuery-3" location="qnetworkproxy.h" virtual="non" meta="constructor" const="false" static="false" overload="true" overload-number="3" type="" signature="QNetworkProxyQuery(const QString &amp; hostname, int port, const QString &amp; protocolTag, QueryType queryType)">
                <parameter left="const QString &amp;" right="" name="hostname" default=""/>
                <parameter left="int" right="" name="port" default=""/>
                <parameter left="const QString &amp;" right="" name="protocolTag" default="QString()"/>
                <parameter left="QueryType" right="" name="queryType" default="TcpSocket"/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="QNetworkProxyQuery" fullname="QNetworkProxyQuery::QNetworkProxyQuery" href="qnetworkproxyquery.html#QNetworkProxyQuery-2" location="qnetworkproxy.h" virtual="non" meta="constructor" const="false" static="false" overload="true" overload-number="2" type="" signature="QNetworkProxyQuery(const QUrl &amp; requestUrl, QueryType queryType)">
                <parameter left="const QUrl &amp;" right="" name="requestUrl" default=""/>
                <parameter left="QueryType" right="" name="queryType" default="UrlRequest"/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="QNetworkProxyQuery" fullname="QNetworkProxyQuery::QNetworkProxyQuery" href="qnetworkproxyquery.html#QNetworkProxyQuery-4" location="qnetworkproxy.h" virtual="non" meta="constructor" const="false" static="false" overload="true" overload-number="4" type="" signature="QNetworkProxyQuery(quint16 bindPort, const QString &amp; protocolTag, QueryType queryType)">
                <parameter left="quint16" right="" name="bindPort" default=""/>
                <parameter left="const QString &amp;" right="" name="protocolTag" default="QString()"/>
                <parameter left="QueryType" right="" name="queryType" default="TcpServer"/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="localPort" fullname="QNetworkProxyQuery::localPort" href="qnetworkproxyquery.html#localPort" location="qnetworkproxy.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="int" signature="localPort() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="networkConfiguration" fullname="QNetworkProxyQuery::networkConfiguration" href="qnetworkproxyquery.html#networkConfiguration" location="qnetworkproxy.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QNetworkConfiguration" signature="networkConfiguration() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="operator!=" fullname="QNetworkProxyQuery::operator!=" href="qnetworkproxyquery.html#operator!=" location="qnetworkproxy.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="bool" signature="operator!=(const QNetworkProxyQuery &amp; other) const">
                <parameter left="const QNetworkProxyQuery &amp;" right="" name="other" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="operator=" fullname="QNetworkProxyQuery::operator=" href="qnetworkproxyquery.html#operator=" location="qnetworkproxy.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="QNetworkProxyQuery &amp;" signature="operator=(const QNetworkProxyQuery &amp; other)">
                <parameter left="const QNetworkProxyQuery &amp;" right="" name="other" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="operator==" fullname="QNetworkProxyQuery::operator==" href="qnetworkproxyquery.html#operator==" location="qnetworkproxy.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="bool" signature="operator==(const QNetworkProxyQuery &amp; other) const">
                <parameter left="const QNetworkProxyQuery &amp;" right="" name="other" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="peerHostName" fullname="QNetworkProxyQuery::peerHostName" href="qnetworkproxyquery.html#peerHostName" location="qnetworkproxy.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QString" signature="peerHostName() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="peerPort" fullname="QNetworkProxyQuery::peerPort" href="qnetworkproxyquery.html#peerPort" location="qnetworkproxy.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="int" signature="peerPort() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="protocolTag" fullname="QNetworkProxyQuery::protocolTag" href="qnetworkproxyquery.html#protocolTag" location="qnetworkproxy.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QString" signature="protocolTag() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="queryType" fullname="QNetworkProxyQuery::queryType" href="qnetworkproxyquery.html#queryType" location="qnetworkproxy.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QueryType" signature="queryType() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="setLocalPort" fullname="QNetworkProxyQuery::setLocalPort" href="qnetworkproxyquery.html#setLocalPort" location="qnetworkproxy.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setLocalPort(int port)">
                <parameter left="int" right="" name="port" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setNetworkConfiguration" fullname="QNetworkProxyQuery::setNetworkConfiguration" href="qnetworkproxyquery.html#setNetworkConfiguration" location="qnetworkproxy.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setNetworkConfiguration(const QNetworkConfiguration &amp; networkConfiguration)">
                <parameter left="const QNetworkConfiguration &amp;" right="" name="networkConfiguration" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setPeerHostName" fullname="QNetworkProxyQuery::setPeerHostName" href="qnetworkproxyquery.html#setPeerHostName" location="qnetworkproxy.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setPeerHostName(const QString &amp; hostname)">
                <parameter left="const QString &amp;" right="" name="hostname" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setPeerPort" fullname="QNetworkProxyQuery::setPeerPort" href="qnetworkproxyquery.html#setPeerPort" location="qnetworkproxy.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setPeerPort(int port)">
                <parameter left="int" right="" name="port" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setProtocolTag" fullname="QNetworkProxyQuery::setProtocolTag" href="qnetworkproxyquery.html#setProtocolTag" location="qnetworkproxy.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setProtocolTag(const QString &amp; protocolTag)">
                <parameter left="const QString &amp;" right="" name="protocolTag" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setQueryType" fullname="QNetworkProxyQuery::setQueryType" href="qnetworkproxyquery.html#setQueryType" location="qnetworkproxy.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setQueryType(QueryType type)">
                <parameter left="QueryType" right="" name="type" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setUrl" fullname="QNetworkProxyQuery::setUrl" href="qnetworkproxyquery.html#setUrl" location="qnetworkproxy.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setUrl(const QUrl &amp; url)">
                <parameter left="const QUrl &amp;" right="" name="url" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="swap" fullname="QNetworkProxyQuery::swap" href="qnetworkproxyquery.html#swap" location="qnetworkproxy.h" since="5.0" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="swap(QNetworkProxyQuery &amp; other)">
                <parameter left="QNetworkProxyQuery &amp;" right="" name="other" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="url" fullname="QNetworkProxyQuery::url" href="qnetworkproxyquery.html#url" location="qnetworkproxy.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QUrl" signature="url() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="~QNetworkProxyQuery" fullname="QNetworkProxyQuery::~QNetworkProxyQuery" href="qnetworkproxyquery.html#dtor.QNetworkProxyQuery" location="qnetworkproxy.h" virtual="non" meta="destructor" const="false" static="false" overload="false" type="" signature="~QNetworkProxyQuery()"/>
        </class>
        <function access="public" threadsafety="unspecified" status="commendable" name="operator&lt;&lt;" href="" location="qnetworkproxy.h" since="5.0" virtual="non" meta="plain" const="false" static="false" overload="true" overload-number="41" type="QDebug" signature="operator&lt;&lt;(QDebug debug, const QNetworkProxy &amp; proxy)">
            <parameter left="QDebug" right="" name="debug" default=""/>
            <parameter left="const QNetworkProxy &amp;" right="" name="proxy" default=""/>
        </function>
        <class access="public" threadsafety="reentrant" status="commendable" name="QAbstractSocket" href="qabstractsocket.html" location="qabstractsocket.h" bases="QIODevice" module="QtNetwork" groups="network">
            <enum access="public" threadsafety="unspecified" status="commendable" name="BindFlag" fullname="QAbstractSocket::BindFlag" href="qabstractsocket.html#BindFlag-enum" location="qabstractsocket.h" since="5.0" typedef="QAbstractSocket::BindMode">
                <value name="DefaultForPlatform" value="0x0"/>
                <value name="ShareAddress" value="0x1"/>
                <value name="DontShareAddress" value="0x2"/>
                <value name="ReuseAddressHint" value="0x4"/>
            </enum>
            <enum access="public" threadsafety="unspecified" status="commendable" name="NetworkLayerProtocol" fullname="QAbstractSocket::NetworkLayerProtocol" href="qabstractsocket.html#NetworkLayerProtocol-enum" location="qabstractsocket.h">
                <value name="IPv4Protocol" value="0"/>
                <value name="IPv6Protocol" value="1"/>
                <value name="AnyIPProtocol" value="2"/>
                <value name="UnknownNetworkLayerProtocol" value="-1"/>
            </enum>
            <enum access="public" threadsafety="unspecified" status="commendable" name="PauseMode" fullname="QAbstractSocket::PauseMode" href="qabstractsocket.html#PauseMode-enum" location="qabstractsocket.h" since="5.0" typedef="QAbstractSocket::PauseModes">
                <value name="PauseNever" value="0x0"/>
                <value name="PauseOnSslErrors" value="0x1"/>
            </enum>
            <enum access="public" threadsafety="unspecified" status="commendable" name="SocketError" fullname="QAbstractSocket::SocketError" href="qabstractsocket.html#SocketError-enum" location="qabstractsocket.h">
                <value name="ConnectionRefusedError" value="0"/>
                <value name="RemoteHostClosedError" value="1"/>
                <value name="HostNotFoundError" value="2"/>
                <value name="SocketAccessError" value="3"/>
                <value name="SocketResourceError" value="4"/>
                <value name="SocketTimeoutError" value="5"/>
                <value name="DatagramTooLargeError" value="6"/>
                <value name="NetworkError" value="7"/>
                <value name="AddressInUseError" value="8"/>
                <value name="SocketAddressNotAvailableError" value="9"/>
                <value name="UnsupportedSocketOperationError" value="10"/>
                <value name="UnfinishedSocketOperationError" value="11"/>
                <value name="ProxyAuthenticationRequiredError" value="12"/>
                <value name="SslHandshakeFailedError" value="13"/>
                <value name="ProxyConnectionRefusedError" value="14"/>
                <value name="ProxyConnectionClosedError" value="15"/>
                <value name="ProxyConnectionTimeoutError" value="16"/>
                <value name="ProxyNotFoundError" value="17"/>
                <value name="ProxyProtocolError" value="18"/>
                <value name="OperationError" value="19"/>
                <value name="SslInternalError" value="20"/>
                <value name="SslInvalidUserDataError" value="21"/>
                <value name="TemporaryError" value="22"/>
                <value name="UnknownSocketError" value="-1"/>
            </enum>
            <enum access="public" threadsafety="unspecified" status="commendable" name="SocketOption" fullname="QAbstractSocket::SocketOption" href="qabstractsocket.html#SocketOption-enum" location="qabstractsocket.h" since="4.6">
                <value name="LowDelayOption" value="0"/>
                <value name="KeepAliveOption" value="1"/>
                <value name="MulticastTtlOption" value="2"/>
                <value name="MulticastLoopbackOption" value="3"/>
                <value name="TypeOfServiceOption" value="4"/>
            </enum>
            <enum access="public" threadsafety="unspecified" status="commendable" name="SocketState" fullname="QAbstractSocket::SocketState" href="qabstractsocket.html#SocketState-enum" location="qabstractsocket.h">
                <value name="UnconnectedState" value="0"/>
                <value name="HostLookupState" value="1"/>
                <value name="ConnectingState" value="2"/>
                <value name="ConnectedState" value="3"/>
                <value name="BoundState" value="4"/>
                <value name="ListeningState" value="5"/>
                <value name="ClosingState" value="6"/>
            </enum>
            <enum access="public" threadsafety="unspecified" status="commendable" name="SocketType" fullname="QAbstractSocket::SocketType" href="qabstractsocket.html#SocketType-enum" location="qabstractsocket.h">
                <value name="TcpSocket" value="0"/>
                <value name="UdpSocket" value="1"/>
                <value name="UnknownSocketType" value="-1"/>
            </enum>
            <typedef access="public" threadsafety="unspecified" status="commendable" name="BindMode" fullname="QAbstractSocket::BindMode" href="qabstractsocket.html#BindMode-typedef" location="qabstractsocket.h" enum="QAbstractSocket::BindFlag"/>
            <typedef access="public" threadsafety="unspecified" status="commendable" name="PauseModes" fullname="QAbstractSocket::PauseModes" href="qabstractsocket.html#PauseModes-typedef" location="qabstractsocket.h" enum="QAbstractSocket::PauseMode"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="QAbstractSocket" fullname="QAbstractSocket::QAbstractSocket" href="qabstractsocket.html#QAbstractSocket" location="qabstractsocket.h" virtual="non" meta="constructor" const="false" static="false" overload="false" type="" signature="QAbstractSocket(SocketType socketType, QObject * parent)">
                <parameter left="SocketType" right="" name="socketType" default=""/>
                <parameter left="QObject *" right="" name="parent" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="abort" fullname="QAbstractSocket::abort" href="qabstractsocket.html#abort" location="qabstractsocket.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="abort()"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="atEnd" fullname="QAbstractSocket::atEnd" href="qabstractsocket.html#atEnd" location="qabstractsocket.h" virtual="impure" meta="plain" const="true" static="false" overload="false" type="bool" signature="atEnd() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="bind" fullname="QAbstractSocket::bind" href="qabstractsocket.html#bind" location="qabstractsocket.h" since="5.0" virtual="non" meta="plain" const="false" static="false" overload="false" type="bool" signature="bind(const QHostAddress &amp; address, quint16 port, QFlags&lt;QAbstractSocket::BindFlag&gt; mode)">
                <parameter left="const QHostAddress &amp;" right="" name="address" default=""/>
                <parameter left="quint16" right="" name="port" default="0"/>
                <parameter left="QFlags&lt;QAbstractSocket::BindFlag&gt;" right="" name="mode" default="DefaultForPlatform"/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="bind" fullname="QAbstractSocket::bind" href="qabstractsocket.html#bind-2" location="qabstractsocket.h" since="5.0" virtual="non" meta="plain" const="false" static="false" overload="true" overload-number="2" type="bool" signature="bind(quint16 port, QFlags&lt;QAbstractSocket::BindFlag&gt; mode)">
                <parameter left="quint16" right="" name="port" default="0"/>
                <parameter left="QFlags&lt;QAbstractSocket::BindFlag&gt;" right="" name="mode" default="DefaultForPlatform"/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="bytesAvailable" fullname="QAbstractSocket::bytesAvailable" href="qabstractsocket.html#bytesAvailable" location="qabstractsocket.h" virtual="impure" meta="plain" const="true" static="false" overload="false" type="qint64" signature="bytesAvailable() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="bytesToWrite" fullname="QAbstractSocket::bytesToWrite" href="qabstractsocket.html#bytesToWrite" location="qabstractsocket.h" virtual="impure" meta="plain" const="true" static="false" overload="false" type="qint64" signature="bytesToWrite() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="canReadLine" fullname="QAbstractSocket::canReadLine" href="qabstractsocket.html#canReadLine" location="qabstractsocket.h" virtual="impure" meta="plain" const="true" static="false" overload="false" type="bool" signature="canReadLine() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="close" fullname="QAbstractSocket::close" href="qabstractsocket.html#close" location="qabstractsocket.h" virtual="impure" meta="plain" const="false" static="false" overload="false" type="void" signature="close()"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="connectToHost" fullname="QAbstractSocket::connectToHost" href="qabstractsocket.html#connectToHost-2" location="qabstractsocket.h" virtual="impure" meta="plain" const="false" static="false" overload="true" overload-number="2" type="void" signature="connectToHost(const QHostAddress &amp; address, quint16 port, OpenMode openMode)">
                <parameter left="const QHostAddress &amp;" right="" name="address" default=""/>
                <parameter left="quint16" right="" name="port" default=""/>
                <parameter left="OpenMode" right="" name="openMode" default="ReadWrite"/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="connectToHost" fullname="QAbstractSocket::connectToHost" href="qabstractsocket.html#connectToHost" location="qabstractsocket.h" virtual="impure" meta="plain" const="false" static="false" overload="false" type="void" signature="connectToHost(const QString &amp; hostName, quint16 port, OpenMode openMode, NetworkLayerProtocol protocol)">
                <parameter left="const QString &amp;" right="" name="hostName" default=""/>
                <parameter left="quint16" right="" name="port" default=""/>
                <parameter left="OpenMode" right="" name="openMode" default="ReadWrite"/>
                <parameter left="NetworkLayerProtocol" right="" name="protocol" default="AnyIPProtocol"/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="connected" fullname="QAbstractSocket::connected" href="qabstractsocket.html#connected" location="qabstractsocket.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="connected()"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="disconnectFromHost" fullname="QAbstractSocket::disconnectFromHost" href="qabstractsocket.html#disconnectFromHost" location="qabstractsocket.h" virtual="impure" meta="plain" const="false" static="false" overload="false" type="void" signature="disconnectFromHost()"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="disconnected" fullname="QAbstractSocket::disconnected" href="qabstractsocket.html#disconnected" location="qabstractsocket.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="disconnected()"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="error" fullname="QAbstractSocket::error" href="qabstractsocket.html#error-2" location="qabstractsocket.h" virtual="non" meta="signal" const="false" static="false" overload="true" overload-number="2" type="void" signature="error(QAbstractSocket::SocketError socketError)">
                <parameter left="QAbstractSocket::SocketError" right="" name="socketError" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="error" fullname="QAbstractSocket::error" href="qabstractsocket.html#error" location="qabstractsocket.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="SocketError" signature="error() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="flush" fullname="QAbstractSocket::flush" href="qabstractsocket.html#flush" location="qabstractsocket.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="bool" signature="flush()"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="hostFound" fullname="QAbstractSocket::hostFound" href="qabstractsocket.html#hostFound" location="qabstractsocket.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="hostFound()"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="isSequential" fullname="QAbstractSocket::isSequential" href="qabstractsocket.html#isSequential" location="qabstractsocket.h" virtual="impure" meta="plain" const="true" static="false" overload="false" type="bool" signature="isSequential() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="isValid" fullname="QAbstractSocket::isValid" href="qabstractsocket.html#isValid" location="qabstractsocket.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="bool" signature="isValid() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="localAddress" fullname="QAbstractSocket::localAddress" href="qabstractsocket.html#localAddress" location="qabstractsocket.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QHostAddress" signature="localAddress() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="localPort" fullname="QAbstractSocket::localPort" href="qabstractsocket.html#localPort" location="qabstractsocket.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="quint16" signature="localPort() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="pauseMode" fullname="QAbstractSocket::pauseMode" href="qabstractsocket.html#pauseMode" location="qabstractsocket.h" since="5.0" virtual="non" meta="plain" const="true" static="false" overload="false" type="PauseModes" signature="pauseMode() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="peerAddress" fullname="QAbstractSocket::peerAddress" href="qabstractsocket.html#peerAddress" location="qabstractsocket.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QHostAddress" signature="peerAddress() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="peerName" fullname="QAbstractSocket::peerName" href="qabstractsocket.html#peerName" location="qabstractsocket.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QString" signature="peerName() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="peerPort" fullname="QAbstractSocket::peerPort" href="qabstractsocket.html#peerPort" location="qabstractsocket.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="quint16" signature="peerPort() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="proxy" fullname="QAbstractSocket::proxy" href="qabstractsocket.html#proxy" location="qabstractsocket.h" since="4.1" virtual="non" meta="plain" const="true" static="false" overload="false" type="QNetworkProxy" signature="proxy() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="proxyAuthenticationRequired" fullname="QAbstractSocket::proxyAuthenticationRequired" href="qabstractsocket.html#proxyAuthenticationRequired" location="qabstractsocket.h" since="4.3" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="proxyAuthenticationRequired(const QNetworkProxy &amp; proxy, QAuthenticator * authenticator)">
                <parameter left="const QNetworkProxy &amp;" right="" name="proxy" default=""/>
                <parameter left="QAuthenticator *" right="" name="authenticator" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="readBufferSize" fullname="QAbstractSocket::readBufferSize" href="qabstractsocket.html#readBufferSize" location="qabstractsocket.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="qint64" signature="readBufferSize() const"/>
            <function access="protected" threadsafety="unspecified" status="commendable" name="readData" fullname="QAbstractSocket::readData" href="qabstractsocket.html#readData" location="qabstractsocket.h" virtual="impure" meta="plain" const="false" static="false" overload="false" type="qint64" signature="readData(char * data, qint64 maxSize)">
                <parameter left="char *" right="" name="data" default=""/>
                <parameter left="qint64" right="" name="maxSize" default=""/>
            </function>
            <function access="protected" threadsafety="unspecified" status="commendable" name="readLineData" fullname="QAbstractSocket::readLineData" href="qabstractsocket.html#readLineData" location="qabstractsocket.h" virtual="impure" meta="plain" const="false" static="false" overload="false" type="qint64" signature="readLineData(char * data, qint64 maxlen)">
                <parameter left="char *" right="" name="data" default=""/>
                <parameter left="qint64" right="" name="maxlen" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="resume" fullname="QAbstractSocket::resume" href="qabstractsocket.html#resume" location="qabstractsocket.h" since="5.0" virtual="impure" meta="plain" const="false" static="false" overload="false" type="void" signature="resume()"/>
            <function access="protected" threadsafety="unspecified" status="commendable" name="setLocalAddress" fullname="QAbstractSocket::setLocalAddress" href="qabstractsocket.html#setLocalAddress" location="qabstractsocket.h" since="4.1" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setLocalAddress(const QHostAddress &amp; address)">
                <parameter left="const QHostAddress &amp;" right="" name="address" default=""/>
            </function>
            <function access="protected" threadsafety="unspecified" status="commendable" name="setLocalPort" fullname="QAbstractSocket::setLocalPort" href="qabstractsocket.html#setLocalPort" location="qabstractsocket.h" since="4.1" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setLocalPort(quint16 port)">
                <parameter left="quint16" right="" name="port" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setPauseMode" fullname="QAbstractSocket::setPauseMode" href="qabstractsocket.html#setPauseMode" location="qabstractsocket.h" since="5.0" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setPauseMode(QFlags&lt;QAbstractSocket::PauseMode&gt; pauseMode)">
                <parameter left="QFlags&lt;QAbstractSocket::PauseMode&gt;" right="" name="pauseMode" default=""/>
            </function>
            <function access="protected" threadsafety="unspecified" status="commendable" name="setPeerAddress" fullname="QAbstractSocket::setPeerAddress" href="qabstractsocket.html#setPeerAddress" location="qabstractsocket.h" since="4.1" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setPeerAddress(const QHostAddress &amp; address)">
                <parameter left="const QHostAddress &amp;" right="" name="address" default=""/>
            </function>
            <function access="protected" threadsafety="unspecified" status="commendable" name="setPeerName" fullname="QAbstractSocket::setPeerName" href="qabstractsocket.html#setPeerName" location="qabstractsocket.h" since="4.1" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setPeerName(const QString &amp; name)">
                <parameter left="const QString &amp;" right="" name="name" default=""/>
            </function>
            <function access="protected" threadsafety="unspecified" status="commendable" name="setPeerPort" fullname="QAbstractSocket::setPeerPort" href="qabstractsocket.html#setPeerPort" location="qabstractsocket.h" since="4.1" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setPeerPort(quint16 port)">
                <parameter left="quint16" right="" name="port" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setProxy" fullname="QAbstractSocket::setProxy" href="qabstractsocket.html#setProxy" location="qabstractsocket.h" since="4.1" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setProxy(const QNetworkProxy &amp; networkProxy)">
                <parameter left="const QNetworkProxy &amp;" right="" name="networkProxy" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setReadBufferSize" fullname="QAbstractSocket::setReadBufferSize" href="qabstractsocket.html#setReadBufferSize" location="qabstractsocket.h" virtual="impure" meta="plain" const="false" static="false" overload="false" type="void" signature="setReadBufferSize(qint64 size)">
                <parameter left="qint64" right="" name="size" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setSocketDescriptor" fullname="QAbstractSocket::setSocketDescriptor" href="qabstractsocket.html#setSocketDescriptor" location="qabstractsocket.h" virtual="impure" meta="plain" const="false" static="false" overload="false" type="bool" signature="setSocketDescriptor(qintptr socketDescriptor, SocketState socketState, OpenMode openMode)">
                <parameter left="qintptr" right="" name="socketDescriptor" default=""/>
                <parameter left="SocketState" right="" name="socketState" default="ConnectedState"/>
                <parameter left="OpenMode" right="" name="openMode" default="ReadWrite"/>
            </function>
            <function access="protected" threadsafety="unspecified" status="commendable" name="setSocketError" fullname="QAbstractSocket::setSocketError" href="qabstractsocket.html#setSocketError" location="qabstractsocket.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setSocketError(SocketError socketError)">
                <parameter left="SocketError" right="" name="socketError" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setSocketOption" fullname="QAbstractSocket::setSocketOption" href="qabstractsocket.html#setSocketOption" location="qabstractsocket.h" since="4.6" virtual="impure" meta="plain" const="false" static="false" overload="false" type="void" signature="setSocketOption(QAbstractSocket::SocketOption option, const QVariant &amp; value)">
                <parameter left="QAbstractSocket::SocketOption" right="" name="option" default=""/>
                <parameter left="const QVariant &amp;" right="" name="value" default=""/>
            </function>
            <function access="protected" threadsafety="unspecified" status="commendable" name="setSocketState" fullname="QAbstractSocket::setSocketState" href="qabstractsocket.html#setSocketState" location="qabstractsocket.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setSocketState(SocketState state)">
                <parameter left="SocketState" right="" name="state" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="socketDescriptor" fullname="QAbstractSocket::socketDescriptor" href="qabstractsocket.html#socketDescriptor" location="qabstractsocket.h" virtual="impure" meta="plain" const="true" static="false" overload="false" type="qintptr" signature="socketDescriptor() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="socketOption" fullname="QAbstractSocket::socketOption" href="qabstractsocket.html#socketOption" location="qabstractsocket.h" since="4.6" virtual="impure" meta="plain" const="false" static="false" overload="false" type="QVariant" signature="socketOption(QAbstractSocket::SocketOption option)">
                <parameter left="QAbstractSocket::SocketOption" right="" name="option" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="socketType" fullname="QAbstractSocket::socketType" href="qabstractsocket.html#socketType" location="qabstractsocket.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="SocketType" signature="socketType() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="state" fullname="QAbstractSocket::state" href="qabstractsocket.html#state" location="qabstractsocket.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="SocketState" signature="state() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="stateChanged" fullname="QAbstractSocket::stateChanged" href="qabstractsocket.html#stateChanged" location="qabstractsocket.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="stateChanged(QAbstractSocket::SocketState socketState)">
                <parameter left="QAbstractSocket::SocketState" right="" name="socketState" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="waitForBytesWritten" fullname="QAbstractSocket::waitForBytesWritten" href="qabstractsocket.html#waitForBytesWritten" location="qabstractsocket.h" virtual="impure" meta="plain" const="false" static="false" overload="false" type="bool" signature="waitForBytesWritten(int msecs)">
                <parameter left="int" right="" name="msecs" default="30000"/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="waitForConnected" fullname="QAbstractSocket::waitForConnected" href="qabstractsocket.html#waitForConnected" location="qabstractsocket.h" virtual="impure" meta="plain" const="false" static="false" overload="false" type="bool" signature="waitForConnected(int msecs)">
                <parameter left="int" right="" name="msecs" default="30000"/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="waitForDisconnected" fullname="QAbstractSocket::waitForDisconnected" href="qabstractsocket.html#waitForDisconnected" location="qabstractsocket.h" virtual="impure" meta="plain" const="false" static="false" overload="false" type="bool" signature="waitForDisconnected(int msecs)">
                <parameter left="int" right="" name="msecs" default="30000"/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="waitForReadyRead" fullname="QAbstractSocket::waitForReadyRead" href="qabstractsocket.html#waitForReadyRead" location="qabstractsocket.h" virtual="impure" meta="plain" const="false" static="false" overload="false" type="bool" signature="waitForReadyRead(int msecs)">
                <parameter left="int" right="" name="msecs" default="30000"/>
            </function>
            <function access="protected" threadsafety="unspecified" status="commendable" name="writeData" fullname="QAbstractSocket::writeData" href="qabstractsocket.html#writeData" location="qabstractsocket.h" virtual="impure" meta="plain" const="false" static="false" overload="false" type="qint64" signature="writeData(const char * data, qint64 size)">
                <parameter left="const char *" right="" name="data" default=""/>
                <parameter left="qint64" right="" name="size" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="~QAbstractSocket" fullname="QAbstractSocket::~QAbstractSocket" href="qabstractsocket.html#dtor.QAbstractSocket" location="qabstractsocket.h" virtual="impure" meta="destructor" const="false" static="false" overload="false" type="" signature="~QAbstractSocket()"/>
        </class>
        <class access="public" threadsafety="unspecified" status="commendable" name="QLocalServer" href="qlocalserver.html" location="qlocalserver.h" since="4.4" bases="QObject" module="QtNetwork">
            <function access="public" threadsafety="unspecified" status="commendable" name="setSocketOptions" fullname="QLocalServer::setSocketOptions" href="qlocalserver.html#socketOptions-prop" location="qlocalserver.cpp" virtual="non" meta="plain" const="false" static="false" overload="false" associated-property="socketOptions" type="void" signature="setSocketOptions(QFlags&lt;QLocalServer::SocketOption&gt; options)">
                <parameter left="QFlags&lt;QLocalServer::SocketOption&gt;" right="" name="options" default=""/>
            </function>
            <enum access="public" threadsafety="unspecified" status="commendable" name="SocketOption" fullname="QLocalServer::SocketOption" href="qlocalserver.html#SocketOption-enum" location="qlocalserver.h" since="5.0" typedef="QLocalServer::SocketOptions">
                <value name="NoOptions" value="0x0"/>
                <value name="UserAccessOption" value="0x01"/>
                <value name="GroupAccessOption" value="0x2"/>
                <value name="OtherAccessOption" value="0x4"/>
                <value name="WorldAccessOption" value="0x7"/>
            </enum>
            <typedef access="public" threadsafety="unspecified" status="commendable" name="SocketOptions" fullname="QLocalServer::SocketOptions" href="qlocalserver.html#SocketOptions-typedef" location="qlocalserver.h" enum="QLocalServer::SocketOption"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="QLocalServer" fullname="QLocalServer::QLocalServer" href="qlocalserver.html#QLocalServer" location="qlocalserver.h" virtual="non" meta="constructor" const="false" static="false" overload="false" type="" signature="QLocalServer(QObject * parent)">
                <parameter left="QObject *" right="" name="parent" default="0"/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="close" fullname="QLocalServer::close" href="qlocalserver.html#close" location="qlocalserver.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="close()"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="errorString" fullname="QLocalServer::errorString" href="qlocalserver.html#errorString" location="qlocalserver.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QString" signature="errorString() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="fullServerName" fullname="QLocalServer::fullServerName" href="qlocalserver.html#fullServerName" location="qlocalserver.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QString" signature="fullServerName() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="hasPendingConnections" fullname="QLocalServer::hasPendingConnections" href="qlocalserver.html#hasPendingConnections" location="qlocalserver.h" virtual="impure" meta="plain" const="true" static="false" overload="false" type="bool" signature="hasPendingConnections() const"/>
            <function access="protected" threadsafety="unspecified" status="commendable" name="incomingConnection" fullname="QLocalServer::incomingConnection" href="qlocalserver.html#incomingConnection" location="qlocalserver.h" virtual="impure" meta="plain" const="false" static="false" overload="false" type="void" signature="incomingConnection(quintptr socketDescriptor)">
                <parameter left="quintptr" right="" name="socketDescriptor" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="isListening" fullname="QLocalServer::isListening" href="qlocalserver.html#isListening" location="qlocalserver.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="bool" signature="isListening() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="listen" fullname="QLocalServer::listen" href="qlocalserver.html#listen" location="qlocalserver.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="bool" signature="listen(const QString &amp; name)">
                <parameter left="const QString &amp;" right="" name="name" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="listen" fullname="QLocalServer::listen" href="qlocalserver.html#listen-2" location="qlocalserver.h" since="5.0" virtual="non" meta="plain" const="false" static="false" overload="true" overload-number="2" type="bool" signature="listen(qintptr socketDescriptor)">
                <parameter left="qintptr" right="" name="socketDescriptor" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="maxPendingConnections" fullname="QLocalServer::maxPendingConnections" href="qlocalserver.html#maxPendingConnections" location="qlocalserver.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="int" signature="maxPendingConnections() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="newConnection" fullname="QLocalServer::newConnection" href="qlocalserver.html#newConnection" location="qlocalserver.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="newConnection()"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="nextPendingConnection" fullname="QLocalServer::nextPendingConnection" href="qlocalserver.html#nextPendingConnection" location="qlocalserver.h" virtual="impure" meta="plain" const="false" static="false" overload="false" type="QLocalSocket *" signature="nextPendingConnection()"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="removeServer" fullname="QLocalServer::removeServer" href="qlocalserver.html#removeServer" location="qlocalserver.h" since="4.5" virtual="non" meta="plain" const="false" static="true" overload="false" type="bool" signature="removeServer(const QString &amp; name)">
                <parameter left="const QString &amp;" right="" name="name" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="serverError" fullname="QLocalServer::serverError" href="qlocalserver.html#serverError" location="qlocalserver.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QAbstractSocket::SocketError" signature="serverError() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="serverName" fullname="QLocalServer::serverName" href="qlocalserver.html#serverName" location="qlocalserver.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QString" signature="serverName() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="setMaxPendingConnections" fullname="QLocalServer::setMaxPendingConnections" href="qlocalserver.html#setMaxPendingConnections" location="qlocalserver.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setMaxPendingConnections(int numConnections)">
                <parameter left="int" right="" name="numConnections" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="socketOptions" fullname="QLocalServer::socketOptions" href="qlocalserver.html#socketOptions-prop" location="qlocalserver.h" since="5.0" virtual="non" meta="plain" const="true" static="false" overload="false" associated-property="socketOptions" type="SocketOptions" signature="socketOptions() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="waitForNewConnection" fullname="QLocalServer::waitForNewConnection" href="qlocalserver.html#waitForNewConnection" location="qlocalserver.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="bool" signature="waitForNewConnection(int msec, bool * timedOut)">
                <parameter left="int" right="" name="msec" default="0"/>
                <parameter left="bool *" right="" name="timedOut" default="0"/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="~QLocalServer" fullname="QLocalServer::~QLocalServer" href="qlocalserver.html#dtor.QLocalServer" location="qlocalserver.h" virtual="non" meta="destructor" const="false" static="false" overload="false" type="" signature="~QLocalServer()"/>
            <property access="public" threadsafety="unspecified" status="commendable" name="socketOptions" fullname="QLocalServer::socketOptions" href="qlocalserver.html#socketOptions-prop" location="qlocalserver.h" since="5.0" type="SocketOptions">
                <getter name="socketOptions"/>
                <setter name="setSocketOptions"/>
            </property>
        </class>
        <class access="public" threadsafety="unspecified" status="commendable" name="QLocalSocket" href="qlocalsocket.html" location="qlocalsocket.h" since="4.4" bases="QIODevice" module="QtNetwork">
            <enum access="public" threadsafety="unspecified" status="commendable" name="LocalSocketError" fullname="QLocalSocket::LocalSocketError" href="qlocalsocket.html#LocalSocketError-enum" location="qlocalsocket.h">
                <value name="ConnectionRefusedError" value="QAbstractSocket::ConnectionRefusedError"/>
                <value name="PeerClosedError" value="QAbstractSocket::RemoteHostClosedError"/>
                <value name="ServerNotFoundError" value="QAbstractSocket::HostNotFoundError"/>
                <value name="SocketAccessError" value="QAbstractSocket::SocketAccessError"/>
                <value name="SocketResourceError" value="QAbstractSocket::SocketResourceError"/>
                <value name="SocketTimeoutError" value="QAbstractSocket::SocketTimeoutError"/>
                <value name="DatagramTooLargeError" value="QAbstractSocket::DatagramTooLargeError"/>
                <value name="ConnectionError" value="QAbstractSocket::NetworkError"/>
                <value name="UnsupportedSocketOperationError" value="QAbstractSocket::UnsupportedSocketOperationError"/>
                <value name="UnknownSocketError" value="QAbstractSocket::UnknownSocketError"/>
                <value name="OperationError" value="QAbstractSocket::OperationError"/>
            </enum>
            <enum access="public" threadsafety="unspecified" status="commendable" name="LocalSocketState" fullname="QLocalSocket::LocalSocketState" href="qlocalsocket.html#LocalSocketState-enum" location="qlocalsocket.h">
                <value name="UnconnectedState" value="QAbstractSocket::UnconnectedState"/>
                <value name="ConnectingState" value="QAbstractSocket::ConnectingState"/>
                <value name="ConnectedState" value="QAbstractSocket::ConnectedState"/>
                <value name="ClosingState" value="QAbstractSocket::ClosingState"/>
            </enum>
            <function access="public" threadsafety="unspecified" status="commendable" name="QLocalSocket" fullname="QLocalSocket::QLocalSocket" href="qlocalsocket.html#QLocalSocket" location="qlocalsocket.h" virtual="non" meta="constructor" const="false" static="false" overload="false" type="" signature="QLocalSocket(QObject * parent)">
                <parameter left="QObject *" right="" name="parent" default="0"/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="connected" fullname="QLocalSocket::connected" href="qlocalsocket.html#connected" location="qlocalsocket.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="connected()"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="disconnected" fullname="QLocalSocket::disconnected" href="qlocalsocket.html#disconnected" location="qlocalsocket.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="disconnected()"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="error" fullname="QLocalSocket::error" href="qlocalsocket.html#error-2" location="qlocalsocket.h" virtual="non" meta="signal" const="false" static="false" overload="true" overload-number="2" type="void" signature="error(QLocalSocket::LocalSocketError socketError)">
                <parameter left="QLocalSocket::LocalSocketError" right="" name="socketError" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="fullServerName" fullname="QLocalSocket::fullServerName" href="qlocalsocket.html#fullServerName" location="qlocalsocket.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QString" signature="fullServerName() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="isSequential" fullname="QLocalSocket::isSequential" href="qlocalsocket.html#isSequential" location="qlocalsocket.h" virtual="impure" meta="plain" const="true" static="false" overload="false" type="bool" signature="isSequential() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="serverName" fullname="QLocalSocket::serverName" href="qlocalsocket.html#serverName" location="qlocalsocket.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QString" signature="serverName() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="state" fullname="QLocalSocket::state" href="qlocalsocket.html#state" location="qlocalsocket.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="LocalSocketState" signature="state() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="stateChanged" fullname="QLocalSocket::stateChanged" href="qlocalsocket.html#stateChanged" location="qlocalsocket.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="stateChanged(QLocalSocket::LocalSocketState socketState)">
                <parameter left="QLocalSocket::LocalSocketState" right="" name="socketState" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="~QLocalSocket" fullname="QLocalSocket::~QLocalSocket" href="qlocalsocket.html#dtor.QLocalSocket" location="qlocalsocket.h" virtual="non" meta="destructor" const="false" static="false" overload="false" type="" signature="~QLocalSocket()"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="abort" fullname="QLocalSocket::abort" href="qlocalsocket.html#abort" location="qlocalsocket_win.cpp" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="abort()"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="bytesAvailable" fullname="QLocalSocket::bytesAvailable" href="qlocalsocket.html#bytesAvailable" location="qlocalsocket_win.cpp" virtual="impure" meta="plain" const="true" static="false" overload="false" type="qint64" signature="bytesAvailable() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="bytesToWrite" fullname="QLocalSocket::bytesToWrite" href="qlocalsocket.html#bytesToWrite" location="qlocalsocket_win.cpp" virtual="impure" meta="plain" const="true" static="false" overload="false" type="qint64" signature="bytesToWrite() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="canReadLine" fullname="QLocalSocket::canReadLine" href="qlocalsocket.html#canReadLine" location="qlocalsocket_win.cpp" virtual="impure" meta="plain" const="true" static="false" overload="false" type="bool" signature="canReadLine() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="close" fullname="QLocalSocket::close" href="qlocalsocket.html#close" location="qlocalsocket_win.cpp" virtual="impure" meta="plain" const="false" static="false" overload="false" type="void" signature="close()"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="connectToServer" fullname="QLocalSocket::connectToServer" href="qlocalsocket.html#connectToServer" location="qlocalsocket_win.cpp" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="connectToServer(const QString &amp; name, OpenMode openMode)">
                <parameter left="const QString &amp;" right="" name="name" default=""/>
                <parameter left="OpenMode" right="" name="openMode" default="ReadWrite"/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="disconnectFromServer" fullname="QLocalSocket::disconnectFromServer" href="qlocalsocket.html#disconnectFromServer" location="qlocalsocket_win.cpp" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="disconnectFromServer()"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="error" fullname="QLocalSocket::error" href="qlocalsocket.html#error" location="qlocalsocket_win.cpp" virtual="non" meta="plain" const="true" static="false" overload="false" type="LocalSocketError" signature="error() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="flush" fullname="QLocalSocket::flush" href="qlocalsocket.html#flush" location="qlocalsocket_win.cpp" virtual="non" meta="plain" const="false" static="false" overload="false" type="bool" signature="flush()"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="isValid" fullname="QLocalSocket::isValid" href="qlocalsocket.html#isValid" location="qlocalsocket_win.cpp" virtual="non" meta="plain" const="true" static="false" overload="false" type="bool" signature="isValid() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="readBufferSize" fullname="QLocalSocket::readBufferSize" href="qlocalsocket.html#readBufferSize" location="qlocalsocket_win.cpp" virtual="non" meta="plain" const="true" static="false" overload="false" type="qint64" signature="readBufferSize() const"/>
            <function access="protected" threadsafety="unspecified" status="commendable" name="readData" fullname="QLocalSocket::readData" href="qlocalsocket.html#readData" location="qlocalsocket_win.cpp" virtual="impure" meta="plain" const="false" static="false" overload="false" type="qint64" signature="readData(char * data, qint64 c)">
                <parameter left="char *" right="" name="data" default=""/>
                <parameter left="qint64" right="" name="c" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setReadBufferSize" fullname="QLocalSocket::setReadBufferSize" href="qlocalsocket.html#setReadBufferSize" location="qlocalsocket_win.cpp" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setReadBufferSize(qint64 size)">
                <parameter left="qint64" right="" name="size" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setSocketDescriptor" fullname="QLocalSocket::setSocketDescriptor" href="qlocalsocket.html#setSocketDescriptor" location="qlocalsocket_win.cpp" virtual="non" meta="plain" const="false" static="false" overload="false" type="bool" signature="setSocketDescriptor(qintptr socketDescriptor, LocalSocketState socketState, OpenMode openMode)">
                <parameter left="qintptr" right="" name="socketDescriptor" default=""/>
                <parameter left="LocalSocketState" right="" name="socketState" default="ConnectedState"/>
                <parameter left="OpenMode" right="" name="openMode" default="ReadWrite"/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="socketDescriptor" fullname="QLocalSocket::socketDescriptor" href="qlocalsocket.html#socketDescriptor" location="qlocalsocket_win.cpp" virtual="non" meta="plain" const="true" static="false" overload="false" type="qintptr" signature="socketDescriptor() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="waitForBytesWritten" fullname="QLocalSocket::waitForBytesWritten" href="qlocalsocket.html#waitForBytesWritten" location="qlocalsocket_win.cpp" virtual="impure" meta="plain" const="false" static="false" overload="false" type="bool" signature="waitForBytesWritten(int msecs)">
                <parameter left="int" right="" name="msecs" default="30000"/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="waitForConnected" fullname="QLocalSocket::waitForConnected" href="qlocalsocket.html#waitForConnected" location="qlocalsocket_win.cpp" virtual="non" meta="plain" const="false" static="false" overload="false" type="bool" signature="waitForConnected(int msecs)">
                <parameter left="int" right="" name="msecs" default="30000"/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="waitForDisconnected" fullname="QLocalSocket::waitForDisconnected" href="qlocalsocket.html#waitForDisconnected" location="qlocalsocket_win.cpp" virtual="non" meta="plain" const="false" static="false" overload="false" type="bool" signature="waitForDisconnected(int msecs)">
                <parameter left="int" right="" name="msecs" default="30000"/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="waitForReadyRead" fullname="QLocalSocket::waitForReadyRead" href="qlocalsocket.html#waitForReadyRead" location="qlocalsocket_win.cpp" virtual="impure" meta="plain" const="false" static="false" overload="false" type="bool" signature="waitForReadyRead(int msecs)">
                <parameter left="int" right="" name="msecs" default="30000"/>
            </function>
            <function access="protected" threadsafety="unspecified" status="commendable" name="writeData" fullname="QLocalSocket::writeData" href="qlocalsocket.html#writeData" location="qlocalsocket_win.cpp" virtual="impure" meta="plain" const="false" static="false" overload="false" type="qint64" signature="writeData(const char * data, qint64 c)">
                <parameter left="const char *" right="" name="data" default=""/>
                <parameter left="qint64" right="" name="c" default=""/>
            </function>
        </class>
        <class access="public" threadsafety="reentrant" status="commendable" name="QTcpServer" href="qtcpserver.html" location="qtcpserver.h" bases="QObject" module="QtNetwork" groups="network">
            <function access="public" threadsafety="unspecified" status="commendable" name="QTcpServer" fullname="QTcpServer::QTcpServer" href="qtcpserver.html#QTcpServer" location="qtcpserver.h" virtual="non" meta="constructor" const="false" static="false" overload="false" type="" signature="QTcpServer(QObject * parent)">
                <parameter left="QObject *" right="" name="parent" default="0"/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="acceptError" fullname="QTcpServer::acceptError" href="qtcpserver.html#acceptError" location="qtcpserver.h" since="5.0" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="acceptError(QAbstractSocket::SocketError socketError)">
                <parameter left="QAbstractSocket::SocketError" right="" name="socketError" default=""/>
            </function>
            <function access="protected" threadsafety="unspecified" status="commendable" name="addPendingConnection" fullname="QTcpServer::addPendingConnection" href="qtcpserver.html#addPendingConnection" location="qtcpserver.h" since="4.7" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="addPendingConnection(QTcpSocket * socket)">
                <parameter left="QTcpSocket *" right="" name="socket" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="close" fullname="QTcpServer::close" href="qtcpserver.html#close" location="qtcpserver.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="close()"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="errorString" fullname="QTcpServer::errorString" href="qtcpserver.html#errorString" location="qtcpserver.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QString" signature="errorString() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="hasPendingConnections" fullname="QTcpServer::hasPendingConnections" href="qtcpserver.html#hasPendingConnections" location="qtcpserver.h" virtual="impure" meta="plain" const="true" static="false" overload="false" type="bool" signature="hasPendingConnections() const"/>
            <function access="protected" threadsafety="unspecified" status="commendable" name="incomingConnection" fullname="QTcpServer::incomingConnection" href="qtcpserver.html#incomingConnection" location="qtcpserver.h" virtual="impure" meta="plain" const="false" static="false" overload="false" type="void" signature="incomingConnection(qintptr socketDescriptor)">
                <parameter left="qintptr" right="" name="socketDescriptor" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="isListening" fullname="QTcpServer::isListening" href="qtcpserver.html#isListening" location="qtcpserver.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="bool" signature="isListening() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="listen" fullname="QTcpServer::listen" href="qtcpserver.html#listen" location="qtcpserver.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="bool" signature="listen(const QHostAddress &amp; address, quint16 port)">
                <parameter left="const QHostAddress &amp;" right="" name="address" default="QHostAddress::Any"/>
                <parameter left="quint16" right="" name="port" default="0"/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="maxPendingConnections" fullname="QTcpServer::maxPendingConnections" href="qtcpserver.html#maxPendingConnections" location="qtcpserver.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="int" signature="maxPendingConnections() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="newConnection" fullname="QTcpServer::newConnection" href="qtcpserver.html#newConnection" location="qtcpserver.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="newConnection()"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="nextPendingConnection" fullname="QTcpServer::nextPendingConnection" href="qtcpserver.html#nextPendingConnection" location="qtcpserver.h" virtual="impure" meta="plain" const="false" static="false" overload="false" type="QTcpSocket *" signature="nextPendingConnection()"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="pauseAccepting" fullname="QTcpServer::pauseAccepting" href="qtcpserver.html#pauseAccepting" location="qtcpserver.h" since="5.0" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="pauseAccepting()"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="proxy" fullname="QTcpServer::proxy" href="qtcpserver.html#proxy" location="qtcpserver.h" since="4.1" virtual="non" meta="plain" const="true" static="false" overload="false" type="QNetworkProxy" signature="proxy() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="resumeAccepting" fullname="QTcpServer::resumeAccepting" href="qtcpserver.html#resumeAccepting" location="qtcpserver.h" since="5.0" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="resumeAccepting()"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="serverAddress" fullname="QTcpServer::serverAddress" href="qtcpserver.html#serverAddress" location="qtcpserver.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QHostAddress" signature="serverAddress() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="serverError" fullname="QTcpServer::serverError" href="qtcpserver.html#serverError" location="qtcpserver.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QAbstractSocket::SocketError" signature="serverError() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="serverPort" fullname="QTcpServer::serverPort" href="qtcpserver.html#serverPort" location="qtcpserver.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="quint16" signature="serverPort() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="setMaxPendingConnections" fullname="QTcpServer::setMaxPendingConnections" href="qtcpserver.html#setMaxPendingConnections" location="qtcpserver.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setMaxPendingConnections(int numConnections)">
                <parameter left="int" right="" name="numConnections" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setProxy" fullname="QTcpServer::setProxy" href="qtcpserver.html#setProxy" location="qtcpserver.h" since="4.1" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setProxy(const QNetworkProxy &amp; networkProxy)">
                <parameter left="const QNetworkProxy &amp;" right="" name="networkProxy" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setSocketDescriptor" fullname="QTcpServer::setSocketDescriptor" href="qtcpserver.html#setSocketDescriptor" location="qtcpserver.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="bool" signature="setSocketDescriptor(qintptr socketDescriptor)">
                <parameter left="qintptr" right="" name="socketDescriptor" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="socketDescriptor" fullname="QTcpServer::socketDescriptor" href="qtcpserver.html#socketDescriptor" location="qtcpserver.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="qintptr" signature="socketDescriptor() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="waitForNewConnection" fullname="QTcpServer::waitForNewConnection" href="qtcpserver.html#waitForNewConnection" location="qtcpserver.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="bool" signature="waitForNewConnection(int msec, bool * timedOut)">
                <parameter left="int" right="" name="msec" default="0"/>
                <parameter left="bool *" right="" name="timedOut" default="0"/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="~QTcpServer" fullname="QTcpServer::~QTcpServer" href="qtcpserver.html#dtor.QTcpServer" location="qtcpserver.h" virtual="impure" meta="destructor" const="false" static="false" overload="false" type="" signature="~QTcpServer()"/>
        </class>
        <class access="public" threadsafety="reentrant" status="commendable" name="QTcpSocket" href="qtcpsocket.html" location="qtcpsocket.h" bases="QAbstractSocket" module="QtNetwork" groups="network">
            <function access="public" threadsafety="unspecified" status="commendable" name="QTcpSocket" fullname="QTcpSocket::QTcpSocket" href="qtcpsocket.html#QTcpSocket" location="qtcpsocket.h" virtual="non" meta="constructor" const="false" static="false" overload="false" type="" signature="QTcpSocket(QObject * parent)">
                <parameter left="QObject *" right="" name="parent" default="0"/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="~QTcpSocket" fullname="QTcpSocket::~QTcpSocket" href="qtcpsocket.html#dtor.QTcpSocket" location="qtcpsocket.h" virtual="impure" meta="destructor" const="false" static="false" overload="false" type="" signature="~QTcpSocket()"/>
        </class>
        <class access="public" threadsafety="reentrant" status="commendable" name="QUdpSocket" href="qudpsocket.html" location="qudpsocket.h" bases="QAbstractSocket" module="QtNetwork" groups="network">
            <function access="public" threadsafety="unspecified" status="commendable" name="QUdpSocket" fullname="QUdpSocket::QUdpSocket" href="qudpsocket.html#QUdpSocket" location="qudpsocket.h" virtual="non" meta="constructor" const="false" static="false" overload="false" type="" signature="QUdpSocket(QObject * parent)">
                <parameter left="QObject *" right="" name="parent" default="0"/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="hasPendingDatagrams" fullname="QUdpSocket::hasPendingDatagrams" href="qudpsocket.html#hasPendingDatagrams" location="qudpsocket.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="bool" signature="hasPendingDatagrams() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="joinMulticastGroup" fullname="QUdpSocket::joinMulticastGroup" href="qudpsocket.html#joinMulticastGroup" location="qudpsocket.h" since="4.8" virtual="non" meta="plain" const="false" static="false" overload="false" type="bool" signature="joinMulticastGroup(const QHostAddress &amp; groupAddress)">
                <parameter left="const QHostAddress &amp;" right="" name="groupAddress" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="joinMulticastGroup" fullname="QUdpSocket::joinMulticastGroup" href="qudpsocket.html#joinMulticastGroup-2" location="qudpsocket.h" since="4.8" virtual="non" meta="plain" const="false" static="false" overload="true" overload-number="2" type="bool" signature="joinMulticastGroup(const QHostAddress &amp; groupAddress, const QNetworkInterface &amp; iface)">
                <parameter left="const QHostAddress &amp;" right="" name="groupAddress" default=""/>
                <parameter left="const QNetworkInterface &amp;" right="" name="iface" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="leaveMulticastGroup" fullname="QUdpSocket::leaveMulticastGroup" href="qudpsocket.html#leaveMulticastGroup" location="qudpsocket.h" since="4.8" virtual="non" meta="plain" const="false" static="false" overload="false" type="bool" signature="leaveMulticastGroup(const QHostAddress &amp; groupAddress)">
                <parameter left="const QHostAddress &amp;" right="" name="groupAddress" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="leaveMulticastGroup" fullname="QUdpSocket::leaveMulticastGroup" href="qudpsocket.html#leaveMulticastGroup-2" location="qudpsocket.h" since="4.8" virtual="non" meta="plain" const="false" static="false" overload="true" overload-number="2" type="bool" signature="leaveMulticastGroup(const QHostAddress &amp; groupAddress, const QNetworkInterface &amp; iface)">
                <parameter left="const QHostAddress &amp;" right="" name="groupAddress" default=""/>
                <parameter left="const QNetworkInterface &amp;" right="" name="iface" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="multicastInterface" fullname="QUdpSocket::multicastInterface" href="qudpsocket.html#multicastInterface" location="qudpsocket.h" since="4.8" virtual="non" meta="plain" const="true" static="false" overload="false" type="QNetworkInterface" signature="multicastInterface() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="pendingDatagramSize" fullname="QUdpSocket::pendingDatagramSize" href="qudpsocket.html#pendingDatagramSize" location="qudpsocket.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="qint64" signature="pendingDatagramSize() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="readDatagram" fullname="QUdpSocket::readDatagram" href="qudpsocket.html#readDatagram" location="qudpsocket.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="qint64" signature="readDatagram(char * data, qint64 maxSize, QHostAddress * address, quint16 * port)">
                <parameter left="char *" right="" name="data" default=""/>
                <parameter left="qint64" right="" name="maxSize" default=""/>
                <parameter left="QHostAddress *" right="" name="address" default="0"/>
                <parameter left="quint16 *" right="" name="port" default="0"/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setMulticastInterface" fullname="QUdpSocket::setMulticastInterface" href="qudpsocket.html#setMulticastInterface" location="qudpsocket.h" since="4.8" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setMulticastInterface(const QNetworkInterface &amp; iface)">
                <parameter left="const QNetworkInterface &amp;" right="" name="iface" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="writeDatagram" fullname="QUdpSocket::writeDatagram" href="qudpsocket.html#writeDatagram-2" location="qudpsocket.h" virtual="non" meta="plain" const="false" static="false" overload="true" overload-number="2" type="qint64" signature="writeDatagram(const QByteArray &amp; datagram, const QHostAddress &amp; host, quint16 port)">
                <parameter left="const QByteArray &amp;" right="" name="datagram" default=""/>
                <parameter left="const QHostAddress &amp;" right="" name="host" default=""/>
                <parameter left="quint16" right="" name="port" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="writeDatagram" fullname="QUdpSocket::writeDatagram" href="qudpsocket.html#writeDatagram" location="qudpsocket.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="qint64" signature="writeDatagram(const char * data, qint64 size, const QHostAddress &amp; address, quint16 port)">
                <parameter left="const char *" right="" name="data" default=""/>
                <parameter left="qint64" right="" name="size" default=""/>
                <parameter left="const QHostAddress &amp;" right="" name="address" default=""/>
                <parameter left="quint16" right="" name="port" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="~QUdpSocket" fullname="QUdpSocket::~QUdpSocket" href="qudpsocket.html#dtor.QUdpSocket" location="qudpsocket.h" virtual="impure" meta="destructor" const="false" static="false" overload="false" type="" signature="~QUdpSocket()"/>
        </class>
        <namespace access="public" threadsafety="unspecified" status="commendable" name="QSsl" href="qssl.html" location="qssl.h" since="4.3" module="QtNetwork" groups="network,ssl">
            <enum access="public" threadsafety="unspecified" status="commendable" name="AlternativeNameEntryType" fullname="QSsl::AlternativeNameEntryType" href="qssl.html#AlternativeNameEntryType-enum" location="qssl.h">
                <value name="EmailEntry" value="0"/>
                <value name="DnsEntry" value="1"/>
            </enum>
            <enum access="public" threadsafety="unspecified" status="commendable" name="EncodingFormat" fullname="QSsl::EncodingFormat" href="qssl.html#EncodingFormat-enum" location="qssl.h">
                <value name="Pem" value="0"/>
                <value name="Der" value="1"/>
            </enum>
            <enum access="public" threadsafety="unspecified" status="commendable" name="KeyAlgorithm" fullname="QSsl::KeyAlgorithm" href="qssl.html#KeyAlgorithm-enum" location="qssl.h">
                <value name="Opaque" value="0"/>
                <value name="Rsa" value="1"/>
                <value name="Dsa" value="2"/>
            </enum>
            <enum access="public" threadsafety="unspecified" status="commendable" name="KeyType" fullname="QSsl::KeyType" href="qssl.html#KeyType-enum" location="qssl.h">
                <value name="PrivateKey" value="0"/>
                <value name="PublicKey" value="1"/>
            </enum>
            <enum access="public" threadsafety="unspecified" status="commendable" name="SslOption" fullname="QSsl::SslOption" href="qssl.html#SslOption-enum" location="qssl.h" typedef="QSsl::SslOptions">
                <value name="SslOptionDisableEmptyFragments" value="0x01"/>
                <value name="SslOptionDisableSessionTickets" value="0x02"/>
                <value name="SslOptionDisableCompression" value="0x04"/>
                <value name="SslOptionDisableServerNameIndication" value="0x08"/>
                <value name="SslOptionDisableLegacyRenegotiation" value="0x10"/>
            </enum>
            <enum access="public" threadsafety="unspecified" status="commendable" name="SslProtocol" fullname="QSsl::SslProtocol" href="qssl.html#SslProtocol-enum" location="qssl.h">
                <value name="SslV3" value="0"/>
                <value name="SslV2" value="1"/>
                <value name="TlsV1_0" value="2"/>
                <value name="TlsV1" value="TlsV1_0"/>
                <value name="TlsV1_1" value=""/>
                <value name="TlsV1_2" value=""/>
                <value name="AnyProtocol" value=""/>
                <value name="TlsV1SslV3" value=""/>
                <value name="SecureProtocols" value=""/>
                <value name="UnknownProtocol" value="-1"/>
            </enum>
            <typedef access="public" threadsafety="unspecified" status="obsolete" name="AlternateNameEntryType" fullname="QSsl::AlternateNameEntryType" href="qssl-obsolete.html#AlternateNameEntryType-typedef" location="qssl.h"/>
            <typedef access="public" threadsafety="unspecified" status="commendable" name="SslOptions" fullname="QSsl::SslOptions" href="qssl.html#SslOptions-typedef" location="qssl.h" enum="QSsl::SslOption"/>
        </namespace>
        <class access="public" threadsafety="reentrant" status="commendable" name="QSslCertificate" href="qsslcertificate.html" location="qsslcertificate.h" since="4.3" bases="" module="QtNetwork" groups="network,ssl,shared">
            <function access="public" threadsafety="unspecified" status="commendable" name="issuerInfo" fullname="QSslCertificate::issuerInfo" href="qsslcertificate.html#issuerInfo" location="qsslcertificate.cpp" virtual="non" meta="plain" const="true" static="false" overload="false" type="QStringList" signature="issuerInfo(SubjectInfo subject) const">
                <parameter left="SubjectInfo" right="" name="subject" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="subjectInfo" fullname="QSslCertificate::subjectInfo" href="qsslcertificate.html#subjectInfo" location="qsslcertificate.cpp" virtual="non" meta="plain" const="true" static="false" overload="false" type="QStringList" signature="subjectInfo(SubjectInfo subject) const">
                <parameter left="SubjectInfo" right="" name="subject" default=""/>
            </function>
            <enum access="public" threadsafety="unspecified" status="commendable" name="SubjectInfo" fullname="QSslCertificate::SubjectInfo" href="qsslcertificate.html#SubjectInfo-enum" location="qsslcertificate.h">
                <value name="Organization" value="0"/>
                <value name="CommonName" value="1"/>
                <value name="LocalityName" value="2"/>
                <value name="OrganizationalUnitName" value="3"/>
                <value name="CountryName" value="4"/>
                <value name="StateOrProvinceName" value="5"/>
                <value name="DistinguishedNameQualifier" value="6"/>
                <value name="SerialNumber" value="7"/>
                <value name="EmailAddress" value="8"/>
            </enum>
            <function access="public" threadsafety="unspecified" status="commendable" name="QSslCertificate" fullname="QSslCertificate::QSslCertificate" href="qsslcertificate.html#QSslCertificate" location="qsslcertificate.h" virtual="non" meta="constructor" const="false" static="false" overload="false" type="" signature="QSslCertificate(QIODevice * device, QSsl::EncodingFormat format)">
                <parameter left="QIODevice *" right="" name="device" default=""/>
                <parameter left="QSsl::EncodingFormat" right="" name="format" default="QSsl::Pem"/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="QSslCertificate" fullname="QSslCertificate::QSslCertificate" href="qsslcertificate.html#QSslCertificate-2" location="qsslcertificate.h" virtual="non" meta="constructor" const="false" static="false" overload="true" overload-number="2" type="" signature="QSslCertificate(const QByteArray &amp; data, QSsl::EncodingFormat format)">
                <parameter left="const QByteArray &amp;" right="" name="data" default="QByteArray()"/>
                <parameter left="QSsl::EncodingFormat" right="" name="format" default="QSsl::Pem"/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="QSslCertificate" fullname="QSslCertificate::QSslCertificate" href="qsslcertificate.html#QSslCertificate-3" location="qsslcertificate.h" virtual="non" meta="constructor" const="false" static="false" overload="true" overload-number="3" type="" signature="QSslCertificate(const QSslCertificate &amp; other)">
                <parameter left="const QSslCertificate &amp;" right="" name="other" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="compat" name="alternateSubjectNames" fullname="QSslCertificate::alternateSubjectNames" href="qsslcertificate-compat.html#alternateSubjectNames" location="qsslcertificate.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QMultiMap&lt;QSsl::AlternateNameEntryType, QString&gt;" signature="alternateSubjectNames() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="clear" fullname="QSslCertificate::clear" href="qsslcertificate.html#clear" location="qsslcertificate.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="clear()"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="digest" fullname="QSslCertificate::digest" href="qsslcertificate.html#digest" location="qsslcertificate.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QByteArray" signature="digest(QCryptographicHash::Algorithm algorithm) const">
                <parameter left="QCryptographicHash::Algorithm" right="" name="algorithm" default="QCryptographicHash::Md5"/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="effectiveDate" fullname="QSslCertificate::effectiveDate" href="qsslcertificate.html#effectiveDate" location="qsslcertificate.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QDateTime" signature="effectiveDate() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="expiryDate" fullname="QSslCertificate::expiryDate" href="qsslcertificate.html#expiryDate" location="qsslcertificate.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QDateTime" signature="expiryDate() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="extensions" fullname="QSslCertificate::extensions" href="qsslcertificate.html#extensions" location="qsslcertificate.h" since="5.0" virtual="non" meta="plain" const="true" static="false" overload="false" type="QList&lt;QSslCertificateExtension&gt;" signature="extensions() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="fromData" fullname="QSslCertificate::fromData" href="qsslcertificate.html#fromData" location="qsslcertificate.h" virtual="non" meta="plain" const="false" static="true" overload="false" type="QList&lt;QSslCertificate&gt;" signature="fromData(const QByteArray &amp; data, QSsl::EncodingFormat format)">
                <parameter left="const QByteArray &amp;" right="" name="data" default=""/>
                <parameter left="QSsl::EncodingFormat" right="" name="format" default="QSsl::Pem"/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="fromDevice" fullname="QSslCertificate::fromDevice" href="qsslcertificate.html#fromDevice" location="qsslcertificate.h" virtual="non" meta="plain" const="false" static="true" overload="false" type="QList&lt;QSslCertificate&gt;" signature="fromDevice(QIODevice * device, QSsl::EncodingFormat format)">
                <parameter left="QIODevice *" right="" name="device" default=""/>
                <parameter left="QSsl::EncodingFormat" right="" name="format" default="QSsl::Pem"/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="fromPath" fullname="QSslCertificate::fromPath" href="qsslcertificate.html#fromPath" location="qsslcertificate.h" virtual="non" meta="plain" const="false" static="true" overload="false" type="QList&lt;QSslCertificate&gt;" signature="fromPath(const QString &amp; path, QSsl::EncodingFormat format, QRegExp::PatternSyntax syntax)">
                <parameter left="const QString &amp;" right="" name="path" default=""/>
                <parameter left="QSsl::EncodingFormat" right="" name="format" default="QSsl::Pem"/>
                <parameter left="QRegExp::PatternSyntax" right="" name="syntax" default="QRegExp::FixedString"/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="handle" fullname="QSslCertificate::handle" href="qsslcertificate.html#handle" location="qsslcertificate.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="Qt::HANDLE" signature="handle() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="isBlacklisted" fullname="QSslCertificate::isBlacklisted" href="qsslcertificate.html#isBlacklisted" location="qsslcertificate.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="bool" signature="isBlacklisted() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="isNull" fullname="QSslCertificate::isNull" href="qsslcertificate.html#isNull" location="qsslcertificate.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="bool" signature="isNull() const"/>
            <function access="public" threadsafety="unspecified" status="compat" name="isValid" fullname="QSslCertificate::isValid" href="qsslcertificate-compat.html#isValid" location="qsslcertificate.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="bool" signature="isValid() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="issuerInfo" fullname="QSslCertificate::issuerInfo" href="qsslcertificate.html#issuerInfo-2" location="qsslcertificate.h" virtual="non" meta="plain" const="true" static="false" overload="true" overload-number="2" type="QStringList" signature="issuerInfo(const QByteArray &amp; attribute) const">
                <parameter left="const QByteArray &amp;" right="" name="attribute" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="issuerInfoAttributes" fullname="QSslCertificate::issuerInfoAttributes" href="qsslcertificate.html#issuerInfoAttributes" location="qsslcertificate.h" since="5.0" virtual="non" meta="plain" const="true" static="false" overload="false" type="QList&lt;QByteArray&gt;" signature="issuerInfoAttributes() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="operator!=" fullname="QSslCertificate::operator!=" href="qsslcertificate.html#operator!=" location="qsslcertificate.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="bool" signature="operator!=(const QSslCertificate &amp; other) const">
                <parameter left="const QSslCertificate &amp;" right="" name="other" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="operator=" fullname="QSslCertificate::operator=" href="qsslcertificate.html#operator=" location="qsslcertificate.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="QSslCertificate &amp;" signature="operator=(const QSslCertificate &amp; other)">
                <parameter left="const QSslCertificate &amp;" right="" name="other" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="operator==" fullname="QSslCertificate::operator==" href="qsslcertificate.html#operator==" location="qsslcertificate.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="bool" signature="operator==(const QSslCertificate &amp; other) const">
                <parameter left="const QSslCertificate &amp;" right="" name="other" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="publicKey" fullname="QSslCertificate::publicKey" href="qsslcertificate.html#publicKey" location="qsslcertificate.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QSslKey" signature="publicKey() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="serialNumber" fullname="QSslCertificate::serialNumber" href="qsslcertificate.html#serialNumber" location="qsslcertificate.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QByteArray" signature="serialNumber() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="subjectAlternativeNames" fullname="QSslCertificate::subjectAlternativeNames" href="qsslcertificate.html#subjectAlternativeNames" location="qsslcertificate.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QMultiMap&lt;QSsl::AlternativeNameEntryType, QString&gt;" signature="subjectAlternativeNames() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="subjectInfo" fullname="QSslCertificate::subjectInfo" href="qsslcertificate.html#subjectInfo-2" location="qsslcertificate.h" virtual="non" meta="plain" const="true" static="false" overload="true" overload-number="2" type="QStringList" signature="subjectInfo(const QByteArray &amp; attribute) const">
                <parameter left="const QByteArray &amp;" right="" name="attribute" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="subjectInfoAttributes" fullname="QSslCertificate::subjectInfoAttributes" href="qsslcertificate.html#subjectInfoAttributes" location="qsslcertificate.h" since="5.0" virtual="non" meta="plain" const="true" static="false" overload="false" type="QList&lt;QByteArray&gt;" signature="subjectInfoAttributes() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="swap" fullname="QSslCertificate::swap" href="qsslcertificate.html#swap" location="qsslcertificate.h" since="5.0" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="swap(QSslCertificate &amp; other)">
                <parameter left="QSslCertificate &amp;" right="" name="other" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="toDer" fullname="QSslCertificate::toDer" href="qsslcertificate.html#toDer" location="qsslcertificate.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QByteArray" signature="toDer() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="toPem" fullname="QSslCertificate::toPem" href="qsslcertificate.html#toPem" location="qsslcertificate.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QByteArray" signature="toPem() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="toText" fullname="QSslCertificate::toText" href="qsslcertificate.html#toText" location="qsslcertificate.h" since="5.0" virtual="non" meta="plain" const="true" static="false" overload="false" type="QString" signature="toText() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="verify" fullname="QSslCertificate::verify" href="qsslcertificate.html#verify" location="qsslcertificate.h" since="5.0" virtual="non" meta="plain" const="false" static="true" overload="false" type="QList&lt;QSslError&gt;" signature="verify(QList&lt;QSslCertificate&gt; certificateChain, const QString &amp; hostName)">
                <parameter left="QList&lt;QSslCertificate&gt;" right="" name="certificateChain" default=""/>
                <parameter left="const QString &amp;" right="" name="hostName" default="QString()"/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="version" fullname="QSslCertificate::version" href="qsslcertificate.html#version" location="qsslcertificate.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QByteArray" signature="version() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="~QSslCertificate" fullname="QSslCertificate::~QSslCertificate" href="qsslcertificate.html#dtor.QSslCertificate" location="qsslcertificate.h" virtual="non" meta="destructor" const="false" static="false" overload="false" type="" signature="~QSslCertificate()"/>
        </class>
        <class access="public" threadsafety="reentrant" status="commendable" name="QSslCertificateExtension" href="qsslcertificateextension.html" location="qsslcertificateextension.h" since="5.0" bases="" module="QtNetwork" groups="network,ssl,shared">
            <function access="public" threadsafety="unspecified" status="commendable" name="QSslCertificateExtension" fullname="QSslCertificateExtension::QSslCertificateExtension" href="qsslcertificateextension.html#QSslCertificateExtension" location="qsslcertificateextension.h" virtual="non" meta="constructor" const="false" static="false" overload="false" type="" signature="QSslCertificateExtension()"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="QSslCertificateExtension" fullname="QSslCertificateExtension::QSslCertificateExtension" href="qsslcertificateextension.html#QSslCertificateExtension-2" location="qsslcertificateextension.h" virtual="non" meta="constructor" const="false" static="false" overload="true" overload-number="2" type="" signature="QSslCertificateExtension(const QSslCertificateExtension &amp; other)">
                <parameter left="const QSslCertificateExtension &amp;" right="" name="other" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="isCritical" fullname="QSslCertificateExtension::isCritical" href="qsslcertificateextension.html#isCritical" location="qsslcertificateextension.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="bool" signature="isCritical() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="isSupported" fullname="QSslCertificateExtension::isSupported" href="qsslcertificateextension.html#isSupported" location="qsslcertificateextension.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="bool" signature="isSupported() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="name" fullname="QSslCertificateExtension::name" href="qsslcertificateextension.html#name" location="qsslcertificateextension.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QString" signature="name() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="oid" fullname="QSslCertificateExtension::oid" href="qsslcertificateextension.html#oid" location="qsslcertificateextension.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QString" signature="oid() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="operator=" fullname="QSslCertificateExtension::operator=" href="qsslcertificateextension.html#operator=" location="qsslcertificateextension.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="QSslCertificateExtension &amp;" signature="operator=(const QSslCertificateExtension &amp; other)">
                <parameter left="const QSslCertificateExtension &amp;" right="" name="other" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="swap" fullname="QSslCertificateExtension::swap" href="qsslcertificateextension.html#swap" location="qsslcertificateextension.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="swap(QSslCertificateExtension &amp; other)">
                <parameter left="QSslCertificateExtension &amp;" right="" name="other" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="value" fullname="QSslCertificateExtension::value" href="qsslcertificateextension.html#value" location="qsslcertificateextension.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QVariant" signature="value() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="~QSslCertificateExtension" fullname="QSslCertificateExtension::~QSslCertificateExtension" href="qsslcertificateextension.html#dtor.QSslCertificateExtension" location="qsslcertificateextension.h" virtual="non" meta="destructor" const="false" static="false" overload="false" type="" signature="~QSslCertificateExtension()"/>
        </class>
        <class access="public" threadsafety="reentrant" status="commendable" name="QSslCipher" href="qsslcipher.html" location="qsslcipher.h" since="4.3" bases="" module="QtNetwork" groups="network,ssl,shared">
            <function access="public" threadsafety="unspecified" status="commendable" name="QSslCipher" fullname="QSslCipher::QSslCipher" href="qsslcipher.html#QSslCipher" location="qsslcipher.h" virtual="non" meta="constructor" const="false" static="false" overload="false" type="" signature="QSslCipher()"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="QSslCipher" fullname="QSslCipher::QSslCipher" href="qsslcipher.html#QSslCipher-3" location="qsslcipher.h" virtual="non" meta="constructor" const="false" static="false" overload="true" overload-number="3" type="" signature="QSslCipher(const QSslCipher &amp; other)">
                <parameter left="const QSslCipher &amp;" right="" name="other" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="QSslCipher" fullname="QSslCipher::QSslCipher" href="qsslcipher.html#QSslCipher-2" location="qsslcipher.h" virtual="non" meta="constructor" const="false" static="false" overload="true" overload-number="2" type="" signature="QSslCipher(const QString &amp; name, QSsl::SslProtocol protocol)">
                <parameter left="const QString &amp;" right="" name="name" default=""/>
                <parameter left="QSsl::SslProtocol" right="" name="protocol" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="authenticationMethod" fullname="QSslCipher::authenticationMethod" href="qsslcipher.html#authenticationMethod" location="qsslcipher.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QString" signature="authenticationMethod() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="encryptionMethod" fullname="QSslCipher::encryptionMethod" href="qsslcipher.html#encryptionMethod" location="qsslcipher.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QString" signature="encryptionMethod() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="isNull" fullname="QSslCipher::isNull" href="qsslcipher.html#isNull" location="qsslcipher.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="bool" signature="isNull() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="keyExchangeMethod" fullname="QSslCipher::keyExchangeMethod" href="qsslcipher.html#keyExchangeMethod" location="qsslcipher.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QString" signature="keyExchangeMethod() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="name" fullname="QSslCipher::name" href="qsslcipher.html#name" location="qsslcipher.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QString" signature="name() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="operator!=" fullname="QSslCipher::operator!=" href="qsslcipher.html#operator!=" location="qsslcipher.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="bool" signature="operator!=(const QSslCipher &amp; other) const">
                <parameter left="const QSslCipher &amp;" right="" name="other" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="operator=" fullname="QSslCipher::operator=" href="qsslcipher.html#operator=" location="qsslcipher.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="QSslCipher &amp;" signature="operator=(const QSslCipher &amp; other)">
                <parameter left="const QSslCipher &amp;" right="" name="other" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="operator==" fullname="QSslCipher::operator==" href="qsslcipher.html#operator==" location="qsslcipher.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="bool" signature="operator==(const QSslCipher &amp; other) const">
                <parameter left="const QSslCipher &amp;" right="" name="other" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="protocol" fullname="QSslCipher::protocol" href="qsslcipher.html#protocol" location="qsslcipher.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QSsl::SslProtocol" signature="protocol() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="protocolString" fullname="QSslCipher::protocolString" href="qsslcipher.html#protocolString" location="qsslcipher.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QString" signature="protocolString() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="supportedBits" fullname="QSslCipher::supportedBits" href="qsslcipher.html#supportedBits" location="qsslcipher.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="int" signature="supportedBits() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="swap" fullname="QSslCipher::swap" href="qsslcipher.html#swap" location="qsslcipher.h" since="5.0" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="swap(QSslCipher &amp; other)">
                <parameter left="QSslCipher &amp;" right="" name="other" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="usedBits" fullname="QSslCipher::usedBits" href="qsslcipher.html#usedBits" location="qsslcipher.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="int" signature="usedBits() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="~QSslCipher" fullname="QSslCipher::~QSslCipher" href="qsslcipher.html#dtor.QSslCipher" location="qsslcipher.h" virtual="non" meta="destructor" const="false" static="false" overload="false" type="" signature="~QSslCipher()"/>
        </class>
        <class access="public" threadsafety="reentrant" status="commendable" name="QSslConfiguration" href="qsslconfiguration.html" location="qsslconfiguration.h" since="4.4" bases="" module="QtNetwork" groups="network,ssl,shared">
            <function access="public" threadsafety="unspecified" status="commendable" name="QSslConfiguration" fullname="QSslConfiguration::QSslConfiguration" href="qsslconfiguration.html#QSslConfiguration" location="qsslconfiguration.h" virtual="non" meta="constructor" const="false" static="false" overload="false" type="" signature="QSslConfiguration()"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="QSslConfiguration" fullname="QSslConfiguration::QSslConfiguration" href="qsslconfiguration.html#QSslConfiguration-2" location="qsslconfiguration.h" virtual="non" meta="constructor" const="false" static="false" overload="true" overload-number="2" type="" signature="QSslConfiguration(const QSslConfiguration &amp; other)">
                <parameter left="const QSslConfiguration &amp;" right="" name="other" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="caCertificates" fullname="QSslConfiguration::caCertificates" href="qsslconfiguration.html#caCertificates" location="qsslconfiguration.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QList&lt;QSslCertificate&gt;" signature="caCertificates() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="ciphers" fullname="QSslConfiguration::ciphers" href="qsslconfiguration.html#ciphers" location="qsslconfiguration.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QList&lt;QSslCipher&gt;" signature="ciphers() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="defaultConfiguration" fullname="QSslConfiguration::defaultConfiguration" href="qsslconfiguration.html#defaultConfiguration" location="qsslconfiguration.h" virtual="non" meta="plain" const="false" static="true" overload="false" type="QSslConfiguration" signature="defaultConfiguration()"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="isNull" fullname="QSslConfiguration::isNull" href="qsslconfiguration.html#isNull" location="qsslconfiguration.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="bool" signature="isNull() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="localCertificate" fullname="QSslConfiguration::localCertificate" href="qsslconfiguration.html#localCertificate" location="qsslconfiguration.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QSslCertificate" signature="localCertificate() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="operator!=" fullname="QSslConfiguration::operator!=" href="qsslconfiguration.html#operator!=" location="qsslconfiguration.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="bool" signature="operator!=(const QSslConfiguration &amp; other) const">
                <parameter left="const QSslConfiguration &amp;" right="" name="other" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="operator=" fullname="QSslConfiguration::operator=" href="qsslconfiguration.html#operator=" location="qsslconfiguration.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="QSslConfiguration &amp;" signature="operator=(const QSslConfiguration &amp; other)">
                <parameter left="const QSslConfiguration &amp;" right="" name="other" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="operator==" fullname="QSslConfiguration::operator==" href="qsslconfiguration.html#operator==" location="qsslconfiguration.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="bool" signature="operator==(const QSslConfiguration &amp; other) const">
                <parameter left="const QSslConfiguration &amp;" right="" name="other" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="peerCertificate" fullname="QSslConfiguration::peerCertificate" href="qsslconfiguration.html#peerCertificate" location="qsslconfiguration.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QSslCertificate" signature="peerCertificate() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="peerCertificateChain" fullname="QSslConfiguration::peerCertificateChain" href="qsslconfiguration.html#peerCertificateChain" location="qsslconfiguration.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QList&lt;QSslCertificate&gt;" signature="peerCertificateChain() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="peerVerifyDepth" fullname="QSslConfiguration::peerVerifyDepth" href="qsslconfiguration.html#peerVerifyDepth" location="qsslconfiguration.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="int" signature="peerVerifyDepth() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="peerVerifyMode" fullname="QSslConfiguration::peerVerifyMode" href="qsslconfiguration.html#peerVerifyMode" location="qsslconfiguration.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QSslSocket::PeerVerifyMode" signature="peerVerifyMode() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="privateKey" fullname="QSslConfiguration::privateKey" href="qsslconfiguration.html#privateKey" location="qsslconfiguration.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QSslKey" signature="privateKey() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="protocol" fullname="QSslConfiguration::protocol" href="qsslconfiguration.html#protocol" location="qsslconfiguration.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QSsl::SslProtocol" signature="protocol() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="sessionCipher" fullname="QSslConfiguration::sessionCipher" href="qsslconfiguration.html#sessionCipher" location="qsslconfiguration.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QSslCipher" signature="sessionCipher() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="setCaCertificates" fullname="QSslConfiguration::setCaCertificates" href="qsslconfiguration.html#setCaCertificates" location="qsslconfiguration.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setCaCertificates(const QList&lt;QSslCertificate&gt; &amp; certificates)">
                <parameter left="const QList&lt;QSslCertificate&gt; &amp;" right="" name="certificates" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setCiphers" fullname="QSslConfiguration::setCiphers" href="qsslconfiguration.html#setCiphers" location="qsslconfiguration.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setCiphers(const QList&lt;QSslCipher&gt; &amp; ciphers)">
                <parameter left="const QList&lt;QSslCipher&gt; &amp;" right="" name="ciphers" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setDefaultConfiguration" fullname="QSslConfiguration::setDefaultConfiguration" href="qsslconfiguration.html#setDefaultConfiguration" location="qsslconfiguration.h" virtual="non" meta="plain" const="false" static="true" overload="false" type="void" signature="setDefaultConfiguration(const QSslConfiguration &amp; configuration)">
                <parameter left="const QSslConfiguration &amp;" right="" name="configuration" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setLocalCertificate" fullname="QSslConfiguration::setLocalCertificate" href="qsslconfiguration.html#setLocalCertificate" location="qsslconfiguration.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setLocalCertificate(const QSslCertificate &amp; certificate)">
                <parameter left="const QSslCertificate &amp;" right="" name="certificate" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setPeerVerifyDepth" fullname="QSslConfiguration::setPeerVerifyDepth" href="qsslconfiguration.html#setPeerVerifyDepth" location="qsslconfiguration.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setPeerVerifyDepth(int depth)">
                <parameter left="int" right="" name="depth" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setPeerVerifyMode" fullname="QSslConfiguration::setPeerVerifyMode" href="qsslconfiguration.html#setPeerVerifyMode" location="qsslconfiguration.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setPeerVerifyMode(QSslSocket::PeerVerifyMode mode)">
                <parameter left="QSslSocket::PeerVerifyMode" right="" name="mode" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setPrivateKey" fullname="QSslConfiguration::setPrivateKey" href="qsslconfiguration.html#setPrivateKey" location="qsslconfiguration.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setPrivateKey(const QSslKey &amp; key)">
                <parameter left="const QSslKey &amp;" right="" name="key" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setProtocol" fullname="QSslConfiguration::setProtocol" href="qsslconfiguration.html#setProtocol" location="qsslconfiguration.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setProtocol(QSsl::SslProtocol protocol)">
                <parameter left="QSsl::SslProtocol" right="" name="protocol" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setSslOption" fullname="QSslConfiguration::setSslOption" href="qsslconfiguration.html#setSslOption" location="qsslconfiguration.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setSslOption(QSsl::SslOption option, bool on)">
                <parameter left="QSsl::SslOption" right="" name="option" default=""/>
                <parameter left="bool" right="" name="on" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="swap" fullname="QSslConfiguration::swap" href="qsslconfiguration.html#swap" location="qsslconfiguration.h" since="5.0" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="swap(QSslConfiguration &amp; other)">
                <parameter left="QSslConfiguration &amp;" right="" name="other" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="testSslOption" fullname="QSslConfiguration::testSslOption" href="qsslconfiguration.html#testSslOption" location="qsslconfiguration.h" since="4.8" virtual="non" meta="plain" const="true" static="false" overload="false" type="bool" signature="testSslOption(QSsl::SslOption option) const">
                <parameter left="QSsl::SslOption" right="" name="option" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="~QSslConfiguration" fullname="QSslConfiguration::~QSslConfiguration" href="qsslconfiguration.html#dtor.QSslConfiguration" location="qsslconfiguration.h" virtual="non" meta="destructor" const="false" static="false" overload="false" type="" signature="~QSslConfiguration()"/>
        </class>
        <class access="public" threadsafety="reentrant" status="commendable" name="QSslError" href="qsslerror.html" location="qsslerror.h" since="4.3" bases="" module="QtNetwork" groups="network,ssl,shared">
            <enum access="public" threadsafety="unspecified" status="commendable" name="SslError" fullname="QSslError::SslError" href="qsslerror.html#SslError-enum" location="qsslerror.h">
                <value name="NoError" value="0"/>
                <value name="UnableToGetIssuerCertificate" value="1"/>
                <value name="UnableToDecryptCertificateSignature" value="2"/>
                <value name="UnableToDecodeIssuerPublicKey" value="3"/>
                <value name="CertificateSignatureFailed" value="4"/>
                <value name="CertificateNotYetValid" value="5"/>
                <value name="CertificateExpired" value="6"/>
                <value name="InvalidNotBeforeField" value="7"/>
                <value name="InvalidNotAfterField" value="8"/>
                <value name="SelfSignedCertificate" value="9"/>
                <value name="SelfSignedCertificateInChain" value="10"/>
                <value name="UnableToGetLocalIssuerCertificate" value="11"/>
                <value name="UnableToVerifyFirstCertificate" value="12"/>
                <value name="CertificateRevoked" value="13"/>
                <value name="InvalidCaCertificate" value="14"/>
                <value name="PathLengthExceeded" value="15"/>
                <value name="InvalidPurpose" value="16"/>
                <value name="CertificateUntrusted" value="17"/>
                <value name="CertificateRejected" value="18"/>
                <value name="SubjectIssuerMismatch" value="19"/>
                <value name="AuthorityIssuerSerialNumberMismatch" value="20"/>
                <value name="NoPeerCertificate" value="21"/>
                <value name="HostNameMismatch" value="22"/>
                <value name="NoSslSupport" value="23"/>
                <value name="CertificateBlacklisted" value="24"/>
                <value name="UnspecifiedError" value="-1"/>
            </enum>
            <function access="public" threadsafety="unspecified" status="commendable" name="QSslError" fullname="QSslError::QSslError" href="qsslerror.html#QSslError" location="qsslerror.h" virtual="non" meta="constructor" const="false" static="false" overload="false" type="" signature="QSslError()"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="QSslError" fullname="QSslError::QSslError" href="qsslerror.html#QSslError-2" location="qsslerror.h" virtual="non" meta="constructor" const="false" static="false" overload="true" overload-number="2" type="" signature="QSslError(SslError error)">
                <parameter left="SslError" right="" name="error" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="QSslError" fullname="QSslError::QSslError" href="qsslerror.html#QSslError-3" location="qsslerror.h" virtual="non" meta="constructor" const="false" static="false" overload="true" overload-number="3" type="" signature="QSslError(SslError error, const QSslCertificate &amp; certificate)">
                <parameter left="SslError" right="" name="error" default=""/>
                <parameter left="const QSslCertificate &amp;" right="" name="certificate" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="QSslError" fullname="QSslError::QSslError" href="qsslerror.html#QSslError-4" location="qsslerror.h" virtual="non" meta="constructor" const="false" static="false" overload="true" overload-number="4" type="" signature="QSslError(const QSslError &amp; other)">
                <parameter left="const QSslError &amp;" right="" name="other" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="certificate" fullname="QSslError::certificate" href="qsslerror.html#certificate" location="qsslerror.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QSslCertificate" signature="certificate() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="error" fullname="QSslError::error" href="qsslerror.html#error" location="qsslerror.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="SslError" signature="error() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="errorString" fullname="QSslError::errorString" href="qsslerror.html#errorString" location="qsslerror.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QString" signature="errorString() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="operator!=" fullname="QSslError::operator!=" href="qsslerror.html#operator!=" location="qsslerror.h" since="4.4" virtual="non" meta="plain" const="true" static="false" overload="false" type="bool" signature="operator!=(const QSslError &amp; other) const">
                <parameter left="const QSslError &amp;" right="" name="other" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="operator=" fullname="QSslError::operator=" href="qsslerror.html#operator=" location="qsslerror.h" since="4.4" virtual="non" meta="plain" const="false" static="false" overload="false" type="QSslError &amp;" signature="operator=(const QSslError &amp; other)">
                <parameter left="const QSslError &amp;" right="" name="other" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="operator==" fullname="QSslError::operator==" href="qsslerror.html#operator==" location="qsslerror.h" since="4.4" virtual="non" meta="plain" const="true" static="false" overload="false" type="bool" signature="operator==(const QSslError &amp; other) const">
                <parameter left="const QSslError &amp;" right="" name="other" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="swap" fullname="QSslError::swap" href="qsslerror.html#swap" location="qsslerror.h" since="5.0" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="swap(QSslError &amp; other)">
                <parameter left="QSslError &amp;" right="" name="other" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="~QSslError" fullname="QSslError::~QSslError" href="qsslerror.html#dtor.QSslError" location="qsslerror.h" virtual="non" meta="destructor" const="false" static="false" overload="false" type="" signature="~QSslError()"/>
        </class>
        <class access="public" threadsafety="reentrant" status="commendable" name="QSslKey" href="qsslkey.html" location="qsslkey.h" since="4.3" bases="" module="QtNetwork" groups="network,ssl,shared">
            <function access="public" threadsafety="unspecified" status="commendable" name="QSslKey" fullname="QSslKey::QSslKey" href="qsslkey.html#QSslKey" location="qsslkey.h" virtual="non" meta="constructor" const="false" static="false" overload="false" type="" signature="QSslKey()"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="QSslKey" fullname="QSslKey::QSslKey" href="qsslkey.html#QSslKey-3" location="qsslkey.h" virtual="non" meta="constructor" const="false" static="false" overload="true" overload-number="3" type="" signature="QSslKey(QIODevice * device, QSsl::KeyAlgorithm algorithm, QSsl::EncodingFormat encoding, QSsl::KeyType type, const QByteArray &amp; passPhrase)">
                <parameter left="QIODevice *" right="" name="device" default=""/>
                <parameter left="QSsl::KeyAlgorithm" right="" name="algorithm" default=""/>
                <parameter left="QSsl::EncodingFormat" right="" name="encoding" default="QSsl::Pem"/>
                <parameter left="QSsl::KeyType" right="" name="type" default="QSsl::PrivateKey"/>
                <parameter left="const QByteArray &amp;" right="" name="passPhrase" default="QByteArray()"/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="QSslKey" fullname="QSslKey::QSslKey" href="qsslkey.html#QSslKey-4" location="qsslkey.h" since="5.0" virtual="non" meta="constructor" const="false" static="false" overload="true" overload-number="4" type="" signature="QSslKey(Qt::HANDLE handle, QSsl::KeyType type)">
                <parameter left="Qt::HANDLE" right="" name="handle" default=""/>
                <parameter left="QSsl::KeyType" right="" name="type" default="QSsl::PrivateKey"/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="QSslKey" fullname="QSslKey::QSslKey" href="qsslkey.html#QSslKey-2" location="qsslkey.h" virtual="non" meta="constructor" const="false" static="false" overload="true" overload-number="2" type="" signature="QSslKey(const QByteArray &amp; encoded, QSsl::KeyAlgorithm algorithm, QSsl::EncodingFormat encoding, QSsl::KeyType type, const QByteArray &amp; passPhrase)">
                <parameter left="const QByteArray &amp;" right="" name="encoded" default=""/>
                <parameter left="QSsl::KeyAlgorithm" right="" name="algorithm" default=""/>
                <parameter left="QSsl::EncodingFormat" right="" name="encoding" default="QSsl::Pem"/>
                <parameter left="QSsl::KeyType" right="" name="type" default="QSsl::PrivateKey"/>
                <parameter left="const QByteArray &amp;" right="" name="passPhrase" default="QByteArray()"/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="QSslKey" fullname="QSslKey::QSslKey" href="qsslkey.html#QSslKey-5" location="qsslkey.h" virtual="non" meta="constructor" const="false" static="false" overload="true" overload-number="5" type="" signature="QSslKey(const QSslKey &amp; other)">
                <parameter left="const QSslKey &amp;" right="" name="other" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="algorithm" fullname="QSslKey::algorithm" href="qsslkey.html#algorithm" location="qsslkey.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QSsl::KeyAlgorithm" signature="algorithm() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="clear" fullname="QSslKey::clear" href="qsslkey.html#clear" location="qsslkey.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="clear()"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="handle" fullname="QSslKey::handle" href="qsslkey.html#handle" location="qsslkey.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="Qt::HANDLE" signature="handle() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="isNull" fullname="QSslKey::isNull" href="qsslkey.html#isNull" location="qsslkey.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="bool" signature="isNull() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="length" fullname="QSslKey::length" href="qsslkey.html#length" location="qsslkey.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="int" signature="length() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="operator!=" fullname="QSslKey::operator!=" href="qsslkey.html#operator!=" location="qsslkey.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="bool" signature="operator!=(const QSslKey &amp; other) const">
                <parameter left="const QSslKey &amp;" right="" name="other" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="operator=" fullname="QSslKey::operator=" href="qsslkey.html#operator=" location="qsslkey.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="QSslKey &amp;" signature="operator=(const QSslKey &amp; other)">
                <parameter left="const QSslKey &amp;" right="" name="other" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="operator==" fullname="QSslKey::operator==" href="qsslkey.html#operator==" location="qsslkey.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="bool" signature="operator==(const QSslKey &amp; other) const">
                <parameter left="const QSslKey &amp;" right="" name="other" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="swap" fullname="QSslKey::swap" href="qsslkey.html#swap" location="qsslkey.h" since="5.0" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="swap(QSslKey &amp; other)">
                <parameter left="QSslKey &amp;" right="" name="other" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="toDer" fullname="QSslKey::toDer" href="qsslkey.html#toDer" location="qsslkey.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QByteArray" signature="toDer(const QByteArray &amp; passPhrase) const">
                <parameter left="const QByteArray &amp;" right="" name="passPhrase" default="QByteArray()"/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="toPem" fullname="QSslKey::toPem" href="qsslkey.html#toPem" location="qsslkey.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QByteArray" signature="toPem(const QByteArray &amp; passPhrase) const">
                <parameter left="const QByteArray &amp;" right="" name="passPhrase" default="QByteArray()"/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="type" fullname="QSslKey::type" href="qsslkey.html#type" location="qsslkey.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QSsl::KeyType" signature="type() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="~QSslKey" fullname="QSslKey::~QSslKey" href="qsslkey.html#dtor.QSslKey" location="qsslkey.h" virtual="non" meta="destructor" const="false" static="false" overload="false" type="" signature="~QSslKey()"/>
        </class>
        <class access="public" threadsafety="reentrant" status="commendable" name="QSslSocket" href="qsslsocket.html" location="qsslsocket.h" since="4.3" bases="QTcpSocket" module="QtNetwork" groups="network,ssl">
            <enum access="public" threadsafety="unspecified" status="commendable" name="PeerVerifyMode" fullname="QSslSocket::PeerVerifyMode" href="qsslsocket.html#PeerVerifyMode-enum" location="qsslsocket.h" since="4.4">
                <value name="VerifyNone" value="0"/>
                <value name="QueryPeer" value="1"/>
                <value name="VerifyPeer" value="2"/>
                <value name="AutoVerifyPeer" value="3"/>
            </enum>
            <enum access="public" threadsafety="unspecified" status="commendable" name="SslMode" fullname="QSslSocket::SslMode" href="qsslsocket.html#SslMode-enum" location="qsslsocket.h">
                <value name="UnencryptedMode" value="0"/>
                <value name="SslClientMode" value="1"/>
                <value name="SslServerMode" value="2"/>
            </enum>
            <function access="public" threadsafety="unspecified" status="commendable" name="QSslSocket" fullname="QSslSocket::QSslSocket" href="qsslsocket.html#QSslSocket" location="qsslsocket.h" virtual="non" meta="constructor" const="false" static="false" overload="false" type="" signature="QSslSocket(QObject * parent)">
                <parameter left="QObject *" right="" name="parent" default="0"/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="abort" fullname="QSslSocket::abort" href="qsslsocket.html#abort" location="qsslsocket.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="abort()"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="addCaCertificate" fullname="QSslSocket::addCaCertificate" href="qsslsocket.html#addCaCertificate" location="qsslsocket.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="addCaCertificate(const QSslCertificate &amp; certificate)">
                <parameter left="const QSslCertificate &amp;" right="" name="certificate" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="addCaCertificates" fullname="QSslSocket::addCaCertificates" href="qsslsocket.html#addCaCertificates" location="qsslsocket.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="bool" signature="addCaCertificates(const QString &amp; path, QSsl::EncodingFormat format, QRegExp::PatternSyntax syntax)">
                <parameter left="const QString &amp;" right="" name="path" default=""/>
                <parameter left="QSsl::EncodingFormat" right="" name="format" default="QSsl::Pem"/>
                <parameter left="QRegExp::PatternSyntax" right="" name="syntax" default="QRegExp::FixedString"/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="addCaCertificates" fullname="QSslSocket::addCaCertificates" href="qsslsocket.html#addCaCertificates-2" location="qsslsocket.h" virtual="non" meta="plain" const="false" static="false" overload="true" overload-number="2" type="void" signature="addCaCertificates(const QList&lt;QSslCertificate&gt; &amp; certificates)">
                <parameter left="const QList&lt;QSslCertificate&gt; &amp;" right="" name="certificates" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="addDefaultCaCertificate" fullname="QSslSocket::addDefaultCaCertificate" href="qsslsocket.html#addDefaultCaCertificate" location="qsslsocket.h" virtual="non" meta="plain" const="false" static="true" overload="false" type="void" signature="addDefaultCaCertificate(const QSslCertificate &amp; certificate)">
                <parameter left="const QSslCertificate &amp;" right="" name="certificate" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="addDefaultCaCertificates" fullname="QSslSocket::addDefaultCaCertificates" href="qsslsocket.html#addDefaultCaCertificates" location="qsslsocket.h" virtual="non" meta="plain" const="false" static="true" overload="false" type="bool" signature="addDefaultCaCertificates(const QString &amp; path, QSsl::EncodingFormat encoding, QRegExp::PatternSyntax syntax)">
                <parameter left="const QString &amp;" right="" name="path" default=""/>
                <parameter left="QSsl::EncodingFormat" right="" name="encoding" default="QSsl::Pem"/>
                <parameter left="QRegExp::PatternSyntax" right="" name="syntax" default="QRegExp::FixedString"/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="addDefaultCaCertificates" fullname="QSslSocket::addDefaultCaCertificates" href="qsslsocket.html#addDefaultCaCertificates-2" location="qsslsocket.h" virtual="non" meta="plain" const="false" static="true" overload="true" overload-number="2" type="void" signature="addDefaultCaCertificates(const QList&lt;QSslCertificate&gt; &amp; certificates)">
                <parameter left="const QList&lt;QSslCertificate&gt; &amp;" right="" name="certificates" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="atEnd" fullname="QSslSocket::atEnd" href="qsslsocket.html#atEnd" location="qsslsocket.h" virtual="impure" meta="plain" const="true" static="false" overload="false" type="bool" signature="atEnd() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="bytesAvailable" fullname="QSslSocket::bytesAvailable" href="qsslsocket.html#bytesAvailable" location="qsslsocket.h" virtual="impure" meta="plain" const="true" static="false" overload="false" type="qint64" signature="bytesAvailable() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="bytesToWrite" fullname="QSslSocket::bytesToWrite" href="qsslsocket.html#bytesToWrite" location="qsslsocket.h" virtual="impure" meta="plain" const="true" static="false" overload="false" type="qint64" signature="bytesToWrite() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="caCertificates" fullname="QSslSocket::caCertificates" href="qsslsocket.html#caCertificates" location="qsslsocket.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QList&lt;QSslCertificate&gt;" signature="caCertificates() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="canReadLine" fullname="QSslSocket::canReadLine" href="qsslsocket.html#canReadLine" location="qsslsocket.h" virtual="impure" meta="plain" const="true" static="false" overload="false" type="bool" signature="canReadLine() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="ciphers" fullname="QSslSocket::ciphers" href="qsslsocket.html#ciphers" location="qsslsocket.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QList&lt;QSslCipher&gt;" signature="ciphers() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="close" fullname="QSslSocket::close" href="qsslsocket.html#close" location="qsslsocket.h" virtual="impure" meta="plain" const="false" static="false" overload="false" type="void" signature="close()"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="connectToHostEncrypted" fullname="QSslSocket::connectToHostEncrypted" href="qsslsocket.html#connectToHostEncrypted" location="qsslsocket.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="connectToHostEncrypted(const QString &amp; hostName, quint16 port, OpenMode mode, NetworkLayerProtocol protocol)">
                <parameter left="const QString &amp;" right="" name="hostName" default=""/>
                <parameter left="quint16" right="" name="port" default=""/>
                <parameter left="OpenMode" right="" name="mode" default="ReadWrite"/>
                <parameter left="NetworkLayerProtocol" right="" name="protocol" default="AnyIPProtocol"/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="connectToHostEncrypted" fullname="QSslSocket::connectToHostEncrypted" href="qsslsocket.html#connectToHostEncrypted-2" location="qsslsocket.h" since="4.6" virtual="non" meta="plain" const="false" static="false" overload="true" overload-number="2" type="void" signature="connectToHostEncrypted(const QString &amp; hostName, quint16 port, const QString &amp; sslPeerName, OpenMode mode, NetworkLayerProtocol protocol)">
                <parameter left="const QString &amp;" right="" name="hostName" default=""/>
                <parameter left="quint16" right="" name="port" default=""/>
                <parameter left="const QString &amp;" right="" name="sslPeerName" default=""/>
                <parameter left="OpenMode" right="" name="mode" default="ReadWrite"/>
                <parameter left="NetworkLayerProtocol" right="" name="protocol" default="AnyIPProtocol"/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="defaultCaCertificates" fullname="QSslSocket::defaultCaCertificates" href="qsslsocket.html#defaultCaCertificates" location="qsslsocket.h" virtual="non" meta="plain" const="false" static="true" overload="false" type="QList&lt;QSslCertificate&gt;" signature="defaultCaCertificates()"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="defaultCiphers" fullname="QSslSocket::defaultCiphers" href="qsslsocket.html#defaultCiphers" location="qsslsocket.h" virtual="non" meta="plain" const="false" static="true" overload="false" type="QList&lt;QSslCipher&gt;" signature="defaultCiphers()"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="encrypted" fullname="QSslSocket::encrypted" href="qsslsocket.html#encrypted" location="qsslsocket.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="encrypted()"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="encryptedBytesAvailable" fullname="QSslSocket::encryptedBytesAvailable" href="qsslsocket.html#encryptedBytesAvailable" location="qsslsocket.h" since="4.4" virtual="non" meta="plain" const="true" static="false" overload="false" type="qint64" signature="encryptedBytesAvailable() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="encryptedBytesToWrite" fullname="QSslSocket::encryptedBytesToWrite" href="qsslsocket.html#encryptedBytesToWrite" location="qsslsocket.h" since="4.4" virtual="non" meta="plain" const="true" static="false" overload="false" type="qint64" signature="encryptedBytesToWrite() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="encryptedBytesWritten" fullname="QSslSocket::encryptedBytesWritten" href="qsslsocket.html#encryptedBytesWritten" location="qsslsocket.h" since="4.4" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="encryptedBytesWritten(qint64 written)">
                <parameter left="qint64" right="" name="written" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="flush" fullname="QSslSocket::flush" href="qsslsocket.html#flush" location="qsslsocket.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="bool" signature="flush()"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="ignoreSslErrors" fullname="QSslSocket::ignoreSslErrors" href="qsslsocket.html#ignoreSslErrors" location="qsslsocket.h" virtual="non" meta="slot" const="false" static="false" overload="false" type="void" signature="ignoreSslErrors()"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="ignoreSslErrors" fullname="QSslSocket::ignoreSslErrors" href="qsslsocket.html#ignoreSslErrors-2" location="qsslsocket.h" since="4.6" virtual="non" meta="plain" const="false" static="false" overload="true" overload-number="2" type="void" signature="ignoreSslErrors(const QList&lt;QSslError&gt; &amp; errors)">
                <parameter left="const QList&lt;QSslError&gt; &amp;" right="" name="errors" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="isEncrypted" fullname="QSslSocket::isEncrypted" href="qsslsocket.html#isEncrypted" location="qsslsocket.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="bool" signature="isEncrypted() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="localCertificate" fullname="QSslSocket::localCertificate" href="qsslsocket.html#localCertificate" location="qsslsocket.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QSslCertificate" signature="localCertificate() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="mode" fullname="QSslSocket::mode" href="qsslsocket.html#mode" location="qsslsocket.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="SslMode" signature="mode() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="modeChanged" fullname="QSslSocket::modeChanged" href="qsslsocket.html#modeChanged" location="qsslsocket.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="modeChanged(QSslSocket::SslMode mode)">
                <parameter left="QSslSocket::SslMode" right="" name="mode" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="peerCertificate" fullname="QSslSocket::peerCertificate" href="qsslsocket.html#peerCertificate" location="qsslsocket.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QSslCertificate" signature="peerCertificate() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="peerCertificateChain" fullname="QSslSocket::peerCertificateChain" href="qsslsocket.html#peerCertificateChain" location="qsslsocket.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QList&lt;QSslCertificate&gt;" signature="peerCertificateChain() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="peerVerifyDepth" fullname="QSslSocket::peerVerifyDepth" href="qsslsocket.html#peerVerifyDepth" location="qsslsocket.h" since="4.4" virtual="non" meta="plain" const="true" static="false" overload="false" type="int" signature="peerVerifyDepth() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="peerVerifyError" fullname="QSslSocket::peerVerifyError" href="qsslsocket.html#peerVerifyError" location="qsslsocket.h" since="4.4" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="peerVerifyError(const QSslError &amp; error)">
                <parameter left="const QSslError &amp;" right="" name="error" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="peerVerifyMode" fullname="QSslSocket::peerVerifyMode" href="qsslsocket.html#peerVerifyMode" location="qsslsocket.h" since="4.4" virtual="non" meta="plain" const="true" static="false" overload="false" type="QSslSocket::PeerVerifyMode" signature="peerVerifyMode() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="peerVerifyName" fullname="QSslSocket::peerVerifyName" href="qsslsocket.html#peerVerifyName" location="qsslsocket.h" since="4.8" virtual="non" meta="plain" const="true" static="false" overload="false" type="QString" signature="peerVerifyName() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="privateKey" fullname="QSslSocket::privateKey" href="qsslsocket.html#privateKey" location="qsslsocket.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QSslKey" signature="privateKey() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="protocol" fullname="QSslSocket::protocol" href="qsslsocket.html#protocol" location="qsslsocket.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QSsl::SslProtocol" signature="protocol() const"/>
            <function access="protected" threadsafety="unspecified" status="commendable" name="readData" fullname="QSslSocket::readData" href="qsslsocket.html#readData" location="qsslsocket.h" virtual="impure" meta="plain" const="false" static="false" overload="false" type="qint64" signature="readData(char * data, qint64 maxlen)">
                <parameter left="char *" right="" name="data" default=""/>
                <parameter left="qint64" right="" name="maxlen" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="resume" fullname="QSslSocket::resume" href="qsslsocket.html#resume" location="qsslsocket.h" since="5.0" virtual="impure" meta="plain" const="false" static="false" overload="false" type="void" signature="resume()"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="sessionCipher" fullname="QSslSocket::sessionCipher" href="qsslsocket.html#sessionCipher" location="qsslsocket.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QSslCipher" signature="sessionCipher() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="setCaCertificates" fullname="QSslSocket::setCaCertificates" href="qsslsocket.html#setCaCertificates" location="qsslsocket.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setCaCertificates(const QList&lt;QSslCertificate&gt; &amp; certificates)">
                <parameter left="const QList&lt;QSslCertificate&gt; &amp;" right="" name="certificates" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setCiphers" fullname="QSslSocket::setCiphers" href="qsslsocket.html#setCiphers" location="qsslsocket.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setCiphers(const QList&lt;QSslCipher&gt; &amp; ciphers)">
                <parameter left="const QList&lt;QSslCipher&gt; &amp;" right="" name="ciphers" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setCiphers" fullname="QSslSocket::setCiphers" href="qsslsocket.html#setCiphers-2" location="qsslsocket.h" virtual="non" meta="plain" const="false" static="false" overload="true" overload-number="2" type="void" signature="setCiphers(const QString &amp; ciphers)">
                <parameter left="const QString &amp;" right="" name="ciphers" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setDefaultCaCertificates" fullname="QSslSocket::setDefaultCaCertificates" href="qsslsocket.html#setDefaultCaCertificates" location="qsslsocket.h" virtual="non" meta="plain" const="false" static="true" overload="false" type="void" signature="setDefaultCaCertificates(const QList&lt;QSslCertificate&gt; &amp; certificates)">
                <parameter left="const QList&lt;QSslCertificate&gt; &amp;" right="" name="certificates" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setDefaultCiphers" fullname="QSslSocket::setDefaultCiphers" href="qsslsocket.html#setDefaultCiphers" location="qsslsocket.h" virtual="non" meta="plain" const="false" static="true" overload="false" type="void" signature="setDefaultCiphers(const QList&lt;QSslCipher&gt; &amp; ciphers)">
                <parameter left="const QList&lt;QSslCipher&gt; &amp;" right="" name="ciphers" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setLocalCertificate" fullname="QSslSocket::setLocalCertificate" href="qsslsocket.html#setLocalCertificate" location="qsslsocket.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setLocalCertificate(const QSslCertificate &amp; certificate)">
                <parameter left="const QSslCertificate &amp;" right="" name="certificate" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setLocalCertificate" fullname="QSslSocket::setLocalCertificate" href="qsslsocket.html#setLocalCertificate-2" location="qsslsocket.h" virtual="non" meta="plain" const="false" static="false" overload="true" overload-number="2" type="void" signature="setLocalCertificate(const QString &amp; path, QSsl::EncodingFormat format)">
                <parameter left="const QString &amp;" right="" name="path" default=""/>
                <parameter left="QSsl::EncodingFormat" right="" name="format" default="QSsl::Pem"/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setPeerVerifyDepth" fullname="QSslSocket::setPeerVerifyDepth" href="qsslsocket.html#setPeerVerifyDepth" location="qsslsocket.h" since="4.4" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setPeerVerifyDepth(int depth)">
                <parameter left="int" right="" name="depth" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setPeerVerifyMode" fullname="QSslSocket::setPeerVerifyMode" href="qsslsocket.html#setPeerVerifyMode" location="qsslsocket.h" since="4.4" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setPeerVerifyMode(QSslSocket::PeerVerifyMode mode)">
                <parameter left="QSslSocket::PeerVerifyMode" right="" name="mode" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setPeerVerifyName" fullname="QSslSocket::setPeerVerifyName" href="qsslsocket.html#setPeerVerifyName" location="qsslsocket.h" since="4.8" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setPeerVerifyName(const QString &amp; hostName)">
                <parameter left="const QString &amp;" right="" name="hostName" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setPrivateKey" fullname="QSslSocket::setPrivateKey" href="qsslsocket.html#setPrivateKey" location="qsslsocket.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setPrivateKey(const QSslKey &amp; key)">
                <parameter left="const QSslKey &amp;" right="" name="key" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setPrivateKey" fullname="QSslSocket::setPrivateKey" href="qsslsocket.html#setPrivateKey-2" location="qsslsocket.h" virtual="non" meta="plain" const="false" static="false" overload="true" overload-number="2" type="void" signature="setPrivateKey(const QString &amp; fileName, QSsl::KeyAlgorithm algorithm, QSsl::EncodingFormat format, const QByteArray &amp; passPhrase)">
                <parameter left="const QString &amp;" right="" name="fileName" default=""/>
                <parameter left="QSsl::KeyAlgorithm" right="" name="algorithm" default="QSsl::Rsa"/>
                <parameter left="QSsl::EncodingFormat" right="" name="format" default="QSsl::Pem"/>
                <parameter left="const QByteArray &amp;" right="" name="passPhrase" default="QByteArray()"/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setProtocol" fullname="QSslSocket::setProtocol" href="qsslsocket.html#setProtocol" location="qsslsocket.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setProtocol(QSsl::SslProtocol protocol)">
                <parameter left="QSsl::SslProtocol" right="" name="protocol" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setReadBufferSize" fullname="QSslSocket::setReadBufferSize" href="qsslsocket.html#setReadBufferSize" location="qsslsocket.h" since="4.4" virtual="impure" meta="plain" const="false" static="false" overload="false" type="void" signature="setReadBufferSize(qint64 size)">
                <parameter left="qint64" right="" name="size" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setSocketDescriptor" fullname="QSslSocket::setSocketDescriptor" href="qsslsocket.html#setSocketDescriptor" location="qsslsocket.h" virtual="impure" meta="plain" const="false" static="false" overload="false" type="bool" signature="setSocketDescriptor(qintptr socketDescriptor, SocketState state, OpenMode openMode)">
                <parameter left="qintptr" right="" name="socketDescriptor" default=""/>
                <parameter left="SocketState" right="" name="state" default="ConnectedState"/>
                <parameter left="OpenMode" right="" name="openMode" default="ReadWrite"/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setSocketOption" fullname="QSslSocket::setSocketOption" href="qsslsocket.html#setSocketOption" location="qsslsocket.h" since="4.6" virtual="impure" meta="plain" const="false" static="false" overload="false" type="void" signature="setSocketOption(QAbstractSocket::SocketOption option, const QVariant &amp; value)">
                <parameter left="QAbstractSocket::SocketOption" right="" name="option" default=""/>
                <parameter left="const QVariant &amp;" right="" name="value" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setSslConfiguration" fullname="QSslSocket::setSslConfiguration" href="qsslsocket.html#setSslConfiguration" location="qsslsocket.h" since="4.4" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setSslConfiguration(const QSslConfiguration &amp; configuration)">
                <parameter left="const QSslConfiguration &amp;" right="" name="configuration" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="socketOption" fullname="QSslSocket::socketOption" href="qsslsocket.html#socketOption" location="qsslsocket.h" since="4.6" virtual="impure" meta="plain" const="false" static="false" overload="false" type="QVariant" signature="socketOption(QAbstractSocket::SocketOption option)">
                <parameter left="QAbstractSocket::SocketOption" right="" name="option" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="sslConfiguration" fullname="QSslSocket::sslConfiguration" href="qsslsocket.html#sslConfiguration" location="qsslsocket.h" since="4.4" virtual="non" meta="plain" const="true" static="false" overload="false" type="QSslConfiguration" signature="sslConfiguration() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="sslErrors" fullname="QSslSocket::sslErrors" href="qsslsocket.html#sslErrors-2" location="qsslsocket.h" virtual="non" meta="signal" const="false" static="false" overload="true" overload-number="2" type="void" signature="sslErrors(const QList&lt;QSslError&gt; &amp; errors)">
                <parameter left="const QList&lt;QSslError&gt; &amp;" right="" name="errors" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="sslErrors" fullname="QSslSocket::sslErrors" href="qsslsocket.html#sslErrors" location="qsslsocket.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QList&lt;QSslError&gt;" signature="sslErrors() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="sslLibraryVersionNumber" fullname="QSslSocket::sslLibraryVersionNumber" href="qsslsocket.html#sslLibraryVersionNumber" location="qsslsocket.h" since="5.0" virtual="non" meta="plain" const="false" static="true" overload="false" type="long" signature="sslLibraryVersionNumber()"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="sslLibraryVersionString" fullname="QSslSocket::sslLibraryVersionString" href="qsslsocket.html#sslLibraryVersionString" location="qsslsocket.h" since="5.0" virtual="non" meta="plain" const="false" static="true" overload="false" type="QString" signature="sslLibraryVersionString()"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="startClientEncryption" fullname="QSslSocket::startClientEncryption" href="qsslsocket.html#startClientEncryption" location="qsslsocket.h" virtual="non" meta="slot" const="false" static="false" overload="false" type="void" signature="startClientEncryption()"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="startServerEncryption" fullname="QSslSocket::startServerEncryption" href="qsslsocket.html#startServerEncryption" location="qsslsocket.h" virtual="non" meta="slot" const="false" static="false" overload="false" type="void" signature="startServerEncryption()"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="supportedCiphers" fullname="QSslSocket::supportedCiphers" href="qsslsocket.html#supportedCiphers" location="qsslsocket.h" virtual="non" meta="plain" const="false" static="true" overload="false" type="QList&lt;QSslCipher&gt;" signature="supportedCiphers()"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="supportsSsl" fullname="QSslSocket::supportsSsl" href="qsslsocket.html#supportsSsl" location="qsslsocket.h" virtual="non" meta="plain" const="false" static="true" overload="false" type="bool" signature="supportsSsl()"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="systemCaCertificates" fullname="QSslSocket::systemCaCertificates" href="qsslsocket.html#systemCaCertificates" location="qsslsocket.h" virtual="non" meta="plain" const="false" static="true" overload="false" type="QList&lt;QSslCertificate&gt;" signature="systemCaCertificates()"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="waitForBytesWritten" fullname="QSslSocket::waitForBytesWritten" href="qsslsocket.html#waitForBytesWritten" location="qsslsocket.h" virtual="impure" meta="plain" const="false" static="false" overload="false" type="bool" signature="waitForBytesWritten(int msecs)">
                <parameter left="int" right="" name="msecs" default="30000"/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="waitForConnected" fullname="QSslSocket::waitForConnected" href="qsslsocket.html#waitForConnected" location="qsslsocket.h" virtual="impure" meta="plain" const="false" static="false" overload="false" type="bool" signature="waitForConnected(int msecs)">
                <parameter left="int" right="" name="msecs" default="30000"/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="waitForDisconnected" fullname="QSslSocket::waitForDisconnected" href="qsslsocket.html#waitForDisconnected" location="qsslsocket.h" virtual="impure" meta="plain" const="false" static="false" overload="false" type="bool" signature="waitForDisconnected(int msecs)">
                <parameter left="int" right="" name="msecs" default="30000"/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="waitForEncrypted" fullname="QSslSocket::waitForEncrypted" href="qsslsocket.html#waitForEncrypted" location="qsslsocket.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="bool" signature="waitForEncrypted(int msecs)">
                <parameter left="int" right="" name="msecs" default="30000"/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="waitForReadyRead" fullname="QSslSocket::waitForReadyRead" href="qsslsocket.html#waitForReadyRead" location="qsslsocket.h" virtual="impure" meta="plain" const="false" static="false" overload="false" type="bool" signature="waitForReadyRead(int msecs)">
                <parameter left="int" right="" name="msecs" default="30000"/>
            </function>
            <function access="protected" threadsafety="unspecified" status="commendable" name="writeData" fullname="QSslSocket::writeData" href="qsslsocket.html#writeData" location="qsslsocket.h" virtual="impure" meta="plain" const="false" static="false" overload="false" type="qint64" signature="writeData(const char * data, qint64 len)">
                <parameter left="const char *" right="" name="data" default=""/>
                <parameter left="qint64" right="" name="len" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="~QSslSocket" fullname="QSslSocket::~QSslSocket" href="qsslsocket.html#dtor.QSslSocket" location="qsslsocket.h" virtual="non" meta="destructor" const="false" static="false" overload="false" type="" signature="~QSslSocket()"/>
        </class>
        <page access="public" status="commendable" name="bearer-management.html" href="bearer-management.html" subtype="page" title="Bearer Management" fulltitle="Bearer Management" subtitle="" location="bearermanagement.qdoc" module="QtNetwork">
            <contents name="overview" title="Overview" level="1"/>
            <contents name="the-api-in-detail" title="The API in Detail" level="2"/>
            <contents name="service-networks" title="Service networks" level="3"/>
            <contents name="managing-network-sessions" title="Managing network sessions" level="3"/>
            <contents name="roaming" title="Roaming" level="3"/>
            <contents name="platform-capabilities" title="Platform capabilities" level="3"/>
        </page>
        <page access="public" status="commendable" name="qtnetwork-programming.html" href="qtnetwork-programming.html" subtype="page" title="Network Programming with Qt" fulltitle="Network Programming with Qt" subtitle="" location="network-programming.qdoc" module="QtNetwork">
            <contents name="qt-s-classes-for-network-programming" title="Qt's Classes for Network Programming" level="1"/>
            <contents name="high-level-network-operations-for-http-and-ftp" title="High Level Network Operations for HTTP and FTP" level="1"/>
            <contents name="using-tcp-with-qtcpsocket-and-qtcpserver" title="Using TCP with QTcpSocket and QTcpServer" level="1"/>
            <contents name="using-udp-with-qudpsocket" title="Using UDP with QUdpSocket" level="1"/>
            <contents name="resolving-host-names-using-qhostinfo" title="Resolving Host Names using QHostInfo" level="1"/>
            <contents name="support-for-network-proxies" title="Support for Network Proxies" level="1"/>
            <contents name="bearer-management-support" title="Bearer Management Support" level="1"/>
        </page>
        <page access="public" status="commendable" name="QtNetwork" href="qtnetwork-module.html" subtype="module" title="Qt Network C++ Classes" fulltitle="Qt Network C++ Classes" subtitle="" location="qtnetwork.qdoc" groups="modules"/>
        <page access="public" status="commendable" name="qtnetwork-index.html" href="qtnetwork-index.html" subtype="page" title="Qt Network" fulltitle="Qt Network" subtitle="" location="qtnetwork.qdoc" module="QtNetwork">
            <contents name="getting-started" title="Getting Started" level="1"/>
            <contents name="articles-and-guides" title="Articles and Guides" level="1"/>
            <contents name="api-reference" title="API Reference" level="1"/>
        </page>
        <page access="public" status="commendable" name="ssl.html" href="ssl.html" subtype="page" title="Secure Sockets Layer (SSL) Classes" fulltitle="Secure Sockets Layer (SSL) Classes" subtitle="" location="ssl.qdoc" module="QtNetwork">
            <keyword name="ssl"/>
            <contents name="enabling-and-disabling-ssl-support" title="Enabling and Disabling SSL Support" level="1"/>
            <contents name="licensing-information" title="Licensing Information" level="1"/>
        </page>
    </namespace>
    <page access="public" status="commendable" name="examples-network" href="examples-network.html" subtype="group" seen="true" members="blockingfortuneclient,broadcastreceiver,broadcastsender,fortuneclient,fortuneserver,googlesuggest,http,loopback,multicastreceiver,multicastsender,network-chat,network/download,network/downloadmanager,securesocketclient,threadedfortuneserver,torrent,all-examples" title="Network Examples" fulltitle="Network Examples" subtitle="" location="examples.qdoc" groups="all-examples"/>
    <page access="public" status="commendable" name="network" href="network.html" subtype="group" seen="true" members="QUrl,QUrlQuery,QSocketNotifier,QFtp,QHttpPart,QHttpMultiPart,QNetworkAccessManager,QNetworkReply,QNetworkRequest,QNetworkConfigurationManager,QNetworkConfiguration,QNetworkSession,QAuthenticator,QDnsLookup,QDnsDomainNameRecord,QDnsHostAddressRecord,QDnsMailExchangeRecord,QDnsServiceRecord,QDnsTextRecord,QHostAddress,QHostInfo,QNetworkAddressEntry,QNetworkInterface,QNetworkProxy,QNetworkProxyFactory,QUrlInfo,QAbstractSocket,QNativeSocketEngine,QTcpServer,QTcpSocket,QUdpSocket,QSsl,QSslCertificate,QSslCertificateExtension,QSslCipher,QSslConfiguration,QSslError,QSslKey,QSslSocket,groups" title="Network Programming API" fulltitle="Network Programming API" subtitle="" location="network-programming.qdoc" groups="groups"/>
</INDEX>
