<?xml version="1.0" encoding="UTF-8"?>
<instructionals module="ActiveQt">
    <examples>
        <example name="COM App Example (ActiveQt)" docUrl="qthelp://org.qt-project.activeqt.502/activeqt/activeqt-comapp.html" projectPath="activeqt/comapp/comapp.pro">
            <description><![CDATA[The COM App example shows how to use ActiveQt to develop a Qt application that can be automated via COM. Different QObject based classes are exposed as COM objects that communicate with the GUI of the running Qt application. The APIs of those COM objects has been designed to resemble the APIs of standard COM applications; i.e. those from Microsoft Office.]]></description>
            <tags>(activeqt),app,com</tags>
            <fileToOpen>activeqt/comapp/main.cpp</fileToOpen>
        </example>
        <example name="Hierarchy Example (ActiveQt)" docUrl="qthelp://org.qt-project.activeqt.502/activeqt/activeqt-hierarchy.html" projectPath="activeqt/hierarchy/hierarchy.pro">
            <description><![CDATA[The Hierarchy example is shows how to write an in-process ActiveX control. The control is a QWidget subclass with child widgets that are accessible as sub-types.]]></description>
            <tags>(activeqt),hierarchy</tags>
            <fileToOpen>activeqt/hierarchy/main.cpp</fileToOpen>
        </example>
        <example name="Menus Example (ActiveQt)" docUrl="qthelp://org.qt-project.activeqt.502/activeqt/activeqt-menus.html" projectPath="activeqt/menus/menus.pro">
            <description><![CDATA[The Menus example demonstrates the use of QMenuBar and QStatusBar in a QMainWindow to implement an in-place active control.]]></description>
            <tags>(activeqt),menus</tags>
            <fileToOpen>activeqt/menus/menus.cpp</fileToOpen>
            <fileToOpen>activeqt/menus/menus.h</fileToOpen>
            <fileToOpen>activeqt/menus/main.cpp</fileToOpen>
        </example>
        <example name="Multiple Example (ActiveQt)" docUrl="qthelp://org.qt-project.activeqt.502/activeqt/activeqt-multiple.html" projectPath="activeqt/multiple/multiple.pro">
            <description><![CDATA[The Multiple example demonstrates the implementation of a QAxFactory to provide multiple ActiveX controls in a single in process ActiveX server using the <@func target="QAXFACTORY_EXPORT()">QAXFACTORY_EXPORT</@func>() macro. The ActiveX controls in this example are simple QWidget subclasses that reimplement QWidget::paintEvent().]]></description>
            <tags>(activeqt),multiple</tags>
            <fileToOpen>activeqt/multiple/main.cpp</fileToOpen>
        </example>
        <example name="OpenGL Example (ActiveQt)" docUrl="qthelp://org.qt-project.activeqt.502/activeqt/activeqt-opengl.html" projectPath="activeqt/opengl/opengl.pro">
            <description><![CDATA[The OpenGL example demonstrates the use of the default factory and QAxFactory::isServer(), and the implementation of an additional COM interface using QAxBindable and QAxAggregated. The server executable can run both as an ActiveX server and as a stand-alone application.]]></description>
            <tags>(activeqt),opengl</tags>
            <fileToOpen>activeqt/opengl/main.cpp</fileToOpen>
        </example>
        <example name="Qutlook Example (ActiveQt)" docUrl="qthelp://org.qt-project.activeqt.502/activeqt/activeqt-qutlook.html" projectPath="activeqt/qutlook/qutlook.pro">
            <description><![CDATA[The Qutlook example demonstrates the use of ActiveQt to automate Outlook. The example makes use of the dumpcpp tool to generate a C++ namespace for the type library describing the Outlook Object Model.]]></description>
            <tags>(activeqt),qutlook</tags>
            <fileToOpen>activeqt/qutlook/main.cpp</fileToOpen>
        </example>
        <example name="Simple Example (ActiveQt)" docUrl="qthelp://org.qt-project.activeqt.502/activeqt/activeqt-simple.html" projectPath="activeqt/simple/simple.pro">
            <description><![CDATA[No description available]]></description>
            <tags>(activeqt),simple</tags>
            <fileToOpen>activeqt/simple/main.cpp</fileToOpen>
        </example>
        <example name="Web Browser Example (ActiveQt)" docUrl="qthelp://org.qt-project.activeqt.502/activeqt/activeqt-webbrowser.html" projectPath="activeqt/webbrowser/webbrowser.pro" imageUrl="qthelp://org.qt-project.activeqt.502/activeqt/images/activeqt-webbrowser-example.png">
            <description><![CDATA[The Web Browser example uses the Microsoft Web Browser ActiveX control to implement a fully functional Web Browser application. The user interface has been developed using the Qt Designer integration of the QAxWidget class.]]></description>
            <tags>(activeqt),browser,web</tags>
            <fileToOpen>activeqt/webbrowser/main.cpp</fileToOpen>
        </example>
        <example name="Wrapper Example (ActiveQt)" docUrl="qthelp://org.qt-project.activeqt.502/activeqt/activeqt-wrapper.html" projectPath="activeqt/wrapper/wrapper.pro">
            <description><![CDATA[The Wrapper example demonstrates how to export existing QWidget classes as ActiveX controls, and the use of QAxFactory together with the <@func target="QAXFACTORY_EXPORT()">QAXFACTORY_EXPORT</@func>() macro. ActiveX controls in this example are the standard button classes QPushButton, QCheckBox and QRadioButton as provided by Qt.]]></description>
            <tags>(activeqt),wrapper</tags>
            <fileToOpen>activeqt/wrapper/main.cpp</fileToOpen>
        </example>
    </examples>
</instructionals>
