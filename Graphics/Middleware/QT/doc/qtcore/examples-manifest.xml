<?xml version="1.0" encoding="UTF-8"?>
<instructionals module="QtCore">
    <examples>
        <example name="Contiguous Cache Example" docUrl="qthelp://org.qt-project.qtcore.502/qtcore/contiguouscache.html" projectPath="core/contiguouscache/contiguouscache.pro">
            <description><![CDATA[The Contiguous Cache example shows how to use QContiguousCache to manage memory usage for very large models. In some environments memory is limited and, even when it isn't, users still dislike an application using excessive memory. Using QContiguousCache to manage a list, rather than loading the entire list into memory, allows the application to limit the amount of memory it uses, regardless of the size of the data set it accesses]]></description>
            <tags>contiguous,cache</tags>
            <fileToOpen>core/contiguouscache/main.cpp</fileToOpen>
        </example>
        <example name="Custom Completer Example" docUrl="qthelp://org.qt-project.qtcore.502/qtcore/customcompleter.html">
            <description><![CDATA[The Custom Completer example shows how to provide string-completion facilities for an input widget based on data provided by a model. The completer pops up suggestions for possible words based on the first three characters input by the user and the user's choice of word is inserted into the TextEdit using QTextCursor.]]></description>
            <tags>custom,completer</tags>
        </example>
        <example name="Custom Type Example" docUrl="qthelp://org.qt-project.qtcore.502/qtcore/tools-customtype.html">
            <description><![CDATA[The Custom Type example shows how to integrate a custom type into Qt's meta-object system.]]></description>
            <tags>type,custom</tags>
        </example>
        <example name="Mandelbrot Example" docUrl="qthelp://org.qt-project.qtcore.502/qtcore/mandelbrot.html" projectPath="core/mandelbrot/mandelbrot.pro" imageUrl="qthelp://org.qt-project.qtcore.502/qtcore/images/mandelbrot-example.png">
            <description><![CDATA[The Mandelbrot example demonstrates multi-thread programming using Qt. It shows how to use a worker thread to perform heavy computations without blocking the main thread's event loop.]]></description>
            <tags>mandelbrot</tags>
            <fileToOpen>core/mandelbrot/main.cpp</fileToOpen>
        </example>
        <example name="Queued Custom Type Example" docUrl="qthelp://org.qt-project.qtcore.502/qtcore/queuedcustomtype.html" projectPath="core/queuedcustomtype/queuedcustomtype.pro" imageUrl="qthelp://org.qt-project.qtcore.502/qtcore/images/queuedcustomtype-example.png">
            <description><![CDATA[Demonstrates multi-thread programming using Qt]]></description>
            <tags>type,queued,custom</tags>
            <fileToOpen>core/queuedcustomtype/main.cpp</fileToOpen>
        </example>
        <example name="Semaphores Example" docUrl="qthelp://org.qt-project.qtcore.502/qtcore/semaphores.html" projectPath="core/semaphores/semaphores.pro">
            <description><![CDATA[Demonstrates multi-thread programming using Qt]]></description>
            <tags>semaphores</tags>
            <fileToOpen>core/semaphores/semaphores.cpp</fileToOpen>
        </example>
        <example name="Wait Conditions Example" docUrl="qthelp://org.qt-project.qtcore.502/qtcore/waitconditions.html" projectPath="core/waitconditions/waitconditions.pro">
            <description><![CDATA[Demonstrates multi-thread programming using Qt]]></description>
            <tags>wait,conditions</tags>
            <fileToOpen>core/waitconditions/waitconditions.cpp</fileToOpen>
        </example>
    </examples>
</instructionals>
