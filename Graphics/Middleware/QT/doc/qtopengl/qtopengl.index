<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE QDOCINDEX>
<INDEX url="" title="qtopengl Reference Documentation" version="">
    <namespace access="public" threadsafety="unspecified" status="commendable" name="" href="" location="">
        <page access="public" status="commendable" name="chat" href="chat.html" subtype="example" title="D-Bus Chat Example" fulltitle="D-Bus Chat Example" subtitle="" location="chat.qdoc" module="qtopengl">
            <page access="public" status="commendable" name="chat/chat.cpp" href="chat-chat-cpp.html" subtype="file" title="" fulltitle="chat.cpp Example File" subtitle="chat/chat.cpp" location=""/>
            <page access="public" status="commendable" name="chat/chat.h" href="chat-chat-h.html" subtype="file" title="" fulltitle="chat.h Example File" subtitle="chat/chat.h" location=""/>
            <page access="public" status="commendable" name="chat/chat.pro" href="chat-chat-pro.html" subtype="file" title="" fulltitle="chat.pro Example File" subtitle="chat/chat.pro" location=""/>
            <page access="public" status="commendable" name="chat/chatmainwindow.ui" href="chat-chatmainwindow-ui.html" subtype="file" title="" fulltitle="chatmainwindow.ui Example File" subtitle="chat/chatmainwindow.ui" location=""/>
            <page access="public" status="commendable" name="chat/chatsetnickname.ui" href="chat-chatsetnickname-ui.html" subtype="file" title="" fulltitle="chatsetnickname.ui Example File" subtitle="chat/chatsetnickname.ui" location=""/>
            <page access="public" status="commendable" name="chat/org.example.chat.xml" href="chat-org-example-chat-xml.html" subtype="file" title="" fulltitle="org.example.chat.xml Example File" subtitle="chat/org.example.chat.xml" location=""/>
        </page>
        <page access="public" status="commendable" name="complexpingpong" href="complexpingpong.html" subtype="example" title="D-Bus Complex Ping Pong Example" fulltitle="D-Bus Complex Ping Pong Example" subtitle="" location="complexpingpong.qdoc" module="qtopengl">
            <page access="public" status="commendable" name="complexpingpong/complexping.cpp" href="complexpingpong-complexping-cpp.html" subtype="file" title="" fulltitle="complexping.cpp Example File" subtitle="complexpingpong/complexping.cpp" location=""/>
            <page access="public" status="commendable" name="complexpingpong/complexping.h" href="complexpingpong-complexping-h.html" subtype="file" title="" fulltitle="complexping.h Example File" subtitle="complexpingpong/complexping.h" location=""/>
            <page access="public" status="commendable" name="complexpingpong/complexping.pro" href="complexpingpong-complexping-pro.html" subtype="file" title="" fulltitle="complexping.pro Example File" subtitle="complexpingpong/complexping.pro" location=""/>
            <page access="public" status="commendable" name="complexpingpong/complexpingpong.pro" href="complexpingpong-complexpingpong-pro.html" subtype="file" title="" fulltitle="complexpingpong.pro Example File" subtitle="complexpingpong/complexpingpong.pro" location=""/>
            <page access="public" status="commendable" name="complexpingpong/complexpong.cpp" href="complexpingpong-complexpong-cpp.html" subtype="file" title="" fulltitle="complexpong.cpp Example File" subtitle="complexpingpong/complexpong.cpp" location=""/>
            <page access="public" status="commendable" name="complexpingpong/complexpong.h" href="complexpingpong-complexpong-h.html" subtype="file" title="" fulltitle="complexpong.h Example File" subtitle="complexpingpong/complexpong.h" location=""/>
            <page access="public" status="commendable" name="complexpingpong/complexpong.pro" href="complexpingpong-complexpong-pro.html" subtype="file" title="" fulltitle="complexpong.pro Example File" subtitle="complexpingpong/complexpong.pro" location=""/>
            <page access="public" status="commendable" name="complexpingpong/ping-common.h" href="complexpingpong-ping-common-h.html" subtype="file" title="" fulltitle="ping-common.h Example File" subtitle="complexpingpong/ping-common.h" location=""/>
        </page>
        <page access="public" status="commendable" name="listnames" href="listnames.html" subtype="example" title="D-Bus List Names Example" fulltitle="D-Bus List Names Example" subtitle="" location="listnames.qdoc" module="qtopengl">
            <page access="public" status="commendable" name="listnames/listnames.cpp" href="listnames-listnames-cpp.html" subtype="file" title="" fulltitle="listnames.cpp Example File" subtitle="listnames/listnames.cpp" location=""/>
            <page access="public" status="commendable" name="listnames/listnames.pro" href="listnames-listnames-pro.html" subtype="file" title="" fulltitle="listnames.pro Example File" subtitle="listnames/listnames.pro" location=""/>
        </page>
        <page access="public" status="commendable" name="pingpong" href="pingpong.html" subtype="example" title="D-Bus Ping Pong Example" fulltitle="D-Bus Ping Pong Example" subtitle="" location="pingpong.qdoc" module="qtopengl">
            <page access="public" status="commendable" name="pingpong/ping-common.h" href="pingpong-ping-common-h.html" subtype="file" title="" fulltitle="ping-common.h Example File" subtitle="pingpong/ping-common.h" location=""/>
            <page access="public" status="commendable" name="pingpong/ping.cpp" href="pingpong-ping-cpp.html" subtype="file" title="" fulltitle="ping.cpp Example File" subtitle="pingpong/ping.cpp" location=""/>
            <page access="public" status="commendable" name="pingpong/ping.pro" href="pingpong-ping-pro.html" subtype="file" title="" fulltitle="ping.pro Example File" subtitle="pingpong/ping.pro" location=""/>
            <page access="public" status="commendable" name="pingpong/pingpong.pro" href="pingpong-pingpong-pro.html" subtype="file" title="" fulltitle="pingpong.pro Example File" subtitle="pingpong/pingpong.pro" location=""/>
            <page access="public" status="commendable" name="pingpong/pong.cpp" href="pingpong-pong-cpp.html" subtype="file" title="" fulltitle="pong.cpp Example File" subtitle="pingpong/pong.cpp" location=""/>
            <page access="public" status="commendable" name="pingpong/pong.h" href="pingpong-pong-h.html" subtype="file" title="" fulltitle="pong.h Example File" subtitle="pingpong/pong.h" location=""/>
            <page access="public" status="commendable" name="pingpong/pong.pro" href="pingpong-pong-pro.html" subtype="file" title="" fulltitle="pong.pro Example File" subtitle="pingpong/pong.pro" location=""/>
        </page>
        <page access="public" status="commendable" name="remotecontrolledcar" href="remotecontrolledcar.html" subtype="example" title="D-Bus Remote Controlled Car Example" fulltitle="D-Bus Remote Controlled Car Example" subtitle="" location="remotecontrolledcar.qdoc" module="qtopengl">
            <page access="public" status="commendable" name="remotecontrolledcar/car/car.cpp" href="remotecontrolledcar-car-car-cpp.html" subtype="file" title="" fulltitle="car.cpp Example File" subtitle="remotecontrolledcar/car/car.cpp" location=""/>
            <page access="public" status="commendable" name="remotecontrolledcar/car/car.h" href="remotecontrolledcar-car-car-h.html" subtype="file" title="" fulltitle="car.h Example File" subtitle="remotecontrolledcar/car/car.h" location=""/>
            <page access="public" status="commendable" name="remotecontrolledcar/car/car.pro" href="remotecontrolledcar-car-car-pro.html" subtype="file" title="" fulltitle="car.pro Example File" subtitle="remotecontrolledcar/car/car.pro" location=""/>
            <page access="public" status="commendable" name="remotecontrolledcar/car/car.xml" href="remotecontrolledcar-car-car-xml.html" subtype="file" title="" fulltitle="car.xml Example File" subtitle="remotecontrolledcar/car/car.xml" location=""/>
            <page access="public" status="commendable" name="remotecontrolledcar/car/main.cpp" href="remotecontrolledcar-car-main-cpp.html" subtype="file" title="" fulltitle="main.cpp Example File" subtitle="remotecontrolledcar/car/main.cpp" location=""/>
            <page access="public" status="commendable" name="remotecontrolledcar/controller/car.xml" href="remotecontrolledcar-controller-car-xml.html" subtype="file" title="" fulltitle="car.xml Example File" subtitle="remotecontrolledcar/controller/car.xml" location=""/>
            <page access="public" status="commendable" name="remotecontrolledcar/controller/controller.cpp" href="remotecontrolledcar-controller-controller-cpp.html" subtype="file" title="" fulltitle="controller.cpp Example File" subtitle="remotecontrolledcar/controller/controller.cpp" location=""/>
            <page access="public" status="commendable" name="remotecontrolledcar/controller/controller.h" href="remotecontrolledcar-controller-controller-h.html" subtype="file" title="" fulltitle="controller.h Example File" subtitle="remotecontrolledcar/controller/controller.h" location=""/>
            <page access="public" status="commendable" name="remotecontrolledcar/controller/controller.pro" href="remotecontrolledcar-controller-controller-pro.html" subtype="file" title="" fulltitle="controller.pro Example File" subtitle="remotecontrolledcar/controller/controller.pro" location=""/>
            <page access="public" status="commendable" name="remotecontrolledcar/controller/controller.ui" href="remotecontrolledcar-controller-controller-ui.html" subtype="file" title="" fulltitle="controller.ui Example File" subtitle="remotecontrolledcar/controller/controller.ui" location=""/>
            <page access="public" status="commendable" name="remotecontrolledcar/remotecontrolledcar.pro" href="remotecontrolledcar-remotecontrolledcar-pro.html" subtype="file" title="" fulltitle="remotecontrolledcar.pro Example File" subtitle="remotecontrolledcar/remotecontrolledcar.pro" location=""/>
        </page>
        <page access="public" status="commendable" name="dbus/remotecontrolledcar" href="dbus-remotecontrolledcar.html" subtype="example" title="D-Bus Remote Controlled Car Example" fulltitle="D-Bus Remote Controlled Car Example" subtitle="" location="dbus-remotecontrolledcar.qdoc" module="qtopengl"/>
        <page access="public" status="commendable" name="2dpainting" href="2dpainting.html" subtype="example" title="2D Painting Example" fulltitle="2D Painting Example" subtitle="" location="2dpainting.qdoc" module="qtopengl" groups="examples-widgets-opengl">
            <contents name="overview" title="Overview" level="1"/>
            <contents name="helper-class-definition" title="Helper Class Definition" level="1"/>
            <contents name="helper-class-implementation" title="Helper Class Implementation" level="1"/>
            <contents name="widget-class-definition" title="Widget Class Definition" level="1"/>
            <contents name="widget-class-implementation" title="Widget Class Implementation" level="1"/>
            <contents name="glwidget-class-definition" title="GLWidget Class Definition" level="1"/>
            <contents name="glwidget-class-implementation" title="GLWidget Class Implementation" level="1"/>
            <contents name="window-class-definition" title="Window Class Definition" level="1"/>
            <contents name="window-class-implementation" title="Window Class Implementation" level="1"/>
            <contents name="running-the-example" title="Running the Example" level="1"/>
            <page access="public" status="commendable" name="2dpainting/2dpainting.pro" href="2dpainting-2dpainting-pro.html" subtype="file" title="" fulltitle="2dpainting.pro Example File" subtitle="2dpainting/2dpainting.pro" location=""/>
            <page access="public" status="commendable" name="2dpainting/glwidget.cpp" href="2dpainting-glwidget-cpp.html" subtype="file" title="" fulltitle="glwidget.cpp Example File" subtitle="2dpainting/glwidget.cpp" location=""/>
            <page access="public" status="commendable" name="2dpainting/glwidget.h" href="2dpainting-glwidget-h.html" subtype="file" title="" fulltitle="glwidget.h Example File" subtitle="2dpainting/glwidget.h" location=""/>
            <page access="public" status="commendable" name="2dpainting/helper.cpp" href="2dpainting-helper-cpp.html" subtype="file" title="" fulltitle="helper.cpp Example File" subtitle="2dpainting/helper.cpp" location=""/>
            <page access="public" status="commendable" name="2dpainting/helper.h" href="2dpainting-helper-h.html" subtype="file" title="" fulltitle="helper.h Example File" subtitle="2dpainting/helper.h" location=""/>
            <page access="public" status="commendable" name="2dpainting/main.cpp" href="2dpainting-main-cpp.html" subtype="file" title="" fulltitle="main.cpp Example File" subtitle="2dpainting/main.cpp" location=""/>
            <page access="public" status="commendable" name="2dpainting/widget.cpp" href="2dpainting-widget-cpp.html" subtype="file" title="" fulltitle="widget.cpp Example File" subtitle="2dpainting/widget.cpp" location=""/>
            <page access="public" status="commendable" name="2dpainting/widget.h" href="2dpainting-widget-h.html" subtype="file" title="" fulltitle="widget.h Example File" subtitle="2dpainting/widget.h" location=""/>
            <page access="public" status="commendable" name="2dpainting/window.cpp" href="2dpainting-window-cpp.html" subtype="file" title="" fulltitle="window.cpp Example File" subtitle="2dpainting/window.cpp" location=""/>
            <page access="public" status="commendable" name="2dpainting/window.h" href="2dpainting-window-h.html" subtype="file" title="" fulltitle="window.h Example File" subtitle="2dpainting/window.h" location=""/>
        </page>
        <page access="public" status="commendable" name="cube" href="cube.html" subtype="example" title="Cube OpenGL ES 2.0 example" fulltitle="Cube OpenGL ES 2.0 example" subtitle="" location="cube.qdoc" module="qtopengl" groups="examples-widgets-opengl">
            <contents name="initializing-opengl-es-2-0" title="Initializing OpenGL ES 2.0" level="1"/>
            <contents name="loading-textures-from-qt-resource-files" title="Loading textures from Qt Resource files" level="1"/>
            <contents name="cube-geometry" title="Cube Geometry" level="1"/>
            <contents name="perspective-projection" title="Perspective projection" level="1"/>
            <contents name="orientation-of-the-3d-object" title="Orientation of the 3D object" level="1"/>
            <page access="public" status="commendable" name="cube/cube.pro" href="cube-cube-pro.html" subtype="file" title="" fulltitle="cube.pro Example File" subtitle="cube/cube.pro" location=""/>
            <page access="public" status="commendable" name="cube/geometryengine.cpp" href="cube-geometryengine-cpp.html" subtype="file" title="" fulltitle="geometryengine.cpp Example File" subtitle="cube/geometryengine.cpp" location=""/>
            <page access="public" status="commendable" name="cube/geometryengine.h" href="cube-geometryengine-h.html" subtype="file" title="" fulltitle="geometryengine.h Example File" subtitle="cube/geometryengine.h" location=""/>
            <page access="public" status="commendable" name="cube/main.cpp" href="cube-main-cpp.html" subtype="file" title="" fulltitle="main.cpp Example File" subtitle="cube/main.cpp" location=""/>
            <page access="public" status="commendable" name="cube/mainwidget.cpp" href="cube-mainwidget-cpp.html" subtype="file" title="" fulltitle="mainwidget.cpp Example File" subtitle="cube/mainwidget.cpp" location=""/>
            <page access="public" status="commendable" name="cube/mainwidget.h" href="cube-mainwidget-h.html" subtype="file" title="" fulltitle="mainwidget.h Example File" subtitle="cube/mainwidget.h" location=""/>
            <page access="public" status="commendable" name="cube/shaders.qrc" href="cube-shaders-qrc.html" subtype="file" title="" fulltitle="shaders.qrc Example File" subtitle="cube/shaders.qrc" location=""/>
            <page access="public" status="commendable" name="cube/textures.qrc" href="cube-textures-qrc.html" subtype="file" title="" fulltitle="textures.qrc Example File" subtitle="cube/textures.qrc" location=""/>
        </page>
        <page access="public" status="commendable" name="framebufferobject2" href="framebufferobject2.html" subtype="example" title="Framebuffer Object 2 Example" fulltitle="Framebuffer Object 2 Example" subtitle="" location="framebufferobject2.qdoc" module="qtopengl" groups="examples-widgets-opengl">
            <page access="public" status="commendable" name="framebufferobject2/framebufferobject2.pro" href="framebufferobject2-framebufferobject2-pro.html" subtype="file" title="" fulltitle="framebufferobject2.pro Example File" subtitle="framebufferobject2/framebufferobject2.pro" location=""/>
            <page access="public" status="commendable" name="framebufferobject2/framebufferobject2.qrc" href="framebufferobject2-framebufferobject2-qrc.html" subtype="file" title="" fulltitle="framebufferobject2.qrc Example File" subtitle="framebufferobject2/framebufferobject2.qrc" location=""/>
            <page access="public" status="commendable" name="framebufferobject2/glwidget.cpp" href="framebufferobject2-glwidget-cpp.html" subtype="file" title="" fulltitle="glwidget.cpp Example File" subtitle="framebufferobject2/glwidget.cpp" location=""/>
            <page access="public" status="commendable" name="framebufferobject2/glwidget.h" href="framebufferobject2-glwidget-h.html" subtype="file" title="" fulltitle="glwidget.h Example File" subtitle="framebufferobject2/glwidget.h" location=""/>
            <page access="public" status="commendable" name="framebufferobject2/main.cpp" href="framebufferobject2-main-cpp.html" subtype="file" title="" fulltitle="main.cpp Example File" subtitle="framebufferobject2/main.cpp" location=""/>
        </page>
        <page access="public" status="commendable" name="grabber" href="grabber.html" subtype="example" title="Grabber Example" fulltitle="Grabber Example" subtitle="" location="grabber.qdoc" module="qtopengl" groups="examples-widgets-opengl">
            <page access="public" status="commendable" name="grabber/glwidget.cpp" href="grabber-glwidget-cpp.html" subtype="file" title="" fulltitle="glwidget.cpp Example File" subtitle="grabber/glwidget.cpp" location=""/>
            <page access="public" status="commendable" name="grabber/glwidget.h" href="grabber-glwidget-h.html" subtype="file" title="" fulltitle="glwidget.h Example File" subtitle="grabber/glwidget.h" location=""/>
            <page access="public" status="commendable" name="grabber/grabber.pro" href="grabber-grabber-pro.html" subtype="file" title="" fulltitle="grabber.pro Example File" subtitle="grabber/grabber.pro" location=""/>
            <page access="public" status="commendable" name="grabber/main.cpp" href="grabber-main-cpp.html" subtype="file" title="" fulltitle="main.cpp Example File" subtitle="grabber/main.cpp" location=""/>
            <page access="public" status="commendable" name="grabber/mainwindow.cpp" href="grabber-mainwindow-cpp.html" subtype="file" title="" fulltitle="mainwindow.cpp Example File" subtitle="grabber/mainwindow.cpp" location=""/>
            <page access="public" status="commendable" name="grabber/mainwindow.h" href="grabber-mainwindow-h.html" subtype="file" title="" fulltitle="mainwindow.h Example File" subtitle="grabber/mainwindow.h" location=""/>
        </page>
        <page access="public" status="commendable" name="hellogl" href="hellogl.html" subtype="example" title="Hello GL Example" fulltitle="Hello GL Example" subtitle="" location="hellogl.qdoc" module="qtopengl" groups="examples-widgets-opengl">
            <contents name="glwidget-class-definition" title="GLWidget Class Definition" level="1"/>
            <contents name="glwidget-class-implementation" title="GLWidget Class Implementation" level="1"/>
            <contents name="widget-construction-and-sizing" title="Widget Construction and Sizing" level="2"/>
            <contents name="opengl-initialization" title="OpenGL Initialization" level="2"/>
            <contents name="resizing-the-viewport" title="Resizing the Viewport" level="2"/>
            <contents name="painting-the-scene" title="Painting the Scene" level="2"/>
            <contents name="mouse-handling" title="Mouse Handling" level="2"/>
            <contents name="qtlogo-class" title="QtLogo Class" level="1"/>
            <contents name="window-class-definition" title="Window Class Definition" level="1"/>
            <contents name="window-class-implementation" title="Window Class Implementation" level="1"/>
            <contents name="summary" title="Summary" level="1"/>
            <page access="public" status="commendable" name="hellogl/glwidget.cpp" href="hellogl-glwidget-cpp.html" subtype="file" title="" fulltitle="glwidget.cpp Example File" subtitle="hellogl/glwidget.cpp" location=""/>
            <page access="public" status="commendable" name="hellogl/glwidget.h" href="hellogl-glwidget-h.html" subtype="file" title="" fulltitle="glwidget.h Example File" subtitle="hellogl/glwidget.h" location=""/>
            <page access="public" status="commendable" name="hellogl/hellogl.pro" href="hellogl-hellogl-pro.html" subtype="file" title="" fulltitle="hellogl.pro Example File" subtitle="hellogl/hellogl.pro" location=""/>
            <page access="public" status="commendable" name="hellogl/main.cpp" href="hellogl-main-cpp.html" subtype="file" title="" fulltitle="main.cpp Example File" subtitle="hellogl/main.cpp" location=""/>
            <page access="public" status="commendable" name="hellogl/window.cpp" href="hellogl-window-cpp.html" subtype="file" title="" fulltitle="window.cpp Example File" subtitle="hellogl/window.cpp" location=""/>
            <page access="public" status="commendable" name="hellogl/window.h" href="hellogl-window-h.html" subtype="file" title="" fulltitle="window.h Example File" subtitle="hellogl/window.h" location=""/>
        </page>
        <page access="public" status="commendable" name="overpainting" href="overpainting.html" subtype="example" title="Overpainting Example" fulltitle="Overpainting Example" subtitle="" location="overpainting.qdoc" module="qtopengl" groups="examples-widgets-opengl">
            <contents name="glwidget-class-definition" title="GLWidget Class Definition" level="1"/>
            <contents name="glwidget-class-implementation" title="GLWidget Class Implementation" level="1"/>
            <contents name="summary" title="Summary" level="1"/>
            <page access="public" status="commendable" name="overpainting/bubble.cpp" href="overpainting-bubble-cpp.html" subtype="file" title="" fulltitle="bubble.cpp Example File" subtitle="overpainting/bubble.cpp" location=""/>
            <page access="public" status="commendable" name="overpainting/bubble.h" href="overpainting-bubble-h.html" subtype="file" title="" fulltitle="bubble.h Example File" subtitle="overpainting/bubble.h" location=""/>
            <page access="public" status="commendable" name="overpainting/glwidget.cpp" href="overpainting-glwidget-cpp.html" subtype="file" title="" fulltitle="glwidget.cpp Example File" subtitle="overpainting/glwidget.cpp" location=""/>
            <page access="public" status="commendable" name="overpainting/glwidget.h" href="overpainting-glwidget-h.html" subtype="file" title="" fulltitle="glwidget.h Example File" subtitle="overpainting/glwidget.h" location=""/>
            <page access="public" status="commendable" name="overpainting/main.cpp" href="overpainting-main-cpp.html" subtype="file" title="" fulltitle="main.cpp Example File" subtitle="overpainting/main.cpp" location=""/>
            <page access="public" status="commendable" name="overpainting/overpainting.pro" href="overpainting-overpainting-pro.html" subtype="file" title="" fulltitle="overpainting.pro Example File" subtitle="overpainting/overpainting.pro" location=""/>
        </page>
        <page access="public" status="commendable" name="pbuffers" href="pbuffers.html" subtype="example" title="Pixel Buffers Example" fulltitle="Pixel Buffers Example" subtitle="" location="pbuffers.qdoc" module="qtopengl" groups="examples-widgets-opengl">
            <page access="public" status="commendable" name="pbuffers/cube.cpp" href="pbuffers-cube-cpp.html" subtype="file" title="" fulltitle="cube.cpp Example File" subtitle="pbuffers/cube.cpp" location=""/>
            <page access="public" status="commendable" name="pbuffers/cube.h" href="pbuffers-cube-h.html" subtype="file" title="" fulltitle="cube.h Example File" subtitle="pbuffers/cube.h" location=""/>
            <page access="public" status="commendable" name="pbuffers/glwidget.cpp" href="pbuffers-glwidget-cpp.html" subtype="file" title="" fulltitle="glwidget.cpp Example File" subtitle="pbuffers/glwidget.cpp" location=""/>
            <page access="public" status="commendable" name="pbuffers/glwidget.h" href="pbuffers-glwidget-h.html" subtype="file" title="" fulltitle="glwidget.h Example File" subtitle="pbuffers/glwidget.h" location=""/>
            <page access="public" status="commendable" name="pbuffers/main.cpp" href="pbuffers-main-cpp.html" subtype="file" title="" fulltitle="main.cpp Example File" subtitle="pbuffers/main.cpp" location=""/>
            <page access="public" status="commendable" name="pbuffers/pbuffers.pro" href="pbuffers-pbuffers-pro.html" subtype="file" title="" fulltitle="pbuffers.pro Example File" subtitle="pbuffers/pbuffers.pro" location=""/>
            <page access="public" status="commendable" name="pbuffers/pbuffers.qrc" href="pbuffers-pbuffers-qrc.html" subtype="file" title="" fulltitle="pbuffers.qrc Example File" subtitle="pbuffers/pbuffers.qrc" location=""/>
        </page>
        <page access="public" status="commendable" name="pbuffers2" href="pbuffers2.html" subtype="example" title="Pixel Buffers 2 Example" fulltitle="Pixel Buffers 2 Example" subtitle="" location="pbuffers2.qdoc" module="qtopengl" groups="examples-widgets-opengl">
            <page access="public" status="commendable" name="pbuffers2/bubbles.svg" href="pbuffers2-bubbles-svg.html" subtype="file" title="" fulltitle="bubbles.svg Example File" subtitle="pbuffers2/bubbles.svg" location=""/>
            <page access="public" status="commendable" name="pbuffers2/glwidget.cpp" href="pbuffers2-glwidget-cpp.html" subtype="file" title="" fulltitle="glwidget.cpp Example File" subtitle="pbuffers2/glwidget.cpp" location=""/>
            <page access="public" status="commendable" name="pbuffers2/glwidget.h" href="pbuffers2-glwidget-h.html" subtype="file" title="" fulltitle="glwidget.h Example File" subtitle="pbuffers2/glwidget.h" location=""/>
            <page access="public" status="commendable" name="pbuffers2/main.cpp" href="pbuffers2-main-cpp.html" subtype="file" title="" fulltitle="main.cpp Example File" subtitle="pbuffers2/main.cpp" location=""/>
            <page access="public" status="commendable" name="pbuffers2/pbuffers2.pro" href="pbuffers2-pbuffers2-pro.html" subtype="file" title="" fulltitle="pbuffers2.pro Example File" subtitle="pbuffers2/pbuffers2.pro" location=""/>
            <page access="public" status="commendable" name="pbuffers2/pbuffers2.qrc" href="pbuffers2-pbuffers2-qrc.html" subtype="file" title="" fulltitle="pbuffers2.qrc Example File" subtitle="pbuffers2/pbuffers2.qrc" location=""/>
        </page>
        <page access="public" status="commendable" name="samplebuffers" href="samplebuffers.html" subtype="example" title="Sample Buffers Example" fulltitle="Sample Buffers Example" subtitle="" location="samplebuffers.qdoc" module="qtopengl" groups="examples-widgets-opengl">
            <page access="public" status="commendable" name="samplebuffers/glwidget.cpp" href="samplebuffers-glwidget-cpp.html" subtype="file" title="" fulltitle="glwidget.cpp Example File" subtitle="samplebuffers/glwidget.cpp" location=""/>
            <page access="public" status="commendable" name="samplebuffers/glwidget.h" href="samplebuffers-glwidget-h.html" subtype="file" title="" fulltitle="glwidget.h Example File" subtitle="samplebuffers/glwidget.h" location=""/>
            <page access="public" status="commendable" name="samplebuffers/main.cpp" href="samplebuffers-main-cpp.html" subtype="file" title="" fulltitle="main.cpp Example File" subtitle="samplebuffers/main.cpp" location=""/>
            <page access="public" status="commendable" name="samplebuffers/samplebuffers.pro" href="samplebuffers-samplebuffers-pro.html" subtype="file" title="" fulltitle="samplebuffers.pro Example File" subtitle="samplebuffers/samplebuffers.pro" location=""/>
        </page>
        <page access="public" status="commendable" name="textures" href="textures.html" subtype="example" title="Textures Example" fulltitle="Textures Example" subtitle="" location="textures.qdoc" module="qtopengl" groups="examples-widgets-opengl">
            <page access="public" status="commendable" name="textures/glwidget.cpp" href="textures-glwidget-cpp.html" subtype="file" title="" fulltitle="glwidget.cpp Example File" subtitle="textures/glwidget.cpp" location=""/>
            <page access="public" status="commendable" name="textures/glwidget.h" href="textures-glwidget-h.html" subtype="file" title="" fulltitle="glwidget.h Example File" subtitle="textures/glwidget.h" location=""/>
            <page access="public" status="commendable" name="textures/images/side1.png" href="textures-images-side1-png.html" title="" fulltitle="side1.png Image File" subtitle="textures/images/side1.png" location=""/>
            <page access="public" status="commendable" name="textures/images/side2.png" href="textures-images-side2-png.html" title="" fulltitle="side2.png Image File" subtitle="textures/images/side2.png" location=""/>
            <page access="public" status="commendable" name="textures/images/side3.png" href="textures-images-side3-png.html" title="" fulltitle="side3.png Image File" subtitle="textures/images/side3.png" location=""/>
            <page access="public" status="commendable" name="textures/images/side4.png" href="textures-images-side4-png.html" title="" fulltitle="side4.png Image File" subtitle="textures/images/side4.png" location=""/>
            <page access="public" status="commendable" name="textures/images/side5.png" href="textures-images-side5-png.html" title="" fulltitle="side5.png Image File" subtitle="textures/images/side5.png" location=""/>
            <page access="public" status="commendable" name="textures/images/side6.png" href="textures-images-side6-png.html" title="" fulltitle="side6.png Image File" subtitle="textures/images/side6.png" location=""/>
            <page access="public" status="commendable" name="textures/main.cpp" href="textures-main-cpp.html" subtype="file" title="" fulltitle="main.cpp Example File" subtitle="textures/main.cpp" location=""/>
            <page access="public" status="commendable" name="textures/textures.pro" href="textures-textures-pro.html" subtype="file" title="" fulltitle="textures.pro Example File" subtitle="textures/textures.pro" location=""/>
            <page access="public" status="commendable" name="textures/textures.qrc" href="textures-textures-qrc.html" subtype="file" title="" fulltitle="textures.qrc Example File" subtitle="textures/textures.qrc" location=""/>
            <page access="public" status="commendable" name="textures/window.cpp" href="textures-window-cpp.html" subtype="file" title="" fulltitle="window.cpp Example File" subtitle="textures/window.cpp" location=""/>
            <page access="public" status="commendable" name="textures/window.h" href="textures-window-h.html" subtype="file" title="" fulltitle="window.h Example File" subtitle="textures/window.h" location=""/>
        </page>
        <namespace access="public" threadsafety="unspecified" status="commendable" name="QGL" href="qgl.html" location="qgl.h" module="QtOpenGL">
            <enum access="public" threadsafety="unspecified" status="commendable" name="FormatOption" fullname="QGL::FormatOption" href="qgl.html#FormatOption-enum" location="qgl.h" typedef="QGL::FormatOptions">
                <value name="DoubleBuffer" value="0x0001"/>
                <value name="DepthBuffer" value="0x0002"/>
                <value name="Rgba" value="0x0004"/>
                <value name="AlphaChannel" value="0x0008"/>
                <value name="AccumBuffer" value="0x0010"/>
                <value name="StencilBuffer" value="0x0020"/>
                <value name="StereoBuffers" value="0x0040"/>
                <value name="DirectRendering" value="0x0080"/>
                <value name="HasOverlay" value="0x0100"/>
                <value name="SampleBuffers" value="0x0200"/>
                <value name="DeprecatedFunctions" value="0x0400"/>
                <value name="SingleBuffer" value="DoubleBuffer&lt;&lt;16"/>
                <value name="NoDepthBuffer" value="DepthBuffer&lt;&lt;16"/>
                <value name="ColorIndex" value="Rgba&lt;&lt;16"/>
                <value name="NoAlphaChannel" value="AlphaChannel&lt;&lt;16"/>
                <value name="NoAccumBuffer" value="AccumBuffer&lt;&lt;16"/>
                <value name="NoStencilBuffer" value="StencilBuffer&lt;&lt;16"/>
                <value name="NoStereoBuffers" value="StereoBuffers&lt;&lt;16"/>
                <value name="IndirectRendering" value="DirectRendering&lt;&lt;16"/>
                <value name="NoOverlay" value="HasOverlay&lt;&lt;16"/>
                <value name="NoSampleBuffers" value="SampleBuffers&lt;&lt;16"/>
                <value name="NoDeprecatedFunctions" value="DeprecatedFunctions&lt;&lt;16"/>
            </enum>
            <typedef access="public" threadsafety="unspecified" status="commendable" name="FormatOptions" fullname="QGL::FormatOptions" href="qgl.html#FormatOptions-typedef" location="qgl.h" enum="QGL::FormatOption"/>
        </namespace>
        <class access="public" threadsafety="unspecified" status="commendable" name="QGLContext" href="qglcontext.html" location="qgl.h" bases="" module="QtOpenGL">
            <function access="public" threadsafety="unspecified" status="commendable" name="device" fullname="QGLContext::device" href="qglcontext.html#device" location="qgl.cpp" virtual="non" meta="plain" const="true" static="false" overload="false" type="QPaintDevice *" signature="device() const"/>
            <function access="protected" threadsafety="unspecified" status="commendable" name="deviceIsPixmap" fullname="QGLContext::deviceIsPixmap" href="qglcontext.html#deviceIsPixmap" location="qgl.cpp" virtual="non" meta="plain" const="true" static="false" overload="false" type="bool" signature="deviceIsPixmap() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="format" fullname="QGLContext::format" href="qglcontext.html#format" location="qgl.cpp" virtual="non" meta="plain" const="true" static="false" overload="false" type="QGLFormat" signature="format() const"/>
            <function access="protected" threadsafety="unspecified" status="commendable" name="initialized" fullname="QGLContext::initialized" href="qglcontext.html#initialized" location="qgl.cpp" virtual="non" meta="plain" const="true" static="false" overload="false" type="bool" signature="initialized() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="isSharing" fullname="QGLContext::isSharing" href="qglcontext.html#isSharing" location="qgl.cpp" virtual="non" meta="plain" const="true" static="false" overload="false" type="bool" signature="isSharing() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="isValid" fullname="QGLContext::isValid" href="qglcontext.html#isValid" location="qgl.cpp" virtual="non" meta="plain" const="true" static="false" overload="false" type="bool" signature="isValid() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="requestedFormat" fullname="QGLContext::requestedFormat" href="qglcontext.html#requestedFormat" location="qgl.cpp" virtual="non" meta="plain" const="true" static="false" overload="false" type="QGLFormat" signature="requestedFormat() const"/>
            <function access="protected" threadsafety="unspecified" status="commendable" name="setInitialized" fullname="QGLContext::setInitialized" href="qglcontext.html#setInitialized" location="qgl.cpp" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setInitialized(bool on)">
                <parameter left="bool" right="" name="on" default=""/>
            </function>
            <function access="protected" threadsafety="unspecified" status="commendable" name="setWindowCreated" fullname="QGLContext::setWindowCreated" href="qglcontext.html#setWindowCreated" location="qgl.cpp" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setWindowCreated(bool on)">
                <parameter left="bool" right="" name="on" default=""/>
            </function>
            <function access="protected" threadsafety="unspecified" status="commendable" name="windowCreated" fullname="QGLContext::windowCreated" href="qglcontext.html#windowCreated" location="qgl.cpp" virtual="non" meta="plain" const="true" static="false" overload="false" type="bool" signature="windowCreated() const"/>
            <enum access="public" threadsafety="unspecified" status="commendable" name="BindOption" fullname="QGLContext::BindOption" href="qglcontext.html#BindOption-enum" location="qgl.h" since="4.6" typedef="QGLContext::BindOptions">
                <value name="NoBindOption" value="0x0000"/>
                <value name="InvertedYBindOption" value="0x0001"/>
                <value name="MipmapBindOption" value="0x0002"/>
                <value name="PremultipliedAlphaBindOption" value="0x0004"/>
                <value name="LinearFilteringBindOption" value="0x0008"/>
                <value name="MemoryManagedBindOption" value="0x0010"/>
                <value name="CanFlipNativePixmapBindOption" value="0x0020"/>
                <value name="TemporarilyCachedBindOption" value="0x0040"/>
                <value name="DefaultBindOption" value="LinearFilteringBindOption | InvertedYBindOption | MipmapBindOption"/>
                <value name="InternalBindOption" value="MemoryManagedBindOption | PremultipliedAlphaBindOption"/>
            </enum>
            <typedef access="public" threadsafety="unspecified" status="commendable" name="BindOptions" fullname="QGLContext::BindOptions" href="qglcontext.html#BindOptions-typedef" location="qgl.h" enum="QGLContext::BindOption"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="QGLContext" fullname="QGLContext::QGLContext" href="qglcontext.html#QGLContext" location="qgl.h" virtual="non" meta="constructor" const="false" static="false" overload="false" type="" signature="QGLContext(const QGLFormat &amp; format)">
                <parameter left="const QGLFormat &amp;" right="" name="format" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="obsolete" name="QGLContext" fullname="QGLContext::QGLContext" href="qglcontext-obsolete.html#QGLContext-2" location="qgl.h" virtual="non" meta="constructor" const="false" static="false" overload="true" overload-number="2" type="" signature="QGLContext(const QGLFormat &amp; format, QPaintDevice * device)">
                <parameter left="const QGLFormat &amp;" right="" name="format" default=""/>
                <parameter left="QPaintDevice *" right="" name="device" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="areSharing" fullname="QGLContext::areSharing" href="qglcontext.html#areSharing" location="qgl.h" since="4.6" virtual="non" meta="plain" const="false" static="true" overload="false" type="bool" signature="areSharing(const QGLContext * context1, const QGLContext * context2)">
                <parameter left="const QGLContext *" right="" name="context1" default=""/>
                <parameter left="const QGLContext *" right="" name="context2" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="bindTexture" fullname="QGLContext::bindTexture" href="qglcontext.html#bindTexture-3" location="qgl.h" virtual="non" meta="plain" const="false" static="false" overload="true" overload-number="3" type="GLuint" signature="bindTexture(const QImage &amp; image, GLenum target, GLint format)">
                <parameter left="const QImage &amp;" right="" name="image" default=""/>
                <parameter left="GLenum" right="" name="target" default="GL_TEXTURE_2D"/>
                <parameter left="GLint" right="" name="format" default="GL_RGBA"/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="bindTexture" fullname="QGLContext::bindTexture" href="qglcontext.html#bindTexture" location="qgl.h" since="4.6" virtual="non" meta="plain" const="false" static="false" overload="false" type="GLuint" signature="bindTexture(const QImage &amp; image, GLenum target, GLint format, QFlags&lt;QGLContext::BindOption&gt; options)">
                <parameter left="const QImage &amp;" right="" name="image" default=""/>
                <parameter left="GLenum" right="" name="target" default=""/>
                <parameter left="GLint" right="" name="format" default=""/>
                <parameter left="QFlags&lt;QGLContext::BindOption&gt;" right="" name="options" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="bindTexture" fullname="QGLContext::bindTexture" href="qglcontext.html#bindTexture-4" location="qgl.h" virtual="non" meta="plain" const="false" static="false" overload="true" overload-number="4" type="GLuint" signature="bindTexture(const QPixmap &amp; pixmap, GLenum target, GLint format)">
                <parameter left="const QPixmap &amp;" right="" name="pixmap" default=""/>
                <parameter left="GLenum" right="" name="target" default="GL_TEXTURE_2D"/>
                <parameter left="GLint" right="" name="format" default="GL_RGBA"/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="bindTexture" fullname="QGLContext::bindTexture" href="qglcontext.html#bindTexture-5" location="qgl.h" since="4.6" virtual="non" meta="plain" const="false" static="false" overload="true" overload-number="5" type="GLuint" signature="bindTexture(const QPixmap &amp; pixmap, GLenum target, GLint format, QFlags&lt;QGLContext::BindOption&gt; options)">
                <parameter left="const QPixmap &amp;" right="" name="pixmap" default=""/>
                <parameter left="GLenum" right="" name="target" default=""/>
                <parameter left="GLint" right="" name="format" default=""/>
                <parameter left="QFlags&lt;QGLContext::BindOption&gt;" right="" name="options" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="bindTexture" fullname="QGLContext::bindTexture" href="qglcontext.html#bindTexture-2" location="qgl.h" virtual="non" meta="plain" const="false" static="false" overload="true" overload-number="2" type="GLuint" signature="bindTexture(const QString &amp; fileName)">
                <parameter left="const QString &amp;" right="" name="fileName" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="create" fullname="QGLContext::create" href="qglcontext.html#create" location="qgl.h" virtual="impure" meta="plain" const="false" static="false" overload="false" type="bool" signature="create(const QGLContext * shareContext)">
                <parameter left="const QGLContext *" right="" name="shareContext" default="0"/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="deleteTexture" fullname="QGLContext::deleteTexture" href="qglcontext.html#deleteTexture" location="qgl.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="deleteTexture(GLuint id)">
                <parameter left="GLuint" right="" name="id" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="drawTexture" fullname="QGLContext::drawTexture" href="qglcontext.html#drawTexture-2" location="qgl.h" since="4.4" virtual="non" meta="plain" const="false" static="false" overload="true" overload-number="2" type="void" signature="drawTexture(const QPointF &amp; point, GLuint textureId, GLenum textureTarget)">
                <parameter left="const QPointF &amp;" right="" name="point" default=""/>
                <parameter left="GLuint" right="" name="textureId" default=""/>
                <parameter left="GLenum" right="" name="textureTarget" default="GL_TEXTURE_2D"/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="drawTexture" fullname="QGLContext::drawTexture" href="qglcontext.html#drawTexture" location="qgl.h" since="4.4" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="drawTexture(const QRectF &amp; target, GLuint textureId, GLenum textureTarget)">
                <parameter left="const QRectF &amp;" right="" name="target" default=""/>
                <parameter left="GLuint" right="" name="textureId" default=""/>
                <parameter left="GLenum" right="" name="textureTarget" default="GL_TEXTURE_2D"/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="fromOpenGLContext" fullname="QGLContext::fromOpenGLContext" href="qglcontext.html#fromOpenGLContext" location="qgl.h" virtual="non" meta="plain" const="false" static="true" overload="false" type="QGLContext *" signature="fromOpenGLContext(QOpenGLContext * context)">
                <parameter left="QOpenGLContext *" right="" name="context" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="functions" fullname="QGLContext::functions" href="qglcontext.html#functions" location="qgl.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QGLFunctions *" signature="functions() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="moveToThread" fullname="QGLContext::moveToThread" href="qglcontext.html#moveToThread" location="qgl.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="moveToThread(QThread * thread)">
                <parameter left="QThread *" right="" name="thread" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setFormat" fullname="QGLContext::setFormat" href="qglcontext.html#setFormat" location="qgl.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setFormat(const QGLFormat &amp; format)">
                <parameter left="const QGLFormat &amp;" right="" name="format" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setTextureCacheLimit" fullname="QGLContext::setTextureCacheLimit" href="qglcontext.html#setTextureCacheLimit" location="qgl.h" virtual="non" meta="plain" const="false" static="true" overload="false" type="void" signature="setTextureCacheLimit(int size)">
                <parameter left="int" right="" name="size" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="textureCacheLimit" fullname="QGLContext::textureCacheLimit" href="qglcontext.html#textureCacheLimit" location="qgl.h" virtual="non" meta="plain" const="false" static="true" overload="false" type="int" signature="textureCacheLimit()"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="~QGLContext" fullname="QGLContext::~QGLContext" href="qglcontext.html#dtor.QGLContext" location="qgl.h" virtual="impure" meta="destructor" const="false" static="false" overload="false" type="" signature="~QGLContext()"/>
            <variable access="protected" threadsafety="unspecified" status="commendable" name="currentCtx" fullname="QGLContext::currentCtx" href="qglcontext.html#currentCtx-var" location="qgl.h" type="QGLContext *" static="true"/>
            <function access="protected" threadsafety="unspecified" status="commendable" name="chooseContext" fullname="QGLContext::chooseContext" href="qglcontext.html#chooseContext" location="qgl_qpa.cpp" virtual="impure" meta="plain" const="false" static="false" overload="false" type="bool" signature="chooseContext(const QGLContext * shareContext)">
                <parameter left="const QGLContext *" right="" name="shareContext" default="0"/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="contextHandle" fullname="QGLContext::contextHandle" href="qglcontext.html#contextHandle" location="qgl_qpa.cpp" virtual="non" meta="plain" const="true" static="false" overload="false" type="QOpenGLContext *" signature="contextHandle() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="doneCurrent" fullname="QGLContext::doneCurrent" href="qglcontext.html#doneCurrent" location="qgl_qpa.cpp" virtual="impure" meta="plain" const="false" static="false" overload="false" type="void" signature="doneCurrent()"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="getProcAddress" fullname="QGLContext::getProcAddress" href="qglcontext.html#getProcAddress" location="qgl_qpa.cpp" virtual="non" meta="plain" const="true" static="false" overload="false" type="QFunctionPointer" signature="getProcAddress(const QString &amp; proc) const">
                <parameter left="const QString &amp;" right="" name="proc" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="makeCurrent" fullname="QGLContext::makeCurrent" href="qglcontext.html#makeCurrent" location="qgl_qpa.cpp" virtual="impure" meta="plain" const="false" static="false" overload="false" type="void" signature="makeCurrent()"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="overlayTransparentColor" fullname="QGLContext::overlayTransparentColor" href="qglcontext.html#overlayTransparentColor" location="qgl_qpa.cpp" virtual="non" meta="plain" const="true" static="false" overload="false" type="QColor" signature="overlayTransparentColor() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="reset" fullname="QGLContext::reset" href="qglcontext.html#reset" location="qgl_qpa.cpp" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="reset()"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="swapBuffers" fullname="QGLContext::swapBuffers" href="qglcontext.html#swapBuffers" location="qgl_qpa.cpp" virtual="impure" meta="plain" const="true" static="false" overload="false" type="void" signature="swapBuffers() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="currentContext" fullname="QGLContext::currentContext" href="qglcontext.html#currentContext" location="qglfunctions.cpp" virtual="non" meta="plain" const="false" static="true" overload="false" type="const QGLContext *" signature="currentContext()"/>
        </class>
        <class access="public" threadsafety="unspecified" status="commendable" name="QGLFormat" href="qglformat.html" location="qgl.h" bases="" module="QtOpenGL">
            <enum access="public" threadsafety="unspecified" status="commendable" name="OpenGLContextProfile" fullname="QGLFormat::OpenGLContextProfile" href="qglformat.html#OpenGLContextProfile-enum" location="qgl.h" since="4.7">
                <value name="NoProfile" value="0"/>
                <value name="CoreProfile" value="1"/>
                <value name="CompatibilityProfile" value="2"/>
            </enum>
            <enum access="public" threadsafety="unspecified" status="commendable" name="OpenGLVersionFlag" fullname="QGLFormat::OpenGLVersionFlag" href="qglformat.html#OpenGLVersionFlag-enum" location="qgl.h" since="4.2" typedef="QGLFormat::OpenGLVersionFlags">
                <value name="OpenGL_Version_None" value="0x00000000"/>
                <value name="OpenGL_Version_1_1" value="0x00000001"/>
                <value name="OpenGL_Version_1_2" value="0x00000002"/>
                <value name="OpenGL_Version_1_3" value="0x00000004"/>
                <value name="OpenGL_Version_1_4" value="0x00000008"/>
                <value name="OpenGL_Version_1_5" value="0x00000010"/>
                <value name="OpenGL_Version_2_0" value="0x00000020"/>
                <value name="OpenGL_Version_2_1" value="0x00000040"/>
                <value name="OpenGL_ES_Common_Version_1_0" value="0x00000080"/>
                <value name="OpenGL_ES_CommonLite_Version_1_0" value="0x00000100"/>
                <value name="OpenGL_ES_Common_Version_1_1" value="0x00000200"/>
                <value name="OpenGL_ES_CommonLite_Version_1_1" value="0x00000400"/>
                <value name="OpenGL_ES_Version_2_0" value="0x00000800"/>
                <value name="OpenGL_Version_3_0" value="0x00001000"/>
                <value name="OpenGL_Version_3_1" value="0x00002000"/>
                <value name="OpenGL_Version_3_2" value="0x00004000"/>
                <value name="OpenGL_Version_3_3" value="0x00008000"/>
                <value name="OpenGL_Version_4_0" value="0x00010000"/>
                <value name="OpenGL_Version_4_1" value="0x00020000"/>
                <value name="OpenGL_Version_4_2" value="0x00040000"/>
                <value name="OpenGL_Version_4_3" value="0x00080000"/>
            </enum>
            <typedef access="public" threadsafety="unspecified" status="commendable" name="OpenGLVersionFlags" fullname="QGLFormat::OpenGLVersionFlags" href="qglformat.html#OpenGLVersionFlags-typedef" location="qgl.h" enum="QGLFormat::OpenGLVersionFlag"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="QGLFormat" fullname="QGLFormat::QGLFormat" href="qglformat.html#QGLFormat" location="qgl.h" virtual="non" meta="constructor" const="false" static="false" overload="false" type="" signature="QGLFormat()"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="QGLFormat" fullname="QGLFormat::QGLFormat" href="qglformat.html#QGLFormat-2" location="qgl.h" virtual="non" meta="constructor" const="false" static="false" overload="true" overload-number="2" type="" signature="QGLFormat(QFlags&lt;QGL::FormatOption&gt; options, int plane)">
                <parameter left="QFlags&lt;QGL::FormatOption&gt;" right="" name="options" default=""/>
                <parameter left="int" right="" name="plane" default="0"/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="QGLFormat" fullname="QGLFormat::QGLFormat" href="qglformat.html#QGLFormat-3" location="qgl.h" virtual="non" meta="constructor" const="false" static="false" overload="true" overload-number="3" type="" signature="QGLFormat(const QGLFormat &amp; other)">
                <parameter left="const QGLFormat &amp;" right="" name="other" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="accum" fullname="QGLFormat::accum" href="qglformat.html#accum" location="qgl.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="bool" signature="accum() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="accumBufferSize" fullname="QGLFormat::accumBufferSize" href="qglformat.html#accumBufferSize" location="qgl.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="int" signature="accumBufferSize() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="alpha" fullname="QGLFormat::alpha" href="qglformat.html#alpha" location="qgl.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="bool" signature="alpha() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="alphaBufferSize" fullname="QGLFormat::alphaBufferSize" href="qglformat.html#alphaBufferSize" location="qgl.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="int" signature="alphaBufferSize() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="blueBufferSize" fullname="QGLFormat::blueBufferSize" href="qglformat.html#blueBufferSize" location="qgl.h" since="4.2" virtual="non" meta="plain" const="true" static="false" overload="false" type="int" signature="blueBufferSize() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="defaultFormat" fullname="QGLFormat::defaultFormat" href="qglformat.html#defaultFormat" location="qgl.h" virtual="non" meta="plain" const="false" static="true" overload="false" type="QGLFormat" signature="defaultFormat()"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="depth" fullname="QGLFormat::depth" href="qglformat.html#depth" location="qgl.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="bool" signature="depth() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="depthBufferSize" fullname="QGLFormat::depthBufferSize" href="qglformat.html#depthBufferSize" location="qgl.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="int" signature="depthBufferSize() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="directRendering" fullname="QGLFormat::directRendering" href="qglformat.html#directRendering" location="qgl.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="bool" signature="directRendering() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="doubleBuffer" fullname="QGLFormat::doubleBuffer" href="qglformat.html#doubleBuffer" location="qgl.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="bool" signature="doubleBuffer() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="fromSurfaceFormat" fullname="QGLFormat::fromSurfaceFormat" href="qglformat.html#fromSurfaceFormat" location="qgl.h" virtual="non" meta="plain" const="false" static="true" overload="false" type="QGLFormat" signature="fromSurfaceFormat(const QSurfaceFormat &amp; format)">
                <parameter left="const QSurfaceFormat &amp;" right="" name="format" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="greenBufferSize" fullname="QGLFormat::greenBufferSize" href="qglformat.html#greenBufferSize" location="qgl.h" since="4.2" virtual="non" meta="plain" const="true" static="false" overload="false" type="int" signature="greenBufferSize() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="hasOverlay" fullname="QGLFormat::hasOverlay" href="qglformat.html#hasOverlay" location="qgl.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="bool" signature="hasOverlay() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="majorVersion" fullname="QGLFormat::majorVersion" href="qglformat.html#majorVersion" location="qgl.h" since="4.7" virtual="non" meta="plain" const="true" static="false" overload="false" type="int" signature="majorVersion() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="minorVersion" fullname="QGLFormat::minorVersion" href="qglformat.html#minorVersion" location="qgl.h" since="4.7" virtual="non" meta="plain" const="true" static="false" overload="false" type="int" signature="minorVersion() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="openGLVersionFlags" fullname="QGLFormat::openGLVersionFlags" href="qglformat.html#openGLVersionFlags" location="qgl.h" since="4.2" virtual="non" meta="plain" const="false" static="true" overload="false" type="OpenGLVersionFlags" signature="openGLVersionFlags()"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="operator=" fullname="QGLFormat::operator=" href="qglformat.html#operator=" location="qgl.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="QGLFormat &amp;" signature="operator=(const QGLFormat &amp; other)">
                <parameter left="const QGLFormat &amp;" right="" name="other" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="plane" fullname="QGLFormat::plane" href="qglformat.html#plane" location="qgl.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="int" signature="plane() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="profile" fullname="QGLFormat::profile" href="qglformat.html#profile" location="qgl.h" since="4.7" virtual="non" meta="plain" const="true" static="false" overload="false" type="OpenGLContextProfile" signature="profile() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="redBufferSize" fullname="QGLFormat::redBufferSize" href="qglformat.html#redBufferSize" location="qgl.h" since="4.2" virtual="non" meta="plain" const="true" static="false" overload="false" type="int" signature="redBufferSize() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="rgba" fullname="QGLFormat::rgba" href="qglformat.html#rgba" location="qgl.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="bool" signature="rgba() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="sampleBuffers" fullname="QGLFormat::sampleBuffers" href="qglformat.html#sampleBuffers" location="qgl.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="bool" signature="sampleBuffers() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="samples" fullname="QGLFormat::samples" href="qglformat.html#samples" location="qgl.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="int" signature="samples() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="setAccum" fullname="QGLFormat::setAccum" href="qglformat.html#setAccum" location="qgl.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setAccum(bool enable)">
                <parameter left="bool" right="" name="enable" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setAccumBufferSize" fullname="QGLFormat::setAccumBufferSize" href="qglformat.html#setAccumBufferSize" location="qgl.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setAccumBufferSize(int size)">
                <parameter left="int" right="" name="size" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setAlpha" fullname="QGLFormat::setAlpha" href="qglformat.html#setAlpha" location="qgl.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setAlpha(bool enable)">
                <parameter left="bool" right="" name="enable" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setAlphaBufferSize" fullname="QGLFormat::setAlphaBufferSize" href="qglformat.html#setAlphaBufferSize" location="qgl.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setAlphaBufferSize(int size)">
                <parameter left="int" right="" name="size" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setBlueBufferSize" fullname="QGLFormat::setBlueBufferSize" href="qglformat.html#setBlueBufferSize" location="qgl.h" since="4.2" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setBlueBufferSize(int size)">
                <parameter left="int" right="" name="size" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setDefaultFormat" fullname="QGLFormat::setDefaultFormat" href="qglformat.html#setDefaultFormat" location="qgl.h" virtual="non" meta="plain" const="false" static="true" overload="false" type="void" signature="setDefaultFormat(const QGLFormat &amp; f)">
                <parameter left="const QGLFormat &amp;" right="" name="f" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setDefaultOverlayFormat" fullname="QGLFormat::setDefaultOverlayFormat" href="qglformat.html#setDefaultOverlayFormat" location="qgl.h" virtual="non" meta="plain" const="false" static="true" overload="false" type="void" signature="setDefaultOverlayFormat(const QGLFormat &amp; f)">
                <parameter left="const QGLFormat &amp;" right="" name="f" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setDepth" fullname="QGLFormat::setDepth" href="qglformat.html#setDepth" location="qgl.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setDepth(bool enable)">
                <parameter left="bool" right="" name="enable" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setDepthBufferSize" fullname="QGLFormat::setDepthBufferSize" href="qglformat.html#setDepthBufferSize" location="qgl.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setDepthBufferSize(int size)">
                <parameter left="int" right="" name="size" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setDirectRendering" fullname="QGLFormat::setDirectRendering" href="qglformat.html#setDirectRendering" location="qgl.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setDirectRendering(bool enable)">
                <parameter left="bool" right="" name="enable" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setDoubleBuffer" fullname="QGLFormat::setDoubleBuffer" href="qglformat.html#setDoubleBuffer" location="qgl.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setDoubleBuffer(bool enable)">
                <parameter left="bool" right="" name="enable" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setGreenBufferSize" fullname="QGLFormat::setGreenBufferSize" href="qglformat.html#setGreenBufferSize" location="qgl.h" since="4.2" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setGreenBufferSize(int size)">
                <parameter left="int" right="" name="size" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setOption" fullname="QGLFormat::setOption" href="qglformat.html#setOption" location="qgl.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setOption(QFlags&lt;QGL::FormatOption&gt; opt)">
                <parameter left="QFlags&lt;QGL::FormatOption&gt;" right="" name="opt" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setOverlay" fullname="QGLFormat::setOverlay" href="qglformat.html#setOverlay" location="qgl.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setOverlay(bool enable)">
                <parameter left="bool" right="" name="enable" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setPlane" fullname="QGLFormat::setPlane" href="qglformat.html#setPlane" location="qgl.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setPlane(int plane)">
                <parameter left="int" right="" name="plane" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setProfile" fullname="QGLFormat::setProfile" href="qglformat.html#setProfile" location="qgl.h" since="4.7" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setProfile(OpenGLContextProfile profile)">
                <parameter left="OpenGLContextProfile" right="" name="profile" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setRedBufferSize" fullname="QGLFormat::setRedBufferSize" href="qglformat.html#setRedBufferSize" location="qgl.h" since="4.2" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setRedBufferSize(int size)">
                <parameter left="int" right="" name="size" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setRgba" fullname="QGLFormat::setRgba" href="qglformat.html#setRgba" location="qgl.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setRgba(bool enable)">
                <parameter left="bool" right="" name="enable" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setSampleBuffers" fullname="QGLFormat::setSampleBuffers" href="qglformat.html#setSampleBuffers" location="qgl.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setSampleBuffers(bool enable)">
                <parameter left="bool" right="" name="enable" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setSamples" fullname="QGLFormat::setSamples" href="qglformat.html#setSamples" location="qgl.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setSamples(int numSamples)">
                <parameter left="int" right="" name="numSamples" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setStencil" fullname="QGLFormat::setStencil" href="qglformat.html#setStencil" location="qgl.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setStencil(bool enable)">
                <parameter left="bool" right="" name="enable" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setStencilBufferSize" fullname="QGLFormat::setStencilBufferSize" href="qglformat.html#setStencilBufferSize" location="qgl.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setStencilBufferSize(int size)">
                <parameter left="int" right="" name="size" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setStereo" fullname="QGLFormat::setStereo" href="qglformat.html#setStereo" location="qgl.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setStereo(bool enable)">
                <parameter left="bool" right="" name="enable" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setSwapInterval" fullname="QGLFormat::setSwapInterval" href="qglformat.html#setSwapInterval" location="qgl.h" since="4.2" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setSwapInterval(int interval)">
                <parameter left="int" right="" name="interval" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setVersion" fullname="QGLFormat::setVersion" href="qglformat.html#setVersion" location="qgl.h" since="4.7" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setVersion(int major, int minor)">
                <parameter left="int" right="" name="major" default=""/>
                <parameter left="int" right="" name="minor" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="stencil" fullname="QGLFormat::stencil" href="qglformat.html#stencil" location="qgl.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="bool" signature="stencil() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="stencilBufferSize" fullname="QGLFormat::stencilBufferSize" href="qglformat.html#stencilBufferSize" location="qgl.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="int" signature="stencilBufferSize() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="stereo" fullname="QGLFormat::stereo" href="qglformat.html#stereo" location="qgl.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="bool" signature="stereo() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="swapInterval" fullname="QGLFormat::swapInterval" href="qglformat.html#swapInterval" location="qgl.h" since="4.2" virtual="non" meta="plain" const="true" static="false" overload="false" type="int" signature="swapInterval() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="testOption" fullname="QGLFormat::testOption" href="qglformat.html#testOption" location="qgl.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="bool" signature="testOption(QFlags&lt;QGL::FormatOption&gt; opt) const">
                <parameter left="QFlags&lt;QGL::FormatOption&gt;" right="" name="opt" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="toSurfaceFormat" fullname="QGLFormat::toSurfaceFormat" href="qglformat.html#toSurfaceFormat" location="qgl.h" virtual="non" meta="plain" const="false" static="true" overload="false" type="QSurfaceFormat" signature="toSurfaceFormat(const QGLFormat &amp; format)">
                <parameter left="const QGLFormat &amp;" right="" name="format" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="~QGLFormat" fullname="QGLFormat::~QGLFormat" href="qglformat.html#dtor.QGLFormat" location="qgl.h" virtual="non" meta="destructor" const="false" static="false" overload="false" type="" signature="~QGLFormat()"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="hasOpenGL" fullname="QGLFormat::hasOpenGL" href="qglformat.html#hasOpenGL" location="qgl_qpa.cpp" virtual="non" meta="plain" const="false" static="true" overload="false" type="bool" signature="hasOpenGL()"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="hasOpenGLOverlays" fullname="QGLFormat::hasOpenGLOverlays" href="qglformat.html#hasOpenGLOverlays" location="qgl_qpa.cpp" virtual="non" meta="plain" const="false" static="true" overload="false" type="bool" signature="hasOpenGLOverlays()"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="defaultOverlayFormat" fullname="QGLFormat::defaultOverlayFormat" href="qglformat.html#defaultOverlayFormat" location="src_opengl_qgl.cpp" virtual="non" meta="plain" const="false" static="true" overload="false" type="QGLFormat" signature="defaultOverlayFormat()"/>
        </class>
        <class access="public" threadsafety="unspecified" status="commendable" name="QGLWidget" href="qglwidget.html" location="qgl.h" bases="QWidget" module="QtOpenGL">
            <contents name="overlays" title="Overlays" level="1"/>
            <contents name="painting-techniques" title="Painting Techniques" level="1"/>
            <contents name="threading" title="Threading" level="1"/>
            <function access="protected" threadsafety="unspecified" status="commendable" name="autoBufferSwap" fullname="QGLWidget::autoBufferSwap" href="qglwidget.html#autoBufferSwap" location="qgl.cpp" virtual="non" meta="plain" const="true" static="false" overload="false" type="bool" signature="autoBufferSwap() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="context" fullname="QGLWidget::context" href="qglwidget.html#context" location="qgl.cpp" virtual="non" meta="plain" const="true" static="false" overload="false" type="QGLContext *" signature="context() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="doneCurrent" fullname="QGLWidget::doneCurrent" href="qglwidget.html#doneCurrent" location="qgl.cpp" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="doneCurrent()"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="doubleBuffer" fullname="QGLWidget::doubleBuffer" href="qglwidget.html#doubleBuffer" location="qgl.cpp" virtual="non" meta="plain" const="true" static="false" overload="false" type="bool" signature="doubleBuffer() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="format" fullname="QGLWidget::format" href="qglwidget.html#format" location="qgl.cpp" virtual="non" meta="plain" const="true" static="false" overload="false" type="QGLFormat" signature="format() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="isSharing" fullname="QGLWidget::isSharing" href="qglwidget.html#isSharing" location="qgl.cpp" virtual="non" meta="plain" const="true" static="false" overload="false" type="bool" signature="isSharing() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="isValid" fullname="QGLWidget::isValid" href="qglwidget.html#isValid" location="qgl.cpp" virtual="non" meta="plain" const="true" static="false" overload="false" type="bool" signature="isValid() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="makeCurrent" fullname="QGLWidget::makeCurrent" href="qglwidget.html#makeCurrent" location="qgl.cpp" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="makeCurrent()"/>
            <function access="protected" threadsafety="unspecified" status="commendable" name="paintEvent" fullname="QGLWidget::paintEvent" href="qglwidget.html#paintEvent" location="qgl.cpp" virtual="impure" meta="plain" const="false" static="false" overload="false" type="void" signature="paintEvent(QPaintEvent * event)">
                <parameter left="QPaintEvent *" right="" name="event" default=""/>
            </function>
            <function access="protected" threadsafety="unspecified" status="commendable" name="resizeGL" fullname="QGLWidget::resizeGL" href="qglwidget.html#resizeGL" location="qgl.cpp" virtual="impure" meta="plain" const="false" static="false" overload="false" type="void" signature="resizeGL(int width, int height)">
                <parameter left="int" right="" name="width" default=""/>
                <parameter left="int" right="" name="height" default=""/>
            </function>
            <function access="protected" threadsafety="unspecified" status="commendable" name="resizeOverlayGL" fullname="QGLWidget::resizeOverlayGL" href="qglwidget.html#resizeOverlayGL" location="qgl.cpp" virtual="impure" meta="plain" const="false" static="false" overload="false" type="void" signature="resizeOverlayGL(int width, int height)">
                <parameter left="int" right="" name="width" default=""/>
                <parameter left="int" right="" name="height" default=""/>
            </function>
            <function access="protected" threadsafety="unspecified" status="commendable" name="setAutoBufferSwap" fullname="QGLWidget::setAutoBufferSwap" href="qglwidget.html#setAutoBufferSwap" location="qgl.cpp" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setAutoBufferSwap(bool on)">
                <parameter left="bool" right="" name="on" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="swapBuffers" fullname="QGLWidget::swapBuffers" href="qglwidget.html#swapBuffers" location="qgl.cpp" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="swapBuffers()"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="updateGL" fullname="QGLWidget::updateGL" href="qglwidget.html#updateGL" location="qgl.cpp" virtual="impure" meta="slot" const="false" static="false" overload="false" type="void" signature="updateGL()"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="QGLWidget" fullname="QGLWidget::QGLWidget" href="qglwidget.html#QGLWidget-2" location="qgl.h" virtual="non" meta="constructor" const="false" static="false" overload="true" overload-number="2" type="" signature="QGLWidget(QGLContext * context, QWidget * parent, const QGLWidget * shareWidget, Qt::WindowFlags f)">
                <parameter left="QGLContext *" right="" name="context" default=""/>
                <parameter left="QWidget *" right="" name="parent" default="0"/>
                <parameter left="const QGLWidget *" right="" name="shareWidget" default="0"/>
                <parameter left="Qt::WindowFlags" right="" name="f" default="0"/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="QGLWidget" fullname="QGLWidget::QGLWidget" href="qglwidget.html#QGLWidget" location="qgl.h" virtual="non" meta="constructor" const="false" static="false" overload="false" type="" signature="QGLWidget(QWidget * parent, const QGLWidget * shareWidget, Qt::WindowFlags f)">
                <parameter left="QWidget *" right="" name="parent" default="0"/>
                <parameter left="const QGLWidget *" right="" name="shareWidget" default="0"/>
                <parameter left="Qt::WindowFlags" right="" name="f" default="0"/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="QGLWidget" fullname="QGLWidget::QGLWidget" href="qglwidget.html#QGLWidget-3" location="qgl.h" virtual="non" meta="constructor" const="false" static="false" overload="true" overload-number="3" type="" signature="QGLWidget(const QGLFormat &amp; format, QWidget * parent, const QGLWidget * shareWidget, Qt::WindowFlags f)">
                <parameter left="const QGLFormat &amp;" right="" name="format" default=""/>
                <parameter left="QWidget *" right="" name="parent" default="0"/>
                <parameter left="const QGLWidget *" right="" name="shareWidget" default="0"/>
                <parameter left="Qt::WindowFlags" right="" name="f" default="0"/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="bindTexture" fullname="QGLWidget::bindTexture" href="qglwidget.html#bindTexture" location="qgl.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="GLuint" signature="bindTexture(const QImage &amp; image, GLenum target, GLint format)">
                <parameter left="const QImage &amp;" right="" name="image" default=""/>
                <parameter left="GLenum" right="" name="target" default="GL_TEXTURE_2D"/>
                <parameter left="GLint" right="" name="format" default="GL_RGBA"/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="bindTexture" fullname="QGLWidget::bindTexture" href="qglwidget.html#bindTexture-3" location="qgl.h" since="4.6" virtual="non" meta="plain" const="false" static="false" overload="true" overload-number="3" type="GLuint" signature="bindTexture(const QImage &amp; image, GLenum target, GLint format, QFlags&lt;QGLContext::BindOption&gt; options)">
                <parameter left="const QImage &amp;" right="" name="image" default=""/>
                <parameter left="GLenum" right="" name="target" default=""/>
                <parameter left="GLint" right="" name="format" default=""/>
                <parameter left="QFlags&lt;QGLContext::BindOption&gt;" right="" name="options" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="bindTexture" fullname="QGLWidget::bindTexture" href="qglwidget.html#bindTexture-2" location="qgl.h" virtual="non" meta="plain" const="false" static="false" overload="true" overload-number="2" type="GLuint" signature="bindTexture(const QPixmap &amp; pixmap, GLenum target, GLint format)">
                <parameter left="const QPixmap &amp;" right="" name="pixmap" default=""/>
                <parameter left="GLenum" right="" name="target" default="GL_TEXTURE_2D"/>
                <parameter left="GLint" right="" name="format" default="GL_RGBA"/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="bindTexture" fullname="QGLWidget::bindTexture" href="qglwidget.html#bindTexture-4" location="qgl.h" since="4.6" virtual="non" meta="plain" const="false" static="false" overload="true" overload-number="4" type="GLuint" signature="bindTexture(const QPixmap &amp; pixmap, GLenum target, GLint format, QFlags&lt;QGLContext::BindOption&gt; options)">
                <parameter left="const QPixmap &amp;" right="" name="pixmap" default=""/>
                <parameter left="GLenum" right="" name="target" default=""/>
                <parameter left="GLint" right="" name="format" default=""/>
                <parameter left="QFlags&lt;QGLContext::BindOption&gt;" right="" name="options" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="bindTexture" fullname="QGLWidget::bindTexture" href="qglwidget.html#bindTexture-5" location="qgl.h" virtual="non" meta="plain" const="false" static="false" overload="true" overload-number="5" type="GLuint" signature="bindTexture(const QString &amp; fileName)">
                <parameter left="const QString &amp;" right="" name="fileName" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="convertToGLFormat" fullname="QGLWidget::convertToGLFormat" href="qglwidget.html#convertToGLFormat" location="qgl.h" virtual="non" meta="plain" const="false" static="true" overload="false" type="QImage" signature="convertToGLFormat(const QImage &amp; img)">
                <parameter left="const QImage &amp;" right="" name="img" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="deleteTexture" fullname="QGLWidget::deleteTexture" href="qglwidget.html#deleteTexture" location="qgl.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="deleteTexture(GLuint id)">
                <parameter left="GLuint" right="" name="id" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="drawTexture" fullname="QGLWidget::drawTexture" href="qglwidget.html#drawTexture-2" location="qgl.h" since="4.4" virtual="non" meta="plain" const="false" static="false" overload="true" overload-number="2" type="void" signature="drawTexture(const QPointF &amp; point, GLuint textureId, GLenum textureTarget)">
                <parameter left="const QPointF &amp;" right="" name="point" default=""/>
                <parameter left="GLuint" right="" name="textureId" default=""/>
                <parameter left="GLenum" right="" name="textureTarget" default="GL_TEXTURE_2D"/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="drawTexture" fullname="QGLWidget::drawTexture" href="qglwidget.html#drawTexture" location="qgl.h" since="4.4" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="drawTexture(const QRectF &amp; target, GLuint textureId, GLenum textureTarget)">
                <parameter left="const QRectF &amp;" right="" name="target" default=""/>
                <parameter left="GLuint" right="" name="textureId" default=""/>
                <parameter left="GLenum" right="" name="textureTarget" default="GL_TEXTURE_2D"/>
            </function>
            <function access="protected" threadsafety="unspecified" status="commendable" name="glDraw" fullname="QGLWidget::glDraw" href="qglwidget.html#glDraw" location="qgl.h" virtual="impure" meta="plain" const="false" static="false" overload="false" type="void" signature="glDraw()"/>
            <function access="protected" threadsafety="unspecified" status="commendable" name="glInit" fullname="QGLWidget::glInit" href="qglwidget.html#glInit" location="qgl.h" virtual="impure" meta="plain" const="false" static="false" overload="false" type="void" signature="glInit()"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="grabFrameBuffer" fullname="QGLWidget::grabFrameBuffer" href="qglwidget.html#grabFrameBuffer" location="qgl.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="QImage" signature="grabFrameBuffer(bool withAlpha)">
                <parameter left="bool" right="" name="withAlpha" default="false"/>
            </function>
            <function access="protected" threadsafety="unspecified" status="commendable" name="initializeGL" fullname="QGLWidget::initializeGL" href="qglwidget.html#initializeGL" location="qgl.h" virtual="impure" meta="plain" const="false" static="false" overload="false" type="void" signature="initializeGL()"/>
            <function access="protected" threadsafety="unspecified" status="commendable" name="initializeOverlayGL" fullname="QGLWidget::initializeOverlayGL" href="qglwidget.html#initializeOverlayGL" location="qgl.h" virtual="impure" meta="plain" const="false" static="false" overload="false" type="void" signature="initializeOverlayGL()"/>
            <function access="protected" threadsafety="unspecified" status="commendable" name="paintGL" fullname="QGLWidget::paintGL" href="qglwidget.html#paintGL" location="qgl.h" virtual="impure" meta="plain" const="false" static="false" overload="false" type="void" signature="paintGL()"/>
            <function access="protected" threadsafety="unspecified" status="commendable" name="paintOverlayGL" fullname="QGLWidget::paintOverlayGL" href="qglwidget.html#paintOverlayGL" location="qgl.h" virtual="impure" meta="plain" const="false" static="false" overload="false" type="void" signature="paintOverlayGL()"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="qglClearColor" fullname="QGLWidget::qglClearColor" href="qglwidget.html#qglClearColor" location="qgl.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="void" signature="qglClearColor(const QColor &amp; c) const">
                <parameter left="const QColor &amp;" right="" name="c" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="qglColor" fullname="QGLWidget::qglColor" href="qglwidget.html#qglColor" location="qgl.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="void" signature="qglColor(const QColor &amp; c) const">
                <parameter left="const QColor &amp;" right="" name="c" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="renderPixmap" fullname="QGLWidget::renderPixmap" href="qglwidget.html#renderPixmap" location="qgl.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="QPixmap" signature="renderPixmap(int w, int h, bool useContext)">
                <parameter left="int" right="" name="w" default="0"/>
                <parameter left="int" right="" name="h" default="0"/>
                <parameter left="bool" right="" name="useContext" default="false"/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="renderText" fullname="QGLWidget::renderText" href="qglwidget.html#renderText-2" location="qgl.h" virtual="non" meta="plain" const="false" static="false" overload="true" overload-number="2" type="void" signature="renderText(double x, double y, double z, const QString &amp; str, const QFont &amp; font)">
                <parameter left="double" right="" name="x" default=""/>
                <parameter left="double" right="" name="y" default=""/>
                <parameter left="double" right="" name="z" default=""/>
                <parameter left="const QString &amp;" right="" name="str" default=""/>
                <parameter left="const QFont &amp;" right="" name="font" default="QFont()"/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="renderText" fullname="QGLWidget::renderText" href="qglwidget.html#renderText" location="qgl.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="renderText(int x, int y, const QString &amp; str, const QFont &amp; font)">
                <parameter left="int" right="" name="x" default=""/>
                <parameter left="int" right="" name="y" default=""/>
                <parameter left="const QString &amp;" right="" name="str" default=""/>
                <parameter left="const QFont &amp;" right="" name="font" default="QFont()"/>
            </function>
            <function access="public" threadsafety="unspecified" status="obsolete" name="setFormat" fullname="QGLWidget::setFormat" href="qglwidget-obsolete.html#setFormat" location="qgl.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setFormat(const QGLFormat &amp; format)">
                <parameter left="const QGLFormat &amp;" right="" name="format" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="~QGLWidget" fullname="QGLWidget::~QGLWidget" href="qglwidget.html#dtor.QGLWidget" location="qgl.h" virtual="non" meta="destructor" const="false" static="false" overload="false" type="" signature="~QGLWidget()"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="colormap" fullname="QGLWidget::colormap" href="qglwidget.html#colormap" location="qgl_qpa.cpp" virtual="non" meta="plain" const="true" static="false" overload="false" type="const QGLColormap &amp;" signature="colormap() const"/>
            <function access="protected" threadsafety="unspecified" status="commendable" name="event" fullname="QGLWidget::event" href="qglwidget.html#event" location="qgl_qpa.cpp" virtual="impure" meta="plain" const="false" static="false" overload="false" type="bool" signature="event(QEvent * )">
                <parameter left="QEvent *" right="" name="" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="makeOverlayCurrent" fullname="QGLWidget::makeOverlayCurrent" href="qglwidget.html#makeOverlayCurrent" location="qgl_qpa.cpp" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="makeOverlayCurrent()"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="overlayContext" fullname="QGLWidget::overlayContext" href="qglwidget.html#overlayContext" location="qgl_qpa.cpp" virtual="non" meta="plain" const="true" static="false" overload="false" type="const QGLContext *" signature="overlayContext() const"/>
            <function access="protected" threadsafety="unspecified" status="commendable" name="resizeEvent" fullname="QGLWidget::resizeEvent" href="qglwidget.html#resizeEvent" location="qgl_qpa.cpp" virtual="impure" meta="plain" const="false" static="false" overload="false" type="void" signature="resizeEvent(QResizeEvent * event)">
                <parameter left="QResizeEvent *" right="" name="event" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setColormap" fullname="QGLWidget::setColormap" href="qglwidget.html#setColormap" location="qgl_qpa.cpp" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setColormap(const QGLColormap &amp; cmap)">
                <parameter left="const QGLColormap &amp;" right="" name="cmap" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setContext" fullname="QGLWidget::setContext" href="qglwidget.html#setContext" location="qgl_qpa.cpp" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setContext(QGLContext * context, const QGLContext * shareContext, bool deleteOldContext)">
                <parameter left="QGLContext *" right="" name="context" default=""/>
                <parameter left="const QGLContext *" right="" name="shareContext" default="0"/>
                <parameter left="bool" right="" name="deleteOldContext" default="true"/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="updateOverlayGL" fullname="QGLWidget::updateOverlayGL" href="qglwidget.html#updateOverlayGL" location="qgl_qpa.cpp" virtual="impure" meta="slot" const="false" static="false" overload="false" type="void" signature="updateOverlayGL()"/>
        </class>
        <function access="public" threadsafety="unspecified" status="commendable" name="operator!=" href="qglformat.html#operator!=-34" location="qgl.h" virtual="non" meta="plain" const="false" static="false" overload="true" overload-number="34" relates="QGLFormat" type="bool" signature="operator!=(const QGLFormat &amp; a, const QGLFormat &amp; b)">
            <parameter left="const QGLFormat &amp;" right="" name="a" default=""/>
            <parameter left="const QGLFormat &amp;" right="" name="b" default=""/>
        </function>
        <function access="public" threadsafety="unspecified" status="commendable" name="operator==" href="qglformat.html#operator==-37" location="qgl.h" virtual="non" meta="plain" const="false" static="false" overload="true" overload-number="37" relates="QGLFormat" type="bool" signature="operator==(const QGLFormat &amp; a, const QGLFormat &amp; b)">
            <parameter left="const QGLFormat &amp;" right="" name="a" default=""/>
            <parameter left="const QGLFormat &amp;" right="" name="b" default=""/>
        </function>
        <class access="public" threadsafety="unspecified" status="obsolete" name="QGLBuffer" href="qglbuffer.html" location="qglbuffer.h" since="4.7" bases="" module="QtOpenGL" groups="painting-3D">
            <enum access="public" threadsafety="unspecified" status="commendable" name="Access" fullname="QGLBuffer::Access" href="qglbuffer.html#Access-enum" location="qglbuffer.h">
                <value name="ReadOnly" value="0x88B8"/>
                <value name="WriteOnly" value="0x88B9"/>
                <value name="ReadWrite" value="0x88BA"/>
            </enum>
            <enum access="public" threadsafety="unspecified" status="commendable" name="Type" fullname="QGLBuffer::Type" href="qglbuffer.html#Type-enum" location="qglbuffer.h">
                <value name="VertexBuffer" value="0x8892"/>
                <value name="IndexBuffer" value="0x8893"/>
                <value name="PixelPackBuffer" value="0x88EB"/>
                <value name="PixelUnpackBuffer" value="0x88EC"/>
            </enum>
            <enum access="public" threadsafety="unspecified" status="commendable" name="UsagePattern" fullname="QGLBuffer::UsagePattern" href="qglbuffer.html#UsagePattern-enum" location="qglbuffer.h">
                <value name="StreamDraw" value="0x88E0"/>
                <value name="StreamRead" value="0x88E1"/>
                <value name="StreamCopy" value="0x88E2"/>
                <value name="StaticDraw" value="0x88E4"/>
                <value name="StaticRead" value="0x88E5"/>
                <value name="StaticCopy" value="0x88E6"/>
                <value name="DynamicDraw" value="0x88E8"/>
                <value name="DynamicRead" value="0x88E9"/>
                <value name="DynamicCopy" value="0x88EA"/>
            </enum>
            <function access="public" threadsafety="unspecified" status="commendable" name="QGLBuffer" fullname="QGLBuffer::QGLBuffer" href="qglbuffer.html#QGLBuffer" location="qglbuffer.h" virtual="non" meta="constructor" const="false" static="false" overload="false" type="" signature="QGLBuffer()"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="QGLBuffer" fullname="QGLBuffer::QGLBuffer" href="qglbuffer.html#QGLBuffer-2" location="qglbuffer.h" virtual="non" meta="constructor" const="false" static="false" overload="true" overload-number="2" type="" signature="QGLBuffer(QGLBuffer::Type type)">
                <parameter left="QGLBuffer::Type" right="" name="type" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="QGLBuffer" fullname="QGLBuffer::QGLBuffer" href="qglbuffer.html#QGLBuffer-3" location="qglbuffer.h" virtual="non" meta="constructor" const="false" static="false" overload="true" overload-number="3" type="" signature="QGLBuffer(const QGLBuffer &amp; other)">
                <parameter left="const QGLBuffer &amp;" right="" name="other" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="allocate" fullname="QGLBuffer::allocate" href="qglbuffer.html#allocate" location="qglbuffer.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="allocate(const void * data, int count)">
                <parameter left="const void *" right="" name="data" default=""/>
                <parameter left="int" right="" name="count" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="allocate" fullname="QGLBuffer::allocate" href="qglbuffer.html#allocate-2" location="qglbuffer.h" virtual="non" meta="plain" const="false" static="false" overload="true" overload-number="2" type="void" signature="allocate(int count)">
                <parameter left="int" right="" name="count" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="bind" fullname="QGLBuffer::bind" href="qglbuffer.html#bind" location="qglbuffer.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="bool" signature="bind()"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="bufferId" fullname="QGLBuffer::bufferId" href="qglbuffer.html#bufferId" location="qglbuffer.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="GLuint" signature="bufferId() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="create" fullname="QGLBuffer::create" href="qglbuffer.html#create" location="qglbuffer.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="bool" signature="create()"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="destroy" fullname="QGLBuffer::destroy" href="qglbuffer.html#destroy" location="qglbuffer.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="destroy()"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="isCreated" fullname="QGLBuffer::isCreated" href="qglbuffer.html#isCreated" location="qglbuffer.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="bool" signature="isCreated() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="map" fullname="QGLBuffer::map" href="qglbuffer.html#map" location="qglbuffer.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void *" signature="map(QGLBuffer::Access access)">
                <parameter left="QGLBuffer::Access" right="" name="access" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="operator=" fullname="QGLBuffer::operator=" href="qglbuffer.html#operator=" location="qglbuffer.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="QGLBuffer &amp;" signature="operator=(const QGLBuffer &amp; other)">
                <parameter left="const QGLBuffer &amp;" right="" name="other" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="read" fullname="QGLBuffer::read" href="qglbuffer.html#read" location="qglbuffer.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="bool" signature="read(int offset, void * data, int count)">
                <parameter left="int" right="" name="offset" default=""/>
                <parameter left="void *" right="" name="data" default=""/>
                <parameter left="int" right="" name="count" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="release" fullname="QGLBuffer::release" href="qglbuffer.html#release" location="qglbuffer.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="release()"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="release" fullname="QGLBuffer::release" href="qglbuffer.html#release-2" location="qglbuffer.h" virtual="non" meta="plain" const="false" static="true" overload="true" overload-number="2" type="void" signature="release(QGLBuffer::Type type)">
                <parameter left="QGLBuffer::Type" right="" name="type" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setUsagePattern" fullname="QGLBuffer::setUsagePattern" href="qglbuffer.html#setUsagePattern" location="qglbuffer.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setUsagePattern(QGLBuffer::UsagePattern value)">
                <parameter left="QGLBuffer::UsagePattern" right="" name="value" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="size" fullname="QGLBuffer::size" href="qglbuffer.html#size" location="qglbuffer.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="int" signature="size() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="type" fullname="QGLBuffer::type" href="qglbuffer.html#type" location="qglbuffer.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QGLBuffer::Type" signature="type() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="unmap" fullname="QGLBuffer::unmap" href="qglbuffer.html#unmap" location="qglbuffer.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="bool" signature="unmap()"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="usagePattern" fullname="QGLBuffer::usagePattern" href="qglbuffer.html#usagePattern" location="qglbuffer.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QGLBuffer::UsagePattern" signature="usagePattern() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="write" fullname="QGLBuffer::write" href="qglbuffer.html#write" location="qglbuffer.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="write(int offset, const void * data, int count)">
                <parameter left="int" right="" name="offset" default=""/>
                <parameter left="const void *" right="" name="data" default=""/>
                <parameter left="int" right="" name="count" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="~QGLBuffer" fullname="QGLBuffer::~QGLBuffer" href="qglbuffer.html#dtor.QGLBuffer" location="qglbuffer.h" virtual="non" meta="destructor" const="false" static="false" overload="false" type="" signature="~QGLBuffer()"/>
        </class>
        <class access="public" threadsafety="unspecified" status="obsolete" name="QGLColormap" href="qglcolormap.html" location="qglcolormap.h" bases="" module="OpenGL" groups="painting-3D,shared">
            <function access="public" threadsafety="unspecified" status="commendable" name="QGLColormap" fullname="QGLColormap::QGLColormap" href="qglcolormap.html#QGLColormap" location="qglcolormap.h" virtual="non" meta="constructor" const="false" static="false" overload="false" type="" signature="QGLColormap()"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="QGLColormap" fullname="QGLColormap::QGLColormap" href="qglcolormap.html#QGLColormap-2" location="qglcolormap.h" virtual="non" meta="constructor" const="false" static="false" overload="true" overload-number="2" type="" signature="QGLColormap(const QGLColormap &amp; map)">
                <parameter left="const QGLColormap &amp;" right="" name="map" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="entryColor" fullname="QGLColormap::entryColor" href="qglcolormap.html#entryColor" location="qglcolormap.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QColor" signature="entryColor(int idx) const">
                <parameter left="int" right="" name="idx" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="entryRgb" fullname="QGLColormap::entryRgb" href="qglcolormap.html#entryRgb" location="qglcolormap.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QRgb" signature="entryRgb(int idx) const">
                <parameter left="int" right="" name="idx" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="find" fullname="QGLColormap::find" href="qglcolormap.html#find" location="qglcolormap.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="int" signature="find(QRgb color) const">
                <parameter left="QRgb" right="" name="color" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="findNearest" fullname="QGLColormap::findNearest" href="qglcolormap.html#findNearest" location="qglcolormap.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="int" signature="findNearest(QRgb color) const">
                <parameter left="QRgb" right="" name="color" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="isEmpty" fullname="QGLColormap::isEmpty" href="qglcolormap.html#isEmpty" location="qglcolormap.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="bool" signature="isEmpty() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="operator=" fullname="QGLColormap::operator=" href="qglcolormap.html#operator=" location="qglcolormap.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="QGLColormap &amp;" signature="operator=(const QGLColormap &amp; map)">
                <parameter left="const QGLColormap &amp;" right="" name="map" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setEntries" fullname="QGLColormap::setEntries" href="qglcolormap.html#setEntries" location="qglcolormap.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setEntries(int count, const QRgb * colors, int base)">
                <parameter left="int" right="" name="count" default=""/>
                <parameter left="const QRgb *" right="" name="colors" default=""/>
                <parameter left="int" right="" name="base" default="0"/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setEntry" fullname="QGLColormap::setEntry" href="qglcolormap.html#setEntry" location="qglcolormap.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setEntry(int idx, QRgb color)">
                <parameter left="int" right="" name="idx" default=""/>
                <parameter left="QRgb" right="" name="color" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setEntry" fullname="QGLColormap::setEntry" href="qglcolormap.html#setEntry-2" location="qglcolormap.h" virtual="non" meta="plain" const="false" static="false" overload="true" overload-number="2" type="void" signature="setEntry(int idx, const QColor &amp; color)">
                <parameter left="int" right="" name="idx" default=""/>
                <parameter left="const QColor &amp;" right="" name="color" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="size" fullname="QGLColormap::size" href="qglcolormap.html#size" location="qglcolormap.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="int" signature="size() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="~QGLColormap" fullname="QGLColormap::~QGLColormap" href="qglcolormap.html#dtor.QGLColormap" location="qglcolormap.h" virtual="non" meta="destructor" const="false" static="false" overload="false" type="" signature="~QGLColormap()"/>
        </class>
        <class access="public" threadsafety="unspecified" status="obsolete" name="QGLFramebufferObject" href="qglframebufferobject.html" location="qglframebufferobject.h" since="4.2" bases="QPaintDevice" module="QtOpenGL" groups="painting-3D">
            <contents name="threading" title="Threading" level="1"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="QGLFramebufferObject" fullname="QGLFramebufferObject::QGLFramebufferObject" href="qglframebufferobject.html#QGLFramebufferObject" location="qglframebufferobject.cpp" virtual="non" meta="constructor" const="false" static="false" overload="false" type="" signature="QGLFramebufferObject(const QSize &amp; size, GLenum target)">
                <parameter left="const QSize &amp;" right="" name="size" default=""/>
                <parameter left="GLenum" right="" name="target" default="GL_TEXTURE_2D"/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="bind" fullname="QGLFramebufferObject::bind" href="qglframebufferobject.html#bind" location="qglframebufferobject.cpp" virtual="non" meta="plain" const="false" static="false" overload="false" type="bool" signature="bind()"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="handle" fullname="QGLFramebufferObject::handle" href="qglframebufferobject.html#handle" location="qglframebufferobject.cpp" virtual="non" meta="plain" const="true" static="false" overload="false" type="GLuint" signature="handle() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="hasOpenGLFramebufferBlit" fullname="QGLFramebufferObject::hasOpenGLFramebufferBlit" href="qglframebufferobject.html#hasOpenGLFramebufferBlit" location="qglframebufferobject.cpp" since="4.6" virtual="non" meta="plain" const="false" static="true" overload="false" type="bool" signature="hasOpenGLFramebufferBlit()"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="hasOpenGLFramebufferObjects" fullname="QGLFramebufferObject::hasOpenGLFramebufferObjects" href="qglframebufferobject.html#hasOpenGLFramebufferObjects" location="qglframebufferobject.cpp" virtual="non" meta="plain" const="false" static="true" overload="false" type="bool" signature="hasOpenGLFramebufferObjects()"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="isValid" fullname="QGLFramebufferObject::isValid" href="qglframebufferobject.html#isValid" location="qglframebufferobject.cpp" virtual="non" meta="plain" const="true" static="false" overload="false" type="bool" signature="isValid() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="release" fullname="QGLFramebufferObject::release" href="qglframebufferobject.html#release" location="qglframebufferobject.cpp" virtual="non" meta="plain" const="false" static="false" overload="false" type="bool" signature="release()"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="size" fullname="QGLFramebufferObject::size" href="qglframebufferobject.html#size" location="qglframebufferobject.cpp" virtual="non" meta="plain" const="true" static="false" overload="false" type="QSize" signature="size() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="texture" fullname="QGLFramebufferObject::texture" href="qglframebufferobject.html#texture" location="qglframebufferobject.cpp" virtual="non" meta="plain" const="true" static="false" overload="false" type="GLuint" signature="texture() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="toImage" fullname="QGLFramebufferObject::toImage" href="qglframebufferobject.html#toImage" location="qglframebufferobject.cpp" virtual="non" meta="plain" const="true" static="false" overload="false" type="QImage" signature="toImage() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="~QGLFramebufferObject" fullname="QGLFramebufferObject::~QGLFramebufferObject" href="qglframebufferobject.html#dtor.QGLFramebufferObject" location="qglframebufferobject.cpp" virtual="impure" meta="destructor" const="false" static="false" overload="false" type="" signature="~QGLFramebufferObject()"/>
            <enum access="public" threadsafety="unspecified" status="commendable" name="Attachment" fullname="QGLFramebufferObject::Attachment" href="qglframebufferobject.html#Attachment-enum" location="qglframebufferobject.h" since="4.3">
                <value name="NoAttachment" value="0"/>
                <value name="CombinedDepthStencil" value="1"/>
                <value name="Depth" value="2"/>
            </enum>
            <function access="public" threadsafety="unspecified" status="commendable" name="QGLFramebufferObject" fullname="QGLFramebufferObject::QGLFramebufferObject" href="qglframebufferobject.html#QGLFramebufferObject-6" location="qglframebufferobject.h" virtual="non" meta="constructor" const="false" static="false" overload="true" overload-number="6" type="" signature="QGLFramebufferObject(const QSize &amp; size, Attachment attachment, GLenum target, GLenum internal_format)">
                <parameter left="const QSize &amp;" right="" name="size" default=""/>
                <parameter left="Attachment" right="" name="attachment" default=""/>
                <parameter left="GLenum" right="" name="target" default="GL_TEXTURE_2D"/>
                <parameter left="GLenum" right="" name="internal_format" default="GL_RGBA8"/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="QGLFramebufferObject" fullname="QGLFramebufferObject::QGLFramebufferObject" href="qglframebufferobject.html#QGLFramebufferObject-3" location="qglframebufferobject.h" virtual="non" meta="constructor" const="false" static="false" overload="true" overload-number="3" type="" signature="QGLFramebufferObject(const QSize &amp; size, const QGLFramebufferObjectFormat &amp; format)">
                <parameter left="const QSize &amp;" right="" name="size" default=""/>
                <parameter left="const QGLFramebufferObjectFormat &amp;" right="" name="format" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="QGLFramebufferObject" fullname="QGLFramebufferObject::QGLFramebufferObject" href="qglframebufferobject.html#QGLFramebufferObject-5" location="qglframebufferobject.h" virtual="non" meta="constructor" const="false" static="false" overload="true" overload-number="5" type="" signature="QGLFramebufferObject(int width, int height, Attachment attachment, GLenum target, GLenum internal_format)">
                <parameter left="int" right="" name="width" default=""/>
                <parameter left="int" right="" name="height" default=""/>
                <parameter left="Attachment" right="" name="attachment" default=""/>
                <parameter left="GLenum" right="" name="target" default="GL_TEXTURE_2D"/>
                <parameter left="GLenum" right="" name="internal_format" default="GL_RGBA8"/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="QGLFramebufferObject" fullname="QGLFramebufferObject::QGLFramebufferObject" href="qglframebufferobject.html#QGLFramebufferObject-2" location="qglframebufferobject.h" virtual="non" meta="constructor" const="false" static="false" overload="true" overload-number="2" type="" signature="QGLFramebufferObject(int width, int height, GLenum target)">
                <parameter left="int" right="" name="width" default=""/>
                <parameter left="int" right="" name="height" default=""/>
                <parameter left="GLenum" right="" name="target" default="GL_TEXTURE_2D"/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="QGLFramebufferObject" fullname="QGLFramebufferObject::QGLFramebufferObject" href="qglframebufferobject.html#QGLFramebufferObject-4" location="qglframebufferobject.h" virtual="non" meta="constructor" const="false" static="false" overload="true" overload-number="4" type="" signature="QGLFramebufferObject(int width, int height, const QGLFramebufferObjectFormat &amp; format)">
                <parameter left="int" right="" name="width" default=""/>
                <parameter left="int" right="" name="height" default=""/>
                <parameter left="const QGLFramebufferObjectFormat &amp;" right="" name="format" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="attachment" fullname="QGLFramebufferObject::attachment" href="qglframebufferobject.html#attachment" location="qglframebufferobject.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="Attachment" signature="attachment() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="blitFramebuffer" fullname="QGLFramebufferObject::blitFramebuffer" href="qglframebufferobject.html#blitFramebuffer" location="qglframebufferobject.h" since="4.6" virtual="non" meta="plain" const="false" static="true" overload="false" type="void" signature="blitFramebuffer(QGLFramebufferObject * target, const QRect &amp; targetRect, QGLFramebufferObject * source, const QRect &amp; sourceRect, GLbitfield buffers, GLenum filter)">
                <parameter left="QGLFramebufferObject *" right="" name="target" default=""/>
                <parameter left="const QRect &amp;" right="" name="targetRect" default=""/>
                <parameter left="QGLFramebufferObject *" right="" name="source" default=""/>
                <parameter left="const QRect &amp;" right="" name="sourceRect" default=""/>
                <parameter left="GLbitfield" right="" name="buffers" default="GL_COLOR_BUFFER_BIT"/>
                <parameter left="GLenum" right="" name="filter" default="GL_NEAREST"/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="drawTexture" fullname="QGLFramebufferObject::drawTexture" href="qglframebufferobject.html#drawTexture-2" location="qglframebufferobject.h" since="4.4" virtual="non" meta="plain" const="false" static="false" overload="true" overload-number="2" type="void" signature="drawTexture(const QPointF &amp; point, GLuint textureId, GLenum textureTarget)">
                <parameter left="const QPointF &amp;" right="" name="point" default=""/>
                <parameter left="GLuint" right="" name="textureId" default=""/>
                <parameter left="GLenum" right="" name="textureTarget" default="GL_TEXTURE_2D"/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="drawTexture" fullname="QGLFramebufferObject::drawTexture" href="qglframebufferobject.html#drawTexture" location="qglframebufferobject.h" since="4.4" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="drawTexture(const QRectF &amp; target, GLuint textureId, GLenum textureTarget)">
                <parameter left="const QRectF &amp;" right="" name="target" default=""/>
                <parameter left="GLuint" right="" name="textureId" default=""/>
                <parameter left="GLenum" right="" name="textureTarget" default="GL_TEXTURE_2D"/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="format" fullname="QGLFramebufferObject::format" href="qglframebufferobject.html#format" location="qglframebufferobject.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QGLFramebufferObjectFormat" signature="format() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="isBound" fullname="QGLFramebufferObject::isBound" href="qglframebufferobject.html#isBound" location="qglframebufferobject.h" since="4.5" virtual="non" meta="plain" const="true" static="false" overload="false" type="bool" signature="isBound() const"/>
            <function access="protected" threadsafety="unspecified" status="commendable" name="metric" fullname="QGLFramebufferObject::metric" href="qglframebufferobject.html#metric" location="qglframebufferobject.h" virtual="impure" meta="plain" const="true" static="false" overload="false" type="int" signature="metric(PaintDeviceMetric metric) const">
                <parameter left="PaintDeviceMetric" right="" name="metric" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="paintEngine" fullname="QGLFramebufferObject::paintEngine" href="qglframebufferobject.html#paintEngine" location="qglframebufferobject.h" virtual="impure" meta="plain" const="true" static="false" overload="false" type="QPaintEngine *" signature="paintEngine() const"/>
        </class>
        <class access="public" threadsafety="unspecified" status="obsolete" name="QGLFramebufferObjectFormat" href="qglframebufferobjectformat.html" location="qglframebufferobject.h" since="4.6" bases="" module="QtOpenGL" groups="painting-3D">
            <function access="public" threadsafety="unspecified" status="commendable" name="QGLFramebufferObjectFormat" fullname="QGLFramebufferObjectFormat::QGLFramebufferObjectFormat" href="qglframebufferobjectformat.html#QGLFramebufferObjectFormat" location="qglframebufferobject.h" virtual="non" meta="constructor" const="false" static="false" overload="false" type="" signature="QGLFramebufferObjectFormat()"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="QGLFramebufferObjectFormat" fullname="QGLFramebufferObjectFormat::QGLFramebufferObjectFormat" href="qglframebufferobjectformat.html#QGLFramebufferObjectFormat-2" location="qglframebufferobject.h" virtual="non" meta="constructor" const="false" static="false" overload="true" overload-number="2" type="" signature="QGLFramebufferObjectFormat(const QGLFramebufferObjectFormat &amp; other)">
                <parameter left="const QGLFramebufferObjectFormat &amp;" right="" name="other" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="attachment" fullname="QGLFramebufferObjectFormat::attachment" href="qglframebufferobjectformat.html#attachment" location="qglframebufferobject.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QGLFramebufferObject::Attachment" signature="attachment() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="internalTextureFormat" fullname="QGLFramebufferObjectFormat::internalTextureFormat" href="qglframebufferobjectformat.html#internalTextureFormat" location="qglframebufferobject.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="GLenum" signature="internalTextureFormat() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="mipmap" fullname="QGLFramebufferObjectFormat::mipmap" href="qglframebufferobjectformat.html#mipmap" location="qglframebufferobject.h" since="4.8" virtual="non" meta="plain" const="true" static="false" overload="false" type="bool" signature="mipmap() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="operator!=" fullname="QGLFramebufferObjectFormat::operator!=" href="qglframebufferobjectformat.html#operator!=" location="qglframebufferobject.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="bool" signature="operator!=(const QGLFramebufferObjectFormat &amp; other) const">
                <parameter left="const QGLFramebufferObjectFormat &amp;" right="" name="other" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="operator=" fullname="QGLFramebufferObjectFormat::operator=" href="qglframebufferobjectformat.html#operator=" location="qglframebufferobject.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="QGLFramebufferObjectFormat &amp;" signature="operator=(const QGLFramebufferObjectFormat &amp; other)">
                <parameter left="const QGLFramebufferObjectFormat &amp;" right="" name="other" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="operator==" fullname="QGLFramebufferObjectFormat::operator==" href="qglframebufferobjectformat.html#operator==" location="qglframebufferobject.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="bool" signature="operator==(const QGLFramebufferObjectFormat &amp; other) const">
                <parameter left="const QGLFramebufferObjectFormat &amp;" right="" name="other" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="samples" fullname="QGLFramebufferObjectFormat::samples" href="qglframebufferobjectformat.html#samples" location="qglframebufferobject.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="int" signature="samples() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="setAttachment" fullname="QGLFramebufferObjectFormat::setAttachment" href="qglframebufferobjectformat.html#setAttachment" location="qglframebufferobject.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setAttachment(QGLFramebufferObject::Attachment attachment)">
                <parameter left="QGLFramebufferObject::Attachment" right="" name="attachment" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setInternalTextureFormat" fullname="QGLFramebufferObjectFormat::setInternalTextureFormat" href="qglframebufferobjectformat.html#setInternalTextureFormat" location="qglframebufferobject.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setInternalTextureFormat(GLenum internalTextureFormat)">
                <parameter left="GLenum" right="" name="internalTextureFormat" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setMipmap" fullname="QGLFramebufferObjectFormat::setMipmap" href="qglframebufferobjectformat.html#setMipmap" location="qglframebufferobject.h" since="4.8" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setMipmap(bool enabled)">
                <parameter left="bool" right="" name="enabled" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setSamples" fullname="QGLFramebufferObjectFormat::setSamples" href="qglframebufferobjectformat.html#setSamples" location="qglframebufferobject.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setSamples(int samples)">
                <parameter left="int" right="" name="samples" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setTextureTarget" fullname="QGLFramebufferObjectFormat::setTextureTarget" href="qglframebufferobjectformat.html#setTextureTarget" location="qglframebufferobject.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setTextureTarget(GLenum target)">
                <parameter left="GLenum" right="" name="target" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="textureTarget" fullname="QGLFramebufferObjectFormat::textureTarget" href="qglframebufferobjectformat.html#textureTarget" location="qglframebufferobject.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="GLenum" signature="textureTarget() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="~QGLFramebufferObjectFormat" fullname="QGLFramebufferObjectFormat::~QGLFramebufferObjectFormat" href="qglframebufferobjectformat.html#dtor.QGLFramebufferObjectFormat" location="qglframebufferobject.h" virtual="non" meta="destructor" const="false" static="false" overload="false" type="" signature="~QGLFramebufferObjectFormat()"/>
        </class>
        <class access="public" threadsafety="unspecified" status="obsolete" name="QGLFunctions" href="qglfunctions.html" location="qglfunctions.h" since="4.8" bases="" module="QtOpenGL" groups="painting-3D">
            <enum access="public" threadsafety="unspecified" status="commendable" name="OpenGLFeature" fullname="QGLFunctions::OpenGLFeature" href="qglfunctions.html#OpenGLFeature-enum" location="qglfunctions.h" typedef="QGLFunctions::OpenGLFeatures">
                <value name="Multitexture" value="0x0001"/>
                <value name="Shaders" value="0x0002"/>
                <value name="Buffers" value="0x0004"/>
                <value name="Framebuffers" value="0x0008"/>
                <value name="BlendColor" value="0x0010"/>
                <value name="BlendEquation" value="0x0020"/>
                <value name="BlendEquationSeparate" value="0x0040"/>
                <value name="BlendFuncSeparate" value="0x0080"/>
                <value name="BlendSubtract" value="0x0100"/>
                <value name="CompressedTextures" value="0x0200"/>
                <value name="Multisample" value="0x0400"/>
                <value name="StencilSeparate" value="0x0800"/>
                <value name="NPOTTextures" value="0x1000"/>
            </enum>
            <typedef access="public" threadsafety="unspecified" status="commendable" name="OpenGLFeatures" fullname="QGLFunctions::OpenGLFeatures" href="qglfunctions.html#OpenGLFeatures-typedef" location="qglfunctions.h" enum="QGLFunctions::OpenGLFeature"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="QGLFunctions" fullname="QGLFunctions::QGLFunctions" href="qglfunctions.html#QGLFunctions" location="qglfunctions.h" virtual="non" meta="constructor" const="false" static="false" overload="false" type="" signature="QGLFunctions()"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="QGLFunctions" fullname="QGLFunctions::QGLFunctions" href="qglfunctions.html#QGLFunctions-2" location="qglfunctions.h" virtual="non" meta="constructor" const="false" static="false" overload="true" overload-number="2" type="" signature="QGLFunctions(const QGLContext * context)">
                <parameter left="const QGLContext *" right="" name="context" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="glActiveTexture" fullname="QGLFunctions::glActiveTexture" href="qglfunctions.html#glActiveTexture" location="qglfunctions.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="glActiveTexture(GLenum texture)">
                <parameter left="GLenum" right="" name="texture" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="glAttachShader" fullname="QGLFunctions::glAttachShader" href="qglfunctions.html#glAttachShader" location="qglfunctions.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="glAttachShader(GLuint program, GLuint shader)">
                <parameter left="GLuint" right="" name="program" default=""/>
                <parameter left="GLuint" right="" name="shader" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="glBindAttribLocation" fullname="QGLFunctions::glBindAttribLocation" href="qglfunctions.html#glBindAttribLocation" location="qglfunctions.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="glBindAttribLocation(GLuint program, GLuint index, const char * name)">
                <parameter left="GLuint" right="" name="program" default=""/>
                <parameter left="GLuint" right="" name="index" default=""/>
                <parameter left="const char *" right="" name="name" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="glBindBuffer" fullname="QGLFunctions::glBindBuffer" href="qglfunctions.html#glBindBuffer" location="qglfunctions.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="glBindBuffer(GLenum target, GLuint buffer)">
                <parameter left="GLenum" right="" name="target" default=""/>
                <parameter left="GLuint" right="" name="buffer" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="glBindFramebuffer" fullname="QGLFunctions::glBindFramebuffer" href="qglfunctions.html#glBindFramebuffer" location="qglfunctions.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="glBindFramebuffer(GLenum target, GLuint framebuffer)">
                <parameter left="GLenum" right="" name="target" default=""/>
                <parameter left="GLuint" right="" name="framebuffer" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="glBindRenderbuffer" fullname="QGLFunctions::glBindRenderbuffer" href="qglfunctions.html#glBindRenderbuffer" location="qglfunctions.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="glBindRenderbuffer(GLenum target, GLuint renderbuffer)">
                <parameter left="GLenum" right="" name="target" default=""/>
                <parameter left="GLuint" right="" name="renderbuffer" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="glBlendColor" fullname="QGLFunctions::glBlendColor" href="qglfunctions.html#glBlendColor" location="qglfunctions.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="glBlendColor(GLclampf red, GLclampf green, GLclampf blue, GLclampf alpha)">
                <parameter left="GLclampf" right="" name="red" default=""/>
                <parameter left="GLclampf" right="" name="green" default=""/>
                <parameter left="GLclampf" right="" name="blue" default=""/>
                <parameter left="GLclampf" right="" name="alpha" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="glBlendEquation" fullname="QGLFunctions::glBlendEquation" href="qglfunctions.html#glBlendEquation" location="qglfunctions.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="glBlendEquation(GLenum mode)">
                <parameter left="GLenum" right="" name="mode" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="glBlendEquationSeparate" fullname="QGLFunctions::glBlendEquationSeparate" href="qglfunctions.html#glBlendEquationSeparate" location="qglfunctions.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="glBlendEquationSeparate(GLenum modeRGB, GLenum modeAlpha)">
                <parameter left="GLenum" right="" name="modeRGB" default=""/>
                <parameter left="GLenum" right="" name="modeAlpha" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="glBlendFuncSeparate" fullname="QGLFunctions::glBlendFuncSeparate" href="qglfunctions.html#glBlendFuncSeparate" location="qglfunctions.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="glBlendFuncSeparate(GLenum srcRGB, GLenum dstRGB, GLenum srcAlpha, GLenum dstAlpha)">
                <parameter left="GLenum" right="" name="srcRGB" default=""/>
                <parameter left="GLenum" right="" name="dstRGB" default=""/>
                <parameter left="GLenum" right="" name="srcAlpha" default=""/>
                <parameter left="GLenum" right="" name="dstAlpha" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="glBufferData" fullname="QGLFunctions::glBufferData" href="qglfunctions.html#glBufferData" location="qglfunctions.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="glBufferData(GLenum target, qgl_GLsizeiptr size, const void * data, GLenum usage)">
                <parameter left="GLenum" right="" name="target" default=""/>
                <parameter left="qgl_GLsizeiptr" right="" name="size" default=""/>
                <parameter left="const void *" right="" name="data" default=""/>
                <parameter left="GLenum" right="" name="usage" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="glBufferSubData" fullname="QGLFunctions::glBufferSubData" href="qglfunctions.html#glBufferSubData" location="qglfunctions.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="glBufferSubData(GLenum target, qgl_GLintptr offset, qgl_GLsizeiptr size, const void * data)">
                <parameter left="GLenum" right="" name="target" default=""/>
                <parameter left="qgl_GLintptr" right="" name="offset" default=""/>
                <parameter left="qgl_GLsizeiptr" right="" name="size" default=""/>
                <parameter left="const void *" right="" name="data" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="glCheckFramebufferStatus" fullname="QGLFunctions::glCheckFramebufferStatus" href="qglfunctions.html#glCheckFramebufferStatus" location="qglfunctions.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="GLenum" signature="glCheckFramebufferStatus(GLenum target)">
                <parameter left="GLenum" right="" name="target" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="glClearDepthf" fullname="QGLFunctions::glClearDepthf" href="qglfunctions.html#glClearDepthf" location="qglfunctions.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="glClearDepthf(GLclampf depth)">
                <parameter left="GLclampf" right="" name="depth" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="glCompileShader" fullname="QGLFunctions::glCompileShader" href="qglfunctions.html#glCompileShader" location="qglfunctions.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="glCompileShader(GLuint shader)">
                <parameter left="GLuint" right="" name="shader" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="glCompressedTexImage2D" fullname="QGLFunctions::glCompressedTexImage2D" href="qglfunctions.html#glCompressedTexImage2D" location="qglfunctions.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="glCompressedTexImage2D(GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLint border, GLsizei imageSize, const void * data)">
                <parameter left="GLenum" right="" name="target" default=""/>
                <parameter left="GLint" right="" name="level" default=""/>
                <parameter left="GLenum" right="" name="internalformat" default=""/>
                <parameter left="GLsizei" right="" name="width" default=""/>
                <parameter left="GLsizei" right="" name="height" default=""/>
                <parameter left="GLint" right="" name="border" default=""/>
                <parameter left="GLsizei" right="" name="imageSize" default=""/>
                <parameter left="const void *" right="" name="data" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="glCompressedTexSubImage2D" fullname="QGLFunctions::glCompressedTexSubImage2D" href="qglfunctions.html#glCompressedTexSubImage2D" location="qglfunctions.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="glCompressedTexSubImage2D(GLenum target, GLint level, GLint xoffset, GLint yoffset, GLsizei width, GLsizei height, GLenum format, GLsizei imageSize, const void * data)">
                <parameter left="GLenum" right="" name="target" default=""/>
                <parameter left="GLint" right="" name="level" default=""/>
                <parameter left="GLint" right="" name="xoffset" default=""/>
                <parameter left="GLint" right="" name="yoffset" default=""/>
                <parameter left="GLsizei" right="" name="width" default=""/>
                <parameter left="GLsizei" right="" name="height" default=""/>
                <parameter left="GLenum" right="" name="format" default=""/>
                <parameter left="GLsizei" right="" name="imageSize" default=""/>
                <parameter left="const void *" right="" name="data" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="glCreateProgram" fullname="QGLFunctions::glCreateProgram" href="qglfunctions.html#glCreateProgram" location="qglfunctions.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="GLuint" signature="glCreateProgram()"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="glCreateShader" fullname="QGLFunctions::glCreateShader" href="qglfunctions.html#glCreateShader" location="qglfunctions.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="GLuint" signature="glCreateShader(GLenum type)">
                <parameter left="GLenum" right="" name="type" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="glDeleteBuffers" fullname="QGLFunctions::glDeleteBuffers" href="qglfunctions.html#glDeleteBuffers" location="qglfunctions.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="glDeleteBuffers(GLsizei n, const GLuint * buffers)">
                <parameter left="GLsizei" right="" name="n" default=""/>
                <parameter left="const GLuint *" right="" name="buffers" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="glDeleteFramebuffers" fullname="QGLFunctions::glDeleteFramebuffers" href="qglfunctions.html#glDeleteFramebuffers" location="qglfunctions.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="glDeleteFramebuffers(GLsizei n, const GLuint * framebuffers)">
                <parameter left="GLsizei" right="" name="n" default=""/>
                <parameter left="const GLuint *" right="" name="framebuffers" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="glDeleteProgram" fullname="QGLFunctions::glDeleteProgram" href="qglfunctions.html#glDeleteProgram" location="qglfunctions.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="glDeleteProgram(GLuint program)">
                <parameter left="GLuint" right="" name="program" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="glDeleteRenderbuffers" fullname="QGLFunctions::glDeleteRenderbuffers" href="qglfunctions.html#glDeleteRenderbuffers" location="qglfunctions.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="glDeleteRenderbuffers(GLsizei n, const GLuint * renderbuffers)">
                <parameter left="GLsizei" right="" name="n" default=""/>
                <parameter left="const GLuint *" right="" name="renderbuffers" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="glDeleteShader" fullname="QGLFunctions::glDeleteShader" href="qglfunctions.html#glDeleteShader" location="qglfunctions.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="glDeleteShader(GLuint shader)">
                <parameter left="GLuint" right="" name="shader" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="glDepthRangef" fullname="QGLFunctions::glDepthRangef" href="qglfunctions.html#glDepthRangef" location="qglfunctions.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="glDepthRangef(GLclampf zNear, GLclampf zFar)">
                <parameter left="GLclampf" right="" name="zNear" default=""/>
                <parameter left="GLclampf" right="" name="zFar" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="glDetachShader" fullname="QGLFunctions::glDetachShader" href="qglfunctions.html#glDetachShader" location="qglfunctions.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="glDetachShader(GLuint program, GLuint shader)">
                <parameter left="GLuint" right="" name="program" default=""/>
                <parameter left="GLuint" right="" name="shader" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="glDisableVertexAttribArray" fullname="QGLFunctions::glDisableVertexAttribArray" href="qglfunctions.html#glDisableVertexAttribArray" location="qglfunctions.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="glDisableVertexAttribArray(GLuint index)">
                <parameter left="GLuint" right="" name="index" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="glEnableVertexAttribArray" fullname="QGLFunctions::glEnableVertexAttribArray" href="qglfunctions.html#glEnableVertexAttribArray" location="qglfunctions.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="glEnableVertexAttribArray(GLuint index)">
                <parameter left="GLuint" right="" name="index" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="glFramebufferRenderbuffer" fullname="QGLFunctions::glFramebufferRenderbuffer" href="qglfunctions.html#glFramebufferRenderbuffer" location="qglfunctions.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="glFramebufferRenderbuffer(GLenum target, GLenum attachment, GLenum renderbuffertarget, GLuint renderbuffer)">
                <parameter left="GLenum" right="" name="target" default=""/>
                <parameter left="GLenum" right="" name="attachment" default=""/>
                <parameter left="GLenum" right="" name="renderbuffertarget" default=""/>
                <parameter left="GLuint" right="" name="renderbuffer" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="glFramebufferTexture2D" fullname="QGLFunctions::glFramebufferTexture2D" href="qglfunctions.html#glFramebufferTexture2D" location="qglfunctions.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="glFramebufferTexture2D(GLenum target, GLenum attachment, GLenum textarget, GLuint texture, GLint level)">
                <parameter left="GLenum" right="" name="target" default=""/>
                <parameter left="GLenum" right="" name="attachment" default=""/>
                <parameter left="GLenum" right="" name="textarget" default=""/>
                <parameter left="GLuint" right="" name="texture" default=""/>
                <parameter left="GLint" right="" name="level" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="glGenBuffers" fullname="QGLFunctions::glGenBuffers" href="qglfunctions.html#glGenBuffers" location="qglfunctions.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="glGenBuffers(GLsizei n, GLuint * buffers)">
                <parameter left="GLsizei" right="" name="n" default=""/>
                <parameter left="GLuint *" right="" name="buffers" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="glGenFramebuffers" fullname="QGLFunctions::glGenFramebuffers" href="qglfunctions.html#glGenFramebuffers" location="qglfunctions.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="glGenFramebuffers(GLsizei n, GLuint * framebuffers)">
                <parameter left="GLsizei" right="" name="n" default=""/>
                <parameter left="GLuint *" right="" name="framebuffers" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="glGenRenderbuffers" fullname="QGLFunctions::glGenRenderbuffers" href="qglfunctions.html#glGenRenderbuffers" location="qglfunctions.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="glGenRenderbuffers(GLsizei n, GLuint * renderbuffers)">
                <parameter left="GLsizei" right="" name="n" default=""/>
                <parameter left="GLuint *" right="" name="renderbuffers" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="glGenerateMipmap" fullname="QGLFunctions::glGenerateMipmap" href="qglfunctions.html#glGenerateMipmap" location="qglfunctions.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="glGenerateMipmap(GLenum target)">
                <parameter left="GLenum" right="" name="target" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="glGetActiveAttrib" fullname="QGLFunctions::glGetActiveAttrib" href="qglfunctions.html#glGetActiveAttrib" location="qglfunctions.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="glGetActiveAttrib(GLuint program, GLuint index, GLsizei bufsize, GLsizei * length, GLint * size, GLenum * type, char * name)">
                <parameter left="GLuint" right="" name="program" default=""/>
                <parameter left="GLuint" right="" name="index" default=""/>
                <parameter left="GLsizei" right="" name="bufsize" default=""/>
                <parameter left="GLsizei *" right="" name="length" default=""/>
                <parameter left="GLint *" right="" name="size" default=""/>
                <parameter left="GLenum *" right="" name="type" default=""/>
                <parameter left="char *" right="" name="name" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="glGetActiveUniform" fullname="QGLFunctions::glGetActiveUniform" href="qglfunctions.html#glGetActiveUniform" location="qglfunctions.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="glGetActiveUniform(GLuint program, GLuint index, GLsizei bufsize, GLsizei * length, GLint * size, GLenum * type, char * name)">
                <parameter left="GLuint" right="" name="program" default=""/>
                <parameter left="GLuint" right="" name="index" default=""/>
                <parameter left="GLsizei" right="" name="bufsize" default=""/>
                <parameter left="GLsizei *" right="" name="length" default=""/>
                <parameter left="GLint *" right="" name="size" default=""/>
                <parameter left="GLenum *" right="" name="type" default=""/>
                <parameter left="char *" right="" name="name" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="glGetAttachedShaders" fullname="QGLFunctions::glGetAttachedShaders" href="qglfunctions.html#glGetAttachedShaders" location="qglfunctions.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="glGetAttachedShaders(GLuint program, GLsizei maxcount, GLsizei * count, GLuint * shaders)">
                <parameter left="GLuint" right="" name="program" default=""/>
                <parameter left="GLsizei" right="" name="maxcount" default=""/>
                <parameter left="GLsizei *" right="" name="count" default=""/>
                <parameter left="GLuint *" right="" name="shaders" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="glGetAttribLocation" fullname="QGLFunctions::glGetAttribLocation" href="qglfunctions.html#glGetAttribLocation" location="qglfunctions.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="int" signature="glGetAttribLocation(GLuint program, const char * name)">
                <parameter left="GLuint" right="" name="program" default=""/>
                <parameter left="const char *" right="" name="name" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="glGetBufferParameteriv" fullname="QGLFunctions::glGetBufferParameteriv" href="qglfunctions.html#glGetBufferParameteriv" location="qglfunctions.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="glGetBufferParameteriv(GLenum target, GLenum pname, GLint * params)">
                <parameter left="GLenum" right="" name="target" default=""/>
                <parameter left="GLenum" right="" name="pname" default=""/>
                <parameter left="GLint *" right="" name="params" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="glGetFramebufferAttachmentParameteriv" fullname="QGLFunctions::glGetFramebufferAttachmentParameteriv" href="qglfunctions.html#glGetFramebufferAttachmentParameteriv" location="qglfunctions.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="glGetFramebufferAttachmentParameteriv(GLenum target, GLenum attachment, GLenum pname, GLint * params)">
                <parameter left="GLenum" right="" name="target" default=""/>
                <parameter left="GLenum" right="" name="attachment" default=""/>
                <parameter left="GLenum" right="" name="pname" default=""/>
                <parameter left="GLint *" right="" name="params" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="glGetProgramInfoLog" fullname="QGLFunctions::glGetProgramInfoLog" href="qglfunctions.html#glGetProgramInfoLog" location="qglfunctions.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="glGetProgramInfoLog(GLuint program, GLsizei bufsize, GLsizei * length, char * infolog)">
                <parameter left="GLuint" right="" name="program" default=""/>
                <parameter left="GLsizei" right="" name="bufsize" default=""/>
                <parameter left="GLsizei *" right="" name="length" default=""/>
                <parameter left="char *" right="" name="infolog" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="glGetProgramiv" fullname="QGLFunctions::glGetProgramiv" href="qglfunctions.html#glGetProgramiv" location="qglfunctions.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="glGetProgramiv(GLuint program, GLenum pname, GLint * params)">
                <parameter left="GLuint" right="" name="program" default=""/>
                <parameter left="GLenum" right="" name="pname" default=""/>
                <parameter left="GLint *" right="" name="params" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="glGetRenderbufferParameteriv" fullname="QGLFunctions::glGetRenderbufferParameteriv" href="qglfunctions.html#glGetRenderbufferParameteriv" location="qglfunctions.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="glGetRenderbufferParameteriv(GLenum target, GLenum pname, GLint * params)">
                <parameter left="GLenum" right="" name="target" default=""/>
                <parameter left="GLenum" right="" name="pname" default=""/>
                <parameter left="GLint *" right="" name="params" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="glGetShaderInfoLog" fullname="QGLFunctions::glGetShaderInfoLog" href="qglfunctions.html#glGetShaderInfoLog" location="qglfunctions.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="glGetShaderInfoLog(GLuint shader, GLsizei bufsize, GLsizei * length, char * infolog)">
                <parameter left="GLuint" right="" name="shader" default=""/>
                <parameter left="GLsizei" right="" name="bufsize" default=""/>
                <parameter left="GLsizei *" right="" name="length" default=""/>
                <parameter left="char *" right="" name="infolog" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="glGetShaderPrecisionFormat" fullname="QGLFunctions::glGetShaderPrecisionFormat" href="qglfunctions.html#glGetShaderPrecisionFormat" location="qglfunctions.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="glGetShaderPrecisionFormat(GLenum shadertype, GLenum precisiontype, GLint * range, GLint * precision)">
                <parameter left="GLenum" right="" name="shadertype" default=""/>
                <parameter left="GLenum" right="" name="precisiontype" default=""/>
                <parameter left="GLint *" right="" name="range" default=""/>
                <parameter left="GLint *" right="" name="precision" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="glGetShaderSource" fullname="QGLFunctions::glGetShaderSource" href="qglfunctions.html#glGetShaderSource" location="qglfunctions.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="glGetShaderSource(GLuint shader, GLsizei bufsize, GLsizei * length, char * source)">
                <parameter left="GLuint" right="" name="shader" default=""/>
                <parameter left="GLsizei" right="" name="bufsize" default=""/>
                <parameter left="GLsizei *" right="" name="length" default=""/>
                <parameter left="char *" right="" name="source" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="glGetShaderiv" fullname="QGLFunctions::glGetShaderiv" href="qglfunctions.html#glGetShaderiv" location="qglfunctions.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="glGetShaderiv(GLuint shader, GLenum pname, GLint * params)">
                <parameter left="GLuint" right="" name="shader" default=""/>
                <parameter left="GLenum" right="" name="pname" default=""/>
                <parameter left="GLint *" right="" name="params" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="glGetUniformLocation" fullname="QGLFunctions::glGetUniformLocation" href="qglfunctions.html#glGetUniformLocation" location="qglfunctions.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="int" signature="glGetUniformLocation(GLuint program, const char * name)">
                <parameter left="GLuint" right="" name="program" default=""/>
                <parameter left="const char *" right="" name="name" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="glGetUniformfv" fullname="QGLFunctions::glGetUniformfv" href="qglfunctions.html#glGetUniformfv" location="qglfunctions.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="glGetUniformfv(GLuint program, GLint location, GLfloat * params)">
                <parameter left="GLuint" right="" name="program" default=""/>
                <parameter left="GLint" right="" name="location" default=""/>
                <parameter left="GLfloat *" right="" name="params" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="glGetUniformiv" fullname="QGLFunctions::glGetUniformiv" href="qglfunctions.html#glGetUniformiv" location="qglfunctions.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="glGetUniformiv(GLuint program, GLint location, GLint * params)">
                <parameter left="GLuint" right="" name="program" default=""/>
                <parameter left="GLint" right="" name="location" default=""/>
                <parameter left="GLint *" right="" name="params" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="glGetVertexAttribPointerv" fullname="QGLFunctions::glGetVertexAttribPointerv" href="qglfunctions.html#glGetVertexAttribPointerv" location="qglfunctions.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="glGetVertexAttribPointerv(GLuint index, GLenum pname, void ** pointer)">
                <parameter left="GLuint" right="" name="index" default=""/>
                <parameter left="GLenum" right="" name="pname" default=""/>
                <parameter left="void **" right="" name="pointer" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="glGetVertexAttribfv" fullname="QGLFunctions::glGetVertexAttribfv" href="qglfunctions.html#glGetVertexAttribfv" location="qglfunctions.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="glGetVertexAttribfv(GLuint index, GLenum pname, GLfloat * params)">
                <parameter left="GLuint" right="" name="index" default=""/>
                <parameter left="GLenum" right="" name="pname" default=""/>
                <parameter left="GLfloat *" right="" name="params" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="glGetVertexAttribiv" fullname="QGLFunctions::glGetVertexAttribiv" href="qglfunctions.html#glGetVertexAttribiv" location="qglfunctions.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="glGetVertexAttribiv(GLuint index, GLenum pname, GLint * params)">
                <parameter left="GLuint" right="" name="index" default=""/>
                <parameter left="GLenum" right="" name="pname" default=""/>
                <parameter left="GLint *" right="" name="params" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="glIsBuffer" fullname="QGLFunctions::glIsBuffer" href="qglfunctions.html#glIsBuffer" location="qglfunctions.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="GLboolean" signature="glIsBuffer(GLuint buffer)">
                <parameter left="GLuint" right="" name="buffer" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="glIsFramebuffer" fullname="QGLFunctions::glIsFramebuffer" href="qglfunctions.html#glIsFramebuffer" location="qglfunctions.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="GLboolean" signature="glIsFramebuffer(GLuint framebuffer)">
                <parameter left="GLuint" right="" name="framebuffer" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="glIsProgram" fullname="QGLFunctions::glIsProgram" href="qglfunctions.html#glIsProgram" location="qglfunctions.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="GLboolean" signature="glIsProgram(GLuint program)">
                <parameter left="GLuint" right="" name="program" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="glIsRenderbuffer" fullname="QGLFunctions::glIsRenderbuffer" href="qglfunctions.html#glIsRenderbuffer" location="qglfunctions.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="GLboolean" signature="glIsRenderbuffer(GLuint renderbuffer)">
                <parameter left="GLuint" right="" name="renderbuffer" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="glIsShader" fullname="QGLFunctions::glIsShader" href="qglfunctions.html#glIsShader" location="qglfunctions.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="GLboolean" signature="glIsShader(GLuint shader)">
                <parameter left="GLuint" right="" name="shader" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="glLinkProgram" fullname="QGLFunctions::glLinkProgram" href="qglfunctions.html#glLinkProgram" location="qglfunctions.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="glLinkProgram(GLuint program)">
                <parameter left="GLuint" right="" name="program" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="glReleaseShaderCompiler" fullname="QGLFunctions::glReleaseShaderCompiler" href="qglfunctions.html#glReleaseShaderCompiler" location="qglfunctions.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="glReleaseShaderCompiler()"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="glRenderbufferStorage" fullname="QGLFunctions::glRenderbufferStorage" href="qglfunctions.html#glRenderbufferStorage" location="qglfunctions.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="glRenderbufferStorage(GLenum target, GLenum internalformat, GLsizei width, GLsizei height)">
                <parameter left="GLenum" right="" name="target" default=""/>
                <parameter left="GLenum" right="" name="internalformat" default=""/>
                <parameter left="GLsizei" right="" name="width" default=""/>
                <parameter left="GLsizei" right="" name="height" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="glSampleCoverage" fullname="QGLFunctions::glSampleCoverage" href="qglfunctions.html#glSampleCoverage" location="qglfunctions.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="glSampleCoverage(GLclampf value, GLboolean invert)">
                <parameter left="GLclampf" right="" name="value" default=""/>
                <parameter left="GLboolean" right="" name="invert" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="glShaderBinary" fullname="QGLFunctions::glShaderBinary" href="qglfunctions.html#glShaderBinary" location="qglfunctions.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="glShaderBinary(GLint n, const GLuint * shaders, GLenum binaryformat, const void * binary, GLint length)">
                <parameter left="GLint" right="" name="n" default=""/>
                <parameter left="const GLuint *" right="" name="shaders" default=""/>
                <parameter left="GLenum" right="" name="binaryformat" default=""/>
                <parameter left="const void *" right="" name="binary" default=""/>
                <parameter left="GLint" right="" name="length" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="glShaderSource" fullname="QGLFunctions::glShaderSource" href="qglfunctions.html#glShaderSource" location="qglfunctions.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="glShaderSource(GLuint shader, GLsizei count, const char ** string, const GLint * length)">
                <parameter left="GLuint" right="" name="shader" default=""/>
                <parameter left="GLsizei" right="" name="count" default=""/>
                <parameter left="const char **" right="" name="string" default=""/>
                <parameter left="const GLint *" right="" name="length" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="glStencilFuncSeparate" fullname="QGLFunctions::glStencilFuncSeparate" href="qglfunctions.html#glStencilFuncSeparate" location="qglfunctions.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="glStencilFuncSeparate(GLenum face, GLenum func, GLint ref, GLuint mask)">
                <parameter left="GLenum" right="" name="face" default=""/>
                <parameter left="GLenum" right="" name="func" default=""/>
                <parameter left="GLint" right="" name="ref" default=""/>
                <parameter left="GLuint" right="" name="mask" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="glStencilMaskSeparate" fullname="QGLFunctions::glStencilMaskSeparate" href="qglfunctions.html#glStencilMaskSeparate" location="qglfunctions.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="glStencilMaskSeparate(GLenum face, GLuint mask)">
                <parameter left="GLenum" right="" name="face" default=""/>
                <parameter left="GLuint" right="" name="mask" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="glStencilOpSeparate" fullname="QGLFunctions::glStencilOpSeparate" href="qglfunctions.html#glStencilOpSeparate" location="qglfunctions.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="glStencilOpSeparate(GLenum face, GLenum fail, GLenum zfail, GLenum zpass)">
                <parameter left="GLenum" right="" name="face" default=""/>
                <parameter left="GLenum" right="" name="fail" default=""/>
                <parameter left="GLenum" right="" name="zfail" default=""/>
                <parameter left="GLenum" right="" name="zpass" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="glUniform1f" fullname="QGLFunctions::glUniform1f" href="qglfunctions.html#glUniform1f" location="qglfunctions.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="glUniform1f(GLint location, GLfloat x)">
                <parameter left="GLint" right="" name="location" default=""/>
                <parameter left="GLfloat" right="" name="x" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="glUniform1fv" fullname="QGLFunctions::glUniform1fv" href="qglfunctions.html#glUniform1fv" location="qglfunctions.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="glUniform1fv(GLint location, GLsizei count, const GLfloat * v)">
                <parameter left="GLint" right="" name="location" default=""/>
                <parameter left="GLsizei" right="" name="count" default=""/>
                <parameter left="const GLfloat *" right="" name="v" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="glUniform1i" fullname="QGLFunctions::glUniform1i" href="qglfunctions.html#glUniform1i" location="qglfunctions.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="glUniform1i(GLint location, GLint x)">
                <parameter left="GLint" right="" name="location" default=""/>
                <parameter left="GLint" right="" name="x" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="glUniform1iv" fullname="QGLFunctions::glUniform1iv" href="qglfunctions.html#glUniform1iv" location="qglfunctions.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="glUniform1iv(GLint location, GLsizei count, const GLint * v)">
                <parameter left="GLint" right="" name="location" default=""/>
                <parameter left="GLsizei" right="" name="count" default=""/>
                <parameter left="const GLint *" right="" name="v" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="glUniform2f" fullname="QGLFunctions::glUniform2f" href="qglfunctions.html#glUniform2f" location="qglfunctions.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="glUniform2f(GLint location, GLfloat x, GLfloat y)">
                <parameter left="GLint" right="" name="location" default=""/>
                <parameter left="GLfloat" right="" name="x" default=""/>
                <parameter left="GLfloat" right="" name="y" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="glUniform2fv" fullname="QGLFunctions::glUniform2fv" href="qglfunctions.html#glUniform2fv" location="qglfunctions.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="glUniform2fv(GLint location, GLsizei count, const GLfloat * v)">
                <parameter left="GLint" right="" name="location" default=""/>
                <parameter left="GLsizei" right="" name="count" default=""/>
                <parameter left="const GLfloat *" right="" name="v" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="glUniform2i" fullname="QGLFunctions::glUniform2i" href="qglfunctions.html#glUniform2i" location="qglfunctions.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="glUniform2i(GLint location, GLint x, GLint y)">
                <parameter left="GLint" right="" name="location" default=""/>
                <parameter left="GLint" right="" name="x" default=""/>
                <parameter left="GLint" right="" name="y" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="glUniform2iv" fullname="QGLFunctions::glUniform2iv" href="qglfunctions.html#glUniform2iv" location="qglfunctions.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="glUniform2iv(GLint location, GLsizei count, const GLint * v)">
                <parameter left="GLint" right="" name="location" default=""/>
                <parameter left="GLsizei" right="" name="count" default=""/>
                <parameter left="const GLint *" right="" name="v" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="glUniform3f" fullname="QGLFunctions::glUniform3f" href="qglfunctions.html#glUniform3f" location="qglfunctions.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="glUniform3f(GLint location, GLfloat x, GLfloat y, GLfloat z)">
                <parameter left="GLint" right="" name="location" default=""/>
                <parameter left="GLfloat" right="" name="x" default=""/>
                <parameter left="GLfloat" right="" name="y" default=""/>
                <parameter left="GLfloat" right="" name="z" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="glUniform3fv" fullname="QGLFunctions::glUniform3fv" href="qglfunctions.html#glUniform3fv" location="qglfunctions.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="glUniform3fv(GLint location, GLsizei count, const GLfloat * v)">
                <parameter left="GLint" right="" name="location" default=""/>
                <parameter left="GLsizei" right="" name="count" default=""/>
                <parameter left="const GLfloat *" right="" name="v" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="glUniform3i" fullname="QGLFunctions::glUniform3i" href="qglfunctions.html#glUniform3i" location="qglfunctions.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="glUniform3i(GLint location, GLint x, GLint y, GLint z)">
                <parameter left="GLint" right="" name="location" default=""/>
                <parameter left="GLint" right="" name="x" default=""/>
                <parameter left="GLint" right="" name="y" default=""/>
                <parameter left="GLint" right="" name="z" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="glUniform3iv" fullname="QGLFunctions::glUniform3iv" href="qglfunctions.html#glUniform3iv" location="qglfunctions.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="glUniform3iv(GLint location, GLsizei count, const GLint * v)">
                <parameter left="GLint" right="" name="location" default=""/>
                <parameter left="GLsizei" right="" name="count" default=""/>
                <parameter left="const GLint *" right="" name="v" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="glUniform4f" fullname="QGLFunctions::glUniform4f" href="qglfunctions.html#glUniform4f" location="qglfunctions.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="glUniform4f(GLint location, GLfloat x, GLfloat y, GLfloat z, GLfloat w)">
                <parameter left="GLint" right="" name="location" default=""/>
                <parameter left="GLfloat" right="" name="x" default=""/>
                <parameter left="GLfloat" right="" name="y" default=""/>
                <parameter left="GLfloat" right="" name="z" default=""/>
                <parameter left="GLfloat" right="" name="w" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="glUniform4fv" fullname="QGLFunctions::glUniform4fv" href="qglfunctions.html#glUniform4fv" location="qglfunctions.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="glUniform4fv(GLint location, GLsizei count, const GLfloat * v)">
                <parameter left="GLint" right="" name="location" default=""/>
                <parameter left="GLsizei" right="" name="count" default=""/>
                <parameter left="const GLfloat *" right="" name="v" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="glUniform4i" fullname="QGLFunctions::glUniform4i" href="qglfunctions.html#glUniform4i" location="qglfunctions.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="glUniform4i(GLint location, GLint x, GLint y, GLint z, GLint w)">
                <parameter left="GLint" right="" name="location" default=""/>
                <parameter left="GLint" right="" name="x" default=""/>
                <parameter left="GLint" right="" name="y" default=""/>
                <parameter left="GLint" right="" name="z" default=""/>
                <parameter left="GLint" right="" name="w" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="glUniform4iv" fullname="QGLFunctions::glUniform4iv" href="qglfunctions.html#glUniform4iv" location="qglfunctions.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="glUniform4iv(GLint location, GLsizei count, const GLint * v)">
                <parameter left="GLint" right="" name="location" default=""/>
                <parameter left="GLsizei" right="" name="count" default=""/>
                <parameter left="const GLint *" right="" name="v" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="glUniformMatrix2fv" fullname="QGLFunctions::glUniformMatrix2fv" href="qglfunctions.html#glUniformMatrix2fv" location="qglfunctions.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="glUniformMatrix2fv(GLint location, GLsizei count, GLboolean transpose, const GLfloat * value)">
                <parameter left="GLint" right="" name="location" default=""/>
                <parameter left="GLsizei" right="" name="count" default=""/>
                <parameter left="GLboolean" right="" name="transpose" default=""/>
                <parameter left="const GLfloat *" right="" name="value" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="glUniformMatrix3fv" fullname="QGLFunctions::glUniformMatrix3fv" href="qglfunctions.html#glUniformMatrix3fv" location="qglfunctions.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="glUniformMatrix3fv(GLint location, GLsizei count, GLboolean transpose, const GLfloat * value)">
                <parameter left="GLint" right="" name="location" default=""/>
                <parameter left="GLsizei" right="" name="count" default=""/>
                <parameter left="GLboolean" right="" name="transpose" default=""/>
                <parameter left="const GLfloat *" right="" name="value" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="glUniformMatrix4fv" fullname="QGLFunctions::glUniformMatrix4fv" href="qglfunctions.html#glUniformMatrix4fv" location="qglfunctions.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="glUniformMatrix4fv(GLint location, GLsizei count, GLboolean transpose, const GLfloat * value)">
                <parameter left="GLint" right="" name="location" default=""/>
                <parameter left="GLsizei" right="" name="count" default=""/>
                <parameter left="GLboolean" right="" name="transpose" default=""/>
                <parameter left="const GLfloat *" right="" name="value" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="glUseProgram" fullname="QGLFunctions::glUseProgram" href="qglfunctions.html#glUseProgram" location="qglfunctions.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="glUseProgram(GLuint program)">
                <parameter left="GLuint" right="" name="program" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="glValidateProgram" fullname="QGLFunctions::glValidateProgram" href="qglfunctions.html#glValidateProgram" location="qglfunctions.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="glValidateProgram(GLuint program)">
                <parameter left="GLuint" right="" name="program" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="glVertexAttrib1f" fullname="QGLFunctions::glVertexAttrib1f" href="qglfunctions.html#glVertexAttrib1f" location="qglfunctions.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="glVertexAttrib1f(GLuint indx, GLfloat x)">
                <parameter left="GLuint" right="" name="indx" default=""/>
                <parameter left="GLfloat" right="" name="x" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="glVertexAttrib1fv" fullname="QGLFunctions::glVertexAttrib1fv" href="qglfunctions.html#glVertexAttrib1fv" location="qglfunctions.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="glVertexAttrib1fv(GLuint indx, const GLfloat * values)">
                <parameter left="GLuint" right="" name="indx" default=""/>
                <parameter left="const GLfloat *" right="" name="values" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="glVertexAttrib2f" fullname="QGLFunctions::glVertexAttrib2f" href="qglfunctions.html#glVertexAttrib2f" location="qglfunctions.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="glVertexAttrib2f(GLuint indx, GLfloat x, GLfloat y)">
                <parameter left="GLuint" right="" name="indx" default=""/>
                <parameter left="GLfloat" right="" name="x" default=""/>
                <parameter left="GLfloat" right="" name="y" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="glVertexAttrib2fv" fullname="QGLFunctions::glVertexAttrib2fv" href="qglfunctions.html#glVertexAttrib2fv" location="qglfunctions.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="glVertexAttrib2fv(GLuint indx, const GLfloat * values)">
                <parameter left="GLuint" right="" name="indx" default=""/>
                <parameter left="const GLfloat *" right="" name="values" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="glVertexAttrib3f" fullname="QGLFunctions::glVertexAttrib3f" href="qglfunctions.html#glVertexAttrib3f" location="qglfunctions.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="glVertexAttrib3f(GLuint indx, GLfloat x, GLfloat y, GLfloat z)">
                <parameter left="GLuint" right="" name="indx" default=""/>
                <parameter left="GLfloat" right="" name="x" default=""/>
                <parameter left="GLfloat" right="" name="y" default=""/>
                <parameter left="GLfloat" right="" name="z" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="glVertexAttrib3fv" fullname="QGLFunctions::glVertexAttrib3fv" href="qglfunctions.html#glVertexAttrib3fv" location="qglfunctions.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="glVertexAttrib3fv(GLuint indx, const GLfloat * values)">
                <parameter left="GLuint" right="" name="indx" default=""/>
                <parameter left="const GLfloat *" right="" name="values" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="glVertexAttrib4f" fullname="QGLFunctions::glVertexAttrib4f" href="qglfunctions.html#glVertexAttrib4f" location="qglfunctions.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="glVertexAttrib4f(GLuint indx, GLfloat x, GLfloat y, GLfloat z, GLfloat w)">
                <parameter left="GLuint" right="" name="indx" default=""/>
                <parameter left="GLfloat" right="" name="x" default=""/>
                <parameter left="GLfloat" right="" name="y" default=""/>
                <parameter left="GLfloat" right="" name="z" default=""/>
                <parameter left="GLfloat" right="" name="w" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="glVertexAttrib4fv" fullname="QGLFunctions::glVertexAttrib4fv" href="qglfunctions.html#glVertexAttrib4fv" location="qglfunctions.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="glVertexAttrib4fv(GLuint indx, const GLfloat * values)">
                <parameter left="GLuint" right="" name="indx" default=""/>
                <parameter left="const GLfloat *" right="" name="values" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="glVertexAttribPointer" fullname="QGLFunctions::glVertexAttribPointer" href="qglfunctions.html#glVertexAttribPointer" location="qglfunctions.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="glVertexAttribPointer(GLuint indx, GLint size, GLenum type, GLboolean normalized, GLsizei stride, const void * ptr)">
                <parameter left="GLuint" right="" name="indx" default=""/>
                <parameter left="GLint" right="" name="size" default=""/>
                <parameter left="GLenum" right="" name="type" default=""/>
                <parameter left="GLboolean" right="" name="normalized" default=""/>
                <parameter left="GLsizei" right="" name="stride" default=""/>
                <parameter left="const void *" right="" name="ptr" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="hasOpenGLFeature" fullname="QGLFunctions::hasOpenGLFeature" href="qglfunctions.html#hasOpenGLFeature" location="qglfunctions.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="bool" signature="hasOpenGLFeature(QGLFunctions::OpenGLFeature feature) const">
                <parameter left="QGLFunctions::OpenGLFeature" right="" name="feature" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="initializeGLFunctions" fullname="QGLFunctions::initializeGLFunctions" href="qglfunctions.html#initializeGLFunctions" location="qglfunctions.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="initializeGLFunctions(const QGLContext * context)">
                <parameter left="const QGLContext *" right="" name="context" default="0"/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="openGLFeatures" fullname="QGLFunctions::openGLFeatures" href="qglfunctions.html#openGLFeatures" location="qglfunctions.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QGLFunctions::OpenGLFeatures" signature="openGLFeatures() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="~QGLFunctions" fullname="QGLFunctions::~QGLFunctions" href="qglfunctions.html#dtor.QGLFunctions" location="qglfunctions.h" virtual="non" meta="destructor" const="false" static="false" overload="false" type="" signature="~QGLFunctions()"/>
        </class>
        <class access="public" threadsafety="unspecified" status="obsolete" name="QGLPixelBuffer" href="qglpixelbuffer.html" location="qglpixelbuffer.h" since="4.1" bases="QPaintDevice" module="QtOpenGL" groups="painting-3D">
            <contents name="threading" title="Threading" level="1"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="bindToDynamicTexture" fullname="QGLPixelBuffer::bindToDynamicTexture" href="qglpixelbuffer.html#bindToDynamicTexture" location="qglpixelbuffer.cpp" virtual="non" meta="plain" const="false" static="false" overload="false" type="bool" signature="bindToDynamicTexture(GLuint texture_id)">
                <parameter left="GLuint" right="" name="texture_id" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="doneCurrent" fullname="QGLPixelBuffer::doneCurrent" href="qglpixelbuffer.html#doneCurrent" location="qglpixelbuffer.cpp" virtual="non" meta="plain" const="false" static="false" overload="false" type="bool" signature="doneCurrent()"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="generateDynamicTexture" fullname="QGLPixelBuffer::generateDynamicTexture" href="qglpixelbuffer.html#generateDynamicTexture" location="qglpixelbuffer.cpp" virtual="non" meta="plain" const="true" static="false" overload="false" type="GLuint" signature="generateDynamicTexture() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="hasOpenGLPbuffers" fullname="QGLPixelBuffer::hasOpenGLPbuffers" href="qglpixelbuffer.html#hasOpenGLPbuffers" location="qglpixelbuffer.cpp" virtual="non" meta="plain" const="false" static="true" overload="false" type="bool" signature="hasOpenGLPbuffers()"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="makeCurrent" fullname="QGLPixelBuffer::makeCurrent" href="qglpixelbuffer.html#makeCurrent" location="qglpixelbuffer.cpp" virtual="non" meta="plain" const="false" static="false" overload="false" type="bool" signature="makeCurrent()"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="releaseFromDynamicTexture" fullname="QGLPixelBuffer::releaseFromDynamicTexture" href="qglpixelbuffer.html#releaseFromDynamicTexture" location="qglpixelbuffer.cpp" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="releaseFromDynamicTexture()"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="~QGLPixelBuffer" fullname="QGLPixelBuffer::~QGLPixelBuffer" href="qglpixelbuffer.html#dtor.QGLPixelBuffer" location="qglpixelbuffer.cpp" virtual="impure" meta="destructor" const="false" static="false" overload="false" type="" signature="~QGLPixelBuffer()"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="QGLPixelBuffer" fullname="QGLPixelBuffer::QGLPixelBuffer" href="qglpixelbuffer.html#QGLPixelBuffer" location="qglpixelbuffer.h" virtual="non" meta="constructor" const="false" static="false" overload="false" type="" signature="QGLPixelBuffer(const QSize &amp; size, const QGLFormat &amp; format, QGLWidget * shareWidget)">
                <parameter left="const QSize &amp;" right="" name="size" default=""/>
                <parameter left="const QGLFormat &amp;" right="" name="format" default="QGLFormat::defaultFormat()"/>
                <parameter left="QGLWidget *" right="" name="shareWidget" default="0"/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="QGLPixelBuffer" fullname="QGLPixelBuffer::QGLPixelBuffer" href="qglpixelbuffer.html#QGLPixelBuffer-2" location="qglpixelbuffer.h" virtual="non" meta="constructor" const="false" static="false" overload="true" overload-number="2" type="" signature="QGLPixelBuffer(int width, int height, const QGLFormat &amp; format, QGLWidget * shareWidget)">
                <parameter left="int" right="" name="width" default=""/>
                <parameter left="int" right="" name="height" default=""/>
                <parameter left="const QGLFormat &amp;" right="" name="format" default="QGLFormat::defaultFormat()"/>
                <parameter left="QGLWidget *" right="" name="shareWidget" default="0"/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="bindTexture" fullname="QGLPixelBuffer::bindTexture" href="qglpixelbuffer.html#bindTexture" location="qglpixelbuffer.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="GLuint" signature="bindTexture(const QImage &amp; image, GLenum target)">
                <parameter left="const QImage &amp;" right="" name="image" default=""/>
                <parameter left="GLenum" right="" name="target" default="GL_TEXTURE_2D"/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="bindTexture" fullname="QGLPixelBuffer::bindTexture" href="qglpixelbuffer.html#bindTexture-2" location="qglpixelbuffer.h" virtual="non" meta="plain" const="false" static="false" overload="true" overload-number="2" type="GLuint" signature="bindTexture(const QPixmap &amp; pixmap, GLenum target)">
                <parameter left="const QPixmap &amp;" right="" name="pixmap" default=""/>
                <parameter left="GLenum" right="" name="target" default="GL_TEXTURE_2D"/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="bindTexture" fullname="QGLPixelBuffer::bindTexture" href="qglpixelbuffer.html#bindTexture-3" location="qglpixelbuffer.h" virtual="non" meta="plain" const="false" static="false" overload="true" overload-number="3" type="GLuint" signature="bindTexture(const QString &amp; fileName)">
                <parameter left="const QString &amp;" right="" name="fileName" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="context" fullname="QGLPixelBuffer::context" href="qglpixelbuffer.html#context" location="qglpixelbuffer.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QGLContext *" signature="context() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="deleteTexture" fullname="QGLPixelBuffer::deleteTexture" href="qglpixelbuffer.html#deleteTexture" location="qglpixelbuffer.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="deleteTexture(GLuint texture_id)">
                <parameter left="GLuint" right="" name="texture_id" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="drawTexture" fullname="QGLPixelBuffer::drawTexture" href="qglpixelbuffer.html#drawTexture-2" location="qglpixelbuffer.h" since="4.4" virtual="non" meta="plain" const="false" static="false" overload="true" overload-number="2" type="void" signature="drawTexture(const QPointF &amp; point, GLuint textureId, GLenum textureTarget)">
                <parameter left="const QPointF &amp;" right="" name="point" default=""/>
                <parameter left="GLuint" right="" name="textureId" default=""/>
                <parameter left="GLenum" right="" name="textureTarget" default="GL_TEXTURE_2D"/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="drawTexture" fullname="QGLPixelBuffer::drawTexture" href="qglpixelbuffer.html#drawTexture" location="qglpixelbuffer.h" since="4.4" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="drawTexture(const QRectF &amp; target, GLuint textureId, GLenum textureTarget)">
                <parameter left="const QRectF &amp;" right="" name="target" default=""/>
                <parameter left="GLuint" right="" name="textureId" default=""/>
                <parameter left="GLenum" right="" name="textureTarget" default="GL_TEXTURE_2D"/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="format" fullname="QGLPixelBuffer::format" href="qglpixelbuffer.html#format" location="qglpixelbuffer.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QGLFormat" signature="format() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="handle" fullname="QGLPixelBuffer::handle" href="qglpixelbuffer.html#handle" location="qglpixelbuffer.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="Qt::HANDLE" signature="handle() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="isValid" fullname="QGLPixelBuffer::isValid" href="qglpixelbuffer.html#isValid" location="qglpixelbuffer.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="bool" signature="isValid() const"/>
            <function access="protected" threadsafety="unspecified" status="commendable" name="metric" fullname="QGLPixelBuffer::metric" href="qglpixelbuffer.html#metric" location="qglpixelbuffer.h" virtual="impure" meta="plain" const="true" static="false" overload="false" type="int" signature="metric(PaintDeviceMetric metric) const">
                <parameter left="PaintDeviceMetric" right="" name="metric" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="paintEngine" fullname="QGLPixelBuffer::paintEngine" href="qglpixelbuffer.html#paintEngine" location="qglpixelbuffer.h" virtual="impure" meta="plain" const="true" static="false" overload="false" type="QPaintEngine *" signature="paintEngine() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="size" fullname="QGLPixelBuffer::size" href="qglpixelbuffer.html#size" location="qglpixelbuffer.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QSize" signature="size() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="toImage" fullname="QGLPixelBuffer::toImage" href="qglpixelbuffer.html#toImage" location="qglpixelbuffer.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QImage" signature="toImage() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="updateDynamicTexture" fullname="QGLPixelBuffer::updateDynamicTexture" href="qglpixelbuffer.html#updateDynamicTexture" location="qglpixelbuffer.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="void" signature="updateDynamicTexture(GLuint texture_id) const">
                <parameter left="GLuint" right="" name="texture_id" default=""/>
            </function>
        </class>
        <class access="public" threadsafety="unspecified" status="obsolete" name="QGLShader" href="qglshader.html" location="qglshaderprogram.h" since="4.6" bases="QObject" module="QtOpenGL" groups="painting-3D">
            <enum access="public" threadsafety="unspecified" status="commendable" name="ShaderTypeBit" fullname="QGLShader::ShaderTypeBit" href="qglshader.html#ShaderTypeBit-enum" location="qglshaderprogram.h" typedef="QGLShader::ShaderType">
                <value name="Vertex" value="0x0001"/>
                <value name="Fragment" value="0x0002"/>
                <value name="Geometry" value="0x0004"/>
            </enum>
            <typedef access="public" threadsafety="unspecified" status="commendable" name="ShaderType" fullname="QGLShader::ShaderType" href="qglshader.html#ShaderType-typedef" location="qglshaderprogram.h" enum="QGLShader::ShaderTypeBit"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="QGLShader" fullname="QGLShader::QGLShader" href="qglshader.html#QGLShader" location="qglshaderprogram.h" virtual="non" meta="constructor" const="false" static="false" overload="false" type="" signature="QGLShader(QFlags&lt;QGLShader::ShaderTypeBit&gt; type, QObject * parent)">
                <parameter left="QFlags&lt;QGLShader::ShaderTypeBit&gt;" right="" name="type" default=""/>
                <parameter left="QObject *" right="" name="parent" default="0"/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="QGLShader" fullname="QGLShader::QGLShader" href="qglshader.html#QGLShader-2" location="qglshaderprogram.h" virtual="non" meta="constructor" const="false" static="false" overload="true" overload-number="2" type="" signature="QGLShader(QFlags&lt;QGLShader::ShaderTypeBit&gt; type, const QGLContext * context, QObject * parent)">
                <parameter left="QFlags&lt;QGLShader::ShaderTypeBit&gt;" right="" name="type" default=""/>
                <parameter left="const QGLContext *" right="" name="context" default=""/>
                <parameter left="QObject *" right="" name="parent" default="0"/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="compileSourceCode" fullname="QGLShader::compileSourceCode" href="qglshader.html#compileSourceCode-2" location="qglshaderprogram.h" virtual="non" meta="plain" const="false" static="false" overload="true" overload-number="2" type="bool" signature="compileSourceCode(const QByteArray &amp; source)">
                <parameter left="const QByteArray &amp;" right="" name="source" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="compileSourceCode" fullname="QGLShader::compileSourceCode" href="qglshader.html#compileSourceCode-3" location="qglshaderprogram.h" virtual="non" meta="plain" const="false" static="false" overload="true" overload-number="3" type="bool" signature="compileSourceCode(const QString &amp; source)">
                <parameter left="const QString &amp;" right="" name="source" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="compileSourceCode" fullname="QGLShader::compileSourceCode" href="qglshader.html#compileSourceCode" location="qglshaderprogram.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="bool" signature="compileSourceCode(const char * source)">
                <parameter left="const char *" right="" name="source" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="compileSourceFile" fullname="QGLShader::compileSourceFile" href="qglshader.html#compileSourceFile" location="qglshaderprogram.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="bool" signature="compileSourceFile(const QString &amp; fileName)">
                <parameter left="const QString &amp;" right="" name="fileName" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="hasOpenGLShaders" fullname="QGLShader::hasOpenGLShaders" href="qglshader.html#hasOpenGLShaders" location="qglshaderprogram.h" since="4.7" virtual="non" meta="plain" const="false" static="true" overload="false" type="bool" signature="hasOpenGLShaders(QFlags&lt;QGLShader::ShaderTypeBit&gt; type, const QGLContext * context)">
                <parameter left="QFlags&lt;QGLShader::ShaderTypeBit&gt;" right="" name="type" default=""/>
                <parameter left="const QGLContext *" right="" name="context" default="0"/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="isCompiled" fullname="QGLShader::isCompiled" href="qglshader.html#isCompiled" location="qglshaderprogram.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="bool" signature="isCompiled() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="log" fullname="QGLShader::log" href="qglshader.html#log" location="qglshaderprogram.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QString" signature="log() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="shaderId" fullname="QGLShader::shaderId" href="qglshader.html#shaderId" location="qglshaderprogram.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="GLuint" signature="shaderId() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="shaderType" fullname="QGLShader::shaderType" href="qglshader.html#shaderType" location="qglshaderprogram.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QGLShader::ShaderType" signature="shaderType() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="sourceCode" fullname="QGLShader::sourceCode" href="qglshader.html#sourceCode" location="qglshaderprogram.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QByteArray" signature="sourceCode() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="~QGLShader" fullname="QGLShader::~QGLShader" href="qglshader.html#dtor.QGLShader" location="qglshaderprogram.h" virtual="impure" meta="destructor" const="false" static="false" overload="false" type="" signature="~QGLShader()"/>
        </class>
        <class access="public" threadsafety="unspecified" status="obsolete" name="QGLShaderProgram" href="qglshaderprogram.html" location="qglshaderprogram.h" since="4.6" bases="QObject" module="QtOpenGL" groups="painting-3D">
            <contents name="introduction" title="Introduction" level="1"/>
            <contents name="writing-portable-shaders" title="Writing portable shaders" level="1"/>
            <contents name="simple-shader-example" title="Simple shader example" level="1"/>
            <contents name="binary-shaders-and-programs" title="Binary shaders and programs" level="1"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="QGLShaderProgram" fullname="QGLShaderProgram::QGLShaderProgram" href="qglshaderprogram.html#QGLShaderProgram" location="qglshaderprogram.h" virtual="non" meta="constructor" const="false" static="false" overload="false" type="" signature="QGLShaderProgram(QObject * parent)">
                <parameter left="QObject *" right="" name="parent" default="0"/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="QGLShaderProgram" fullname="QGLShaderProgram::QGLShaderProgram" href="qglshaderprogram.html#QGLShaderProgram-2" location="qglshaderprogram.h" virtual="non" meta="constructor" const="false" static="false" overload="true" overload-number="2" type="" signature="QGLShaderProgram(const QGLContext * context, QObject * parent)">
                <parameter left="const QGLContext *" right="" name="context" default=""/>
                <parameter left="QObject *" right="" name="parent" default="0"/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="addShader" fullname="QGLShaderProgram::addShader" href="qglshaderprogram.html#addShader" location="qglshaderprogram.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="bool" signature="addShader(QGLShader * shader)">
                <parameter left="QGLShader *" right="" name="shader" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="addShaderFromSourceCode" fullname="QGLShaderProgram::addShaderFromSourceCode" href="qglshaderprogram.html#addShaderFromSourceCode-2" location="qglshaderprogram.h" virtual="non" meta="plain" const="false" static="false" overload="true" overload-number="2" type="bool" signature="addShaderFromSourceCode(QFlags&lt;QGLShader::ShaderTypeBit&gt; type, const QByteArray &amp; source)">
                <parameter left="QFlags&lt;QGLShader::ShaderTypeBit&gt;" right="" name="type" default=""/>
                <parameter left="const QByteArray &amp;" right="" name="source" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="addShaderFromSourceCode" fullname="QGLShaderProgram::addShaderFromSourceCode" href="qglshaderprogram.html#addShaderFromSourceCode-3" location="qglshaderprogram.h" virtual="non" meta="plain" const="false" static="false" overload="true" overload-number="3" type="bool" signature="addShaderFromSourceCode(QFlags&lt;QGLShader::ShaderTypeBit&gt; type, const QString &amp; source)">
                <parameter left="QFlags&lt;QGLShader::ShaderTypeBit&gt;" right="" name="type" default=""/>
                <parameter left="const QString &amp;" right="" name="source" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="addShaderFromSourceCode" fullname="QGLShaderProgram::addShaderFromSourceCode" href="qglshaderprogram.html#addShaderFromSourceCode" location="qglshaderprogram.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="bool" signature="addShaderFromSourceCode(QFlags&lt;QGLShader::ShaderTypeBit&gt; type, const char * source)">
                <parameter left="QFlags&lt;QGLShader::ShaderTypeBit&gt;" right="" name="type" default=""/>
                <parameter left="const char *" right="" name="source" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="addShaderFromSourceFile" fullname="QGLShaderProgram::addShaderFromSourceFile" href="qglshaderprogram.html#addShaderFromSourceFile" location="qglshaderprogram.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="bool" signature="addShaderFromSourceFile(QFlags&lt;QGLShader::ShaderTypeBit&gt; type, const QString &amp; fileName)">
                <parameter left="QFlags&lt;QGLShader::ShaderTypeBit&gt;" right="" name="type" default=""/>
                <parameter left="const QString &amp;" right="" name="fileName" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="attributeLocation" fullname="QGLShaderProgram::attributeLocation" href="qglshaderprogram.html#attributeLocation-2" location="qglshaderprogram.h" virtual="non" meta="plain" const="true" static="false" overload="true" overload-number="2" type="int" signature="attributeLocation(const QByteArray &amp; name) const">
                <parameter left="const QByteArray &amp;" right="" name="name" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="attributeLocation" fullname="QGLShaderProgram::attributeLocation" href="qglshaderprogram.html#attributeLocation-3" location="qglshaderprogram.h" virtual="non" meta="plain" const="true" static="false" overload="true" overload-number="3" type="int" signature="attributeLocation(const QString &amp; name) const">
                <parameter left="const QString &amp;" right="" name="name" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="attributeLocation" fullname="QGLShaderProgram::attributeLocation" href="qglshaderprogram.html#attributeLocation" location="qglshaderprogram.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="int" signature="attributeLocation(const char * name) const">
                <parameter left="const char *" right="" name="name" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="bind" fullname="QGLShaderProgram::bind" href="qglshaderprogram.html#bind" location="qglshaderprogram.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="bool" signature="bind()"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="bindAttributeLocation" fullname="QGLShaderProgram::bindAttributeLocation" href="qglshaderprogram.html#bindAttributeLocation-2" location="qglshaderprogram.h" virtual="non" meta="plain" const="false" static="false" overload="true" overload-number="2" type="void" signature="bindAttributeLocation(const QByteArray &amp; name, int location)">
                <parameter left="const QByteArray &amp;" right="" name="name" default=""/>
                <parameter left="int" right="" name="location" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="bindAttributeLocation" fullname="QGLShaderProgram::bindAttributeLocation" href="qglshaderprogram.html#bindAttributeLocation-3" location="qglshaderprogram.h" virtual="non" meta="plain" const="false" static="false" overload="true" overload-number="3" type="void" signature="bindAttributeLocation(const QString &amp; name, int location)">
                <parameter left="const QString &amp;" right="" name="name" default=""/>
                <parameter left="int" right="" name="location" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="bindAttributeLocation" fullname="QGLShaderProgram::bindAttributeLocation" href="qglshaderprogram.html#bindAttributeLocation" location="qglshaderprogram.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="bindAttributeLocation(const char * name, int location)">
                <parameter left="const char *" right="" name="name" default=""/>
                <parameter left="int" right="" name="location" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="disableAttributeArray" fullname="QGLShaderProgram::disableAttributeArray" href="qglshaderprogram.html#disableAttributeArray-2" location="qglshaderprogram.h" virtual="non" meta="plain" const="false" static="false" overload="true" overload-number="2" type="void" signature="disableAttributeArray(const char * name)">
                <parameter left="const char *" right="" name="name" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="disableAttributeArray" fullname="QGLShaderProgram::disableAttributeArray" href="qglshaderprogram.html#disableAttributeArray" location="qglshaderprogram.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="disableAttributeArray(int location)">
                <parameter left="int" right="" name="location" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="enableAttributeArray" fullname="QGLShaderProgram::enableAttributeArray" href="qglshaderprogram.html#enableAttributeArray-2" location="qglshaderprogram.h" virtual="non" meta="plain" const="false" static="false" overload="true" overload-number="2" type="void" signature="enableAttributeArray(const char * name)">
                <parameter left="const char *" right="" name="name" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="enableAttributeArray" fullname="QGLShaderProgram::enableAttributeArray" href="qglshaderprogram.html#enableAttributeArray" location="qglshaderprogram.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="enableAttributeArray(int location)">
                <parameter left="int" right="" name="location" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="geometryInputType" fullname="QGLShaderProgram::geometryInputType" href="qglshaderprogram.html#geometryInputType" location="qglshaderprogram.h" since="4.7" virtual="non" meta="plain" const="true" static="false" overload="false" type="GLenum" signature="geometryInputType() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="geometryOutputType" fullname="QGLShaderProgram::geometryOutputType" href="qglshaderprogram.html#geometryOutputType" location="qglshaderprogram.h" since="4.7" virtual="non" meta="plain" const="true" static="false" overload="false" type="GLenum" signature="geometryOutputType() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="geometryOutputVertexCount" fullname="QGLShaderProgram::geometryOutputVertexCount" href="qglshaderprogram.html#geometryOutputVertexCount" location="qglshaderprogram.h" since="4.7" virtual="non" meta="plain" const="true" static="false" overload="false" type="int" signature="geometryOutputVertexCount() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="hasOpenGLShaderPrograms" fullname="QGLShaderProgram::hasOpenGLShaderPrograms" href="qglshaderprogram.html#hasOpenGLShaderPrograms" location="qglshaderprogram.h" virtual="non" meta="plain" const="false" static="true" overload="false" type="bool" signature="hasOpenGLShaderPrograms(const QGLContext * context)">
                <parameter left="const QGLContext *" right="" name="context" default="0"/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="isLinked" fullname="QGLShaderProgram::isLinked" href="qglshaderprogram.html#isLinked" location="qglshaderprogram.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="bool" signature="isLinked() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="link" fullname="QGLShaderProgram::link" href="qglshaderprogram.html#link" location="qglshaderprogram.h" virtual="impure" meta="plain" const="false" static="false" overload="false" type="bool" signature="link()"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="log" fullname="QGLShaderProgram::log" href="qglshaderprogram.html#log" location="qglshaderprogram.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QString" signature="log() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="maxGeometryOutputVertices" fullname="QGLShaderProgram::maxGeometryOutputVertices" href="qglshaderprogram.html#maxGeometryOutputVertices" location="qglshaderprogram.h" since="4.7" virtual="non" meta="plain" const="true" static="false" overload="false" type="int" signature="maxGeometryOutputVertices() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="programId" fullname="QGLShaderProgram::programId" href="qglshaderprogram.html#programId" location="qglshaderprogram.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="GLuint" signature="programId() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="release" fullname="QGLShaderProgram::release" href="qglshaderprogram.html#release" location="qglshaderprogram.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="release()"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="removeAllShaders" fullname="QGLShaderProgram::removeAllShaders" href="qglshaderprogram.html#removeAllShaders" location="qglshaderprogram.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="removeAllShaders()"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="removeShader" fullname="QGLShaderProgram::removeShader" href="qglshaderprogram.html#removeShader" location="qglshaderprogram.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="removeShader(QGLShader * shader)">
                <parameter left="QGLShader *" right="" name="shader" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setAttributeArray" fullname="QGLShaderProgram::setAttributeArray" href="qglshaderprogram.html#setAttributeArray-10" location="qglshaderprogram.h" since="4.7" virtual="non" meta="plain" const="false" static="false" overload="true" overload-number="10" type="void" signature="setAttributeArray(const char * name, GLenum type, const void * values, int tupleSize, int stride)">
                <parameter left="const char *" right="" name="name" default=""/>
                <parameter left="GLenum" right="" name="type" default=""/>
                <parameter left="const void *" right="" name="values" default=""/>
                <parameter left="int" right="" name="tupleSize" default=""/>
                <parameter left="int" right="" name="stride" default="0"/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setAttributeArray" fullname="QGLShaderProgram::setAttributeArray" href="qglshaderprogram.html#setAttributeArray-6" location="qglshaderprogram.h" virtual="non" meta="plain" const="false" static="false" overload="true" overload-number="6" type="void" signature="setAttributeArray(const char * name, const GLfloat * values, int tupleSize, int stride)">
                <parameter left="const char *" right="" name="name" default=""/>
                <parameter left="const GLfloat *" right="" name="values" default=""/>
                <parameter left="int" right="" name="tupleSize" default=""/>
                <parameter left="int" right="" name="stride" default="0"/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setAttributeArray" fullname="QGLShaderProgram::setAttributeArray" href="qglshaderprogram.html#setAttributeArray-7" location="qglshaderprogram.h" virtual="non" meta="plain" const="false" static="false" overload="true" overload-number="7" type="void" signature="setAttributeArray(const char * name, const QVector2D * values, int stride)">
                <parameter left="const char *" right="" name="name" default=""/>
                <parameter left="const QVector2D *" right="" name="values" default=""/>
                <parameter left="int" right="" name="stride" default="0"/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setAttributeArray" fullname="QGLShaderProgram::setAttributeArray" href="qglshaderprogram.html#setAttributeArray-8" location="qglshaderprogram.h" virtual="non" meta="plain" const="false" static="false" overload="true" overload-number="8" type="void" signature="setAttributeArray(const char * name, const QVector3D * values, int stride)">
                <parameter left="const char *" right="" name="name" default=""/>
                <parameter left="const QVector3D *" right="" name="values" default=""/>
                <parameter left="int" right="" name="stride" default="0"/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setAttributeArray" fullname="QGLShaderProgram::setAttributeArray" href="qglshaderprogram.html#setAttributeArray-9" location="qglshaderprogram.h" virtual="non" meta="plain" const="false" static="false" overload="true" overload-number="9" type="void" signature="setAttributeArray(const char * name, const QVector4D * values, int stride)">
                <parameter left="const char *" right="" name="name" default=""/>
                <parameter left="const QVector4D *" right="" name="values" default=""/>
                <parameter left="int" right="" name="stride" default="0"/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setAttributeArray" fullname="QGLShaderProgram::setAttributeArray" href="qglshaderprogram.html#setAttributeArray-5" location="qglshaderprogram.h" since="4.7" virtual="non" meta="plain" const="false" static="false" overload="true" overload-number="5" type="void" signature="setAttributeArray(int location, GLenum type, const void * values, int tupleSize, int stride)">
                <parameter left="int" right="" name="location" default=""/>
                <parameter left="GLenum" right="" name="type" default=""/>
                <parameter left="const void *" right="" name="values" default=""/>
                <parameter left="int" right="" name="tupleSize" default=""/>
                <parameter left="int" right="" name="stride" default="0"/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setAttributeArray" fullname="QGLShaderProgram::setAttributeArray" href="qglshaderprogram.html#setAttributeArray" location="qglshaderprogram.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setAttributeArray(int location, const GLfloat * values, int tupleSize, int stride)">
                <parameter left="int" right="" name="location" default=""/>
                <parameter left="const GLfloat *" right="" name="values" default=""/>
                <parameter left="int" right="" name="tupleSize" default=""/>
                <parameter left="int" right="" name="stride" default="0"/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setAttributeArray" fullname="QGLShaderProgram::setAttributeArray" href="qglshaderprogram.html#setAttributeArray-2" location="qglshaderprogram.h" virtual="non" meta="plain" const="false" static="false" overload="true" overload-number="2" type="void" signature="setAttributeArray(int location, const QVector2D * values, int stride)">
                <parameter left="int" right="" name="location" default=""/>
                <parameter left="const QVector2D *" right="" name="values" default=""/>
                <parameter left="int" right="" name="stride" default="0"/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setAttributeArray" fullname="QGLShaderProgram::setAttributeArray" href="qglshaderprogram.html#setAttributeArray-3" location="qglshaderprogram.h" virtual="non" meta="plain" const="false" static="false" overload="true" overload-number="3" type="void" signature="setAttributeArray(int location, const QVector3D * values, int stride)">
                <parameter left="int" right="" name="location" default=""/>
                <parameter left="const QVector3D *" right="" name="values" default=""/>
                <parameter left="int" right="" name="stride" default="0"/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setAttributeArray" fullname="QGLShaderProgram::setAttributeArray" href="qglshaderprogram.html#setAttributeArray-4" location="qglshaderprogram.h" virtual="non" meta="plain" const="false" static="false" overload="true" overload-number="4" type="void" signature="setAttributeArray(int location, const QVector4D * values, int stride)">
                <parameter left="int" right="" name="location" default=""/>
                <parameter left="const QVector4D *" right="" name="values" default=""/>
                <parameter left="int" right="" name="stride" default="0"/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setAttributeBuffer" fullname="QGLShaderProgram::setAttributeBuffer" href="qglshaderprogram.html#setAttributeBuffer-2" location="qglshaderprogram.h" since="4.7" virtual="non" meta="plain" const="false" static="false" overload="true" overload-number="2" type="void" signature="setAttributeBuffer(const char * name, GLenum type, int offset, int tupleSize, int stride)">
                <parameter left="const char *" right="" name="name" default=""/>
                <parameter left="GLenum" right="" name="type" default=""/>
                <parameter left="int" right="" name="offset" default=""/>
                <parameter left="int" right="" name="tupleSize" default=""/>
                <parameter left="int" right="" name="stride" default="0"/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setAttributeBuffer" fullname="QGLShaderProgram::setAttributeBuffer" href="qglshaderprogram.html#setAttributeBuffer" location="qglshaderprogram.h" since="4.7" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setAttributeBuffer(int location, GLenum type, int offset, int tupleSize, int stride)">
                <parameter left="int" right="" name="location" default=""/>
                <parameter left="GLenum" right="" name="type" default=""/>
                <parameter left="int" right="" name="offset" default=""/>
                <parameter left="int" right="" name="tupleSize" default=""/>
                <parameter left="int" right="" name="stride" default="0"/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setAttributeValue" fullname="QGLShaderProgram::setAttributeValue" href="qglshaderprogram.html#setAttributeValue-10" location="qglshaderprogram.h" virtual="non" meta="plain" const="false" static="false" overload="true" overload-number="10" type="void" signature="setAttributeValue(const char * name, GLfloat value)">
                <parameter left="const char *" right="" name="name" default=""/>
                <parameter left="GLfloat" right="" name="value" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setAttributeValue" fullname="QGLShaderProgram::setAttributeValue" href="qglshaderprogram.html#setAttributeValue-11" location="qglshaderprogram.h" virtual="non" meta="plain" const="false" static="false" overload="true" overload-number="11" type="void" signature="setAttributeValue(const char * name, GLfloat x, GLfloat y)">
                <parameter left="const char *" right="" name="name" default=""/>
                <parameter left="GLfloat" right="" name="x" default=""/>
                <parameter left="GLfloat" right="" name="y" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setAttributeValue" fullname="QGLShaderProgram::setAttributeValue" href="qglshaderprogram.html#setAttributeValue-12" location="qglshaderprogram.h" virtual="non" meta="plain" const="false" static="false" overload="true" overload-number="12" type="void" signature="setAttributeValue(const char * name, GLfloat x, GLfloat y, GLfloat z)">
                <parameter left="const char *" right="" name="name" default=""/>
                <parameter left="GLfloat" right="" name="x" default=""/>
                <parameter left="GLfloat" right="" name="y" default=""/>
                <parameter left="GLfloat" right="" name="z" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setAttributeValue" fullname="QGLShaderProgram::setAttributeValue" href="qglshaderprogram.html#setAttributeValue-13" location="qglshaderprogram.h" virtual="non" meta="plain" const="false" static="false" overload="true" overload-number="13" type="void" signature="setAttributeValue(const char * name, GLfloat x, GLfloat y, GLfloat z, GLfloat w)">
                <parameter left="const char *" right="" name="name" default=""/>
                <parameter left="GLfloat" right="" name="x" default=""/>
                <parameter left="GLfloat" right="" name="y" default=""/>
                <parameter left="GLfloat" right="" name="z" default=""/>
                <parameter left="GLfloat" right="" name="w" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setAttributeValue" fullname="QGLShaderProgram::setAttributeValue" href="qglshaderprogram.html#setAttributeValue-18" location="qglshaderprogram.h" virtual="non" meta="plain" const="false" static="false" overload="true" overload-number="18" type="void" signature="setAttributeValue(const char * name, const GLfloat * values, int columns, int rows)">
                <parameter left="const char *" right="" name="name" default=""/>
                <parameter left="const GLfloat *" right="" name="values" default=""/>
                <parameter left="int" right="" name="columns" default=""/>
                <parameter left="int" right="" name="rows" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setAttributeValue" fullname="QGLShaderProgram::setAttributeValue" href="qglshaderprogram.html#setAttributeValue-17" location="qglshaderprogram.h" virtual="non" meta="plain" const="false" static="false" overload="true" overload-number="17" type="void" signature="setAttributeValue(const char * name, const QColor &amp; value)">
                <parameter left="const char *" right="" name="name" default=""/>
                <parameter left="const QColor &amp;" right="" name="value" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setAttributeValue" fullname="QGLShaderProgram::setAttributeValue" href="qglshaderprogram.html#setAttributeValue-14" location="qglshaderprogram.h" virtual="non" meta="plain" const="false" static="false" overload="true" overload-number="14" type="void" signature="setAttributeValue(const char * name, const QVector2D &amp; value)">
                <parameter left="const char *" right="" name="name" default=""/>
                <parameter left="const QVector2D &amp;" right="" name="value" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setAttributeValue" fullname="QGLShaderProgram::setAttributeValue" href="qglshaderprogram.html#setAttributeValue-15" location="qglshaderprogram.h" virtual="non" meta="plain" const="false" static="false" overload="true" overload-number="15" type="void" signature="setAttributeValue(const char * name, const QVector3D &amp; value)">
                <parameter left="const char *" right="" name="name" default=""/>
                <parameter left="const QVector3D &amp;" right="" name="value" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setAttributeValue" fullname="QGLShaderProgram::setAttributeValue" href="qglshaderprogram.html#setAttributeValue-16" location="qglshaderprogram.h" virtual="non" meta="plain" const="false" static="false" overload="true" overload-number="16" type="void" signature="setAttributeValue(const char * name, const QVector4D &amp; value)">
                <parameter left="const char *" right="" name="name" default=""/>
                <parameter left="const QVector4D &amp;" right="" name="value" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setAttributeValue" fullname="QGLShaderProgram::setAttributeValue" href="qglshaderprogram.html#setAttributeValue" location="qglshaderprogram.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setAttributeValue(int location, GLfloat value)">
                <parameter left="int" right="" name="location" default=""/>
                <parameter left="GLfloat" right="" name="value" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setAttributeValue" fullname="QGLShaderProgram::setAttributeValue" href="qglshaderprogram.html#setAttributeValue-2" location="qglshaderprogram.h" virtual="non" meta="plain" const="false" static="false" overload="true" overload-number="2" type="void" signature="setAttributeValue(int location, GLfloat x, GLfloat y)">
                <parameter left="int" right="" name="location" default=""/>
                <parameter left="GLfloat" right="" name="x" default=""/>
                <parameter left="GLfloat" right="" name="y" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setAttributeValue" fullname="QGLShaderProgram::setAttributeValue" href="qglshaderprogram.html#setAttributeValue-3" location="qglshaderprogram.h" virtual="non" meta="plain" const="false" static="false" overload="true" overload-number="3" type="void" signature="setAttributeValue(int location, GLfloat x, GLfloat y, GLfloat z)">
                <parameter left="int" right="" name="location" default=""/>
                <parameter left="GLfloat" right="" name="x" default=""/>
                <parameter left="GLfloat" right="" name="y" default=""/>
                <parameter left="GLfloat" right="" name="z" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setAttributeValue" fullname="QGLShaderProgram::setAttributeValue" href="qglshaderprogram.html#setAttributeValue-4" location="qglshaderprogram.h" virtual="non" meta="plain" const="false" static="false" overload="true" overload-number="4" type="void" signature="setAttributeValue(int location, GLfloat x, GLfloat y, GLfloat z, GLfloat w)">
                <parameter left="int" right="" name="location" default=""/>
                <parameter left="GLfloat" right="" name="x" default=""/>
                <parameter left="GLfloat" right="" name="y" default=""/>
                <parameter left="GLfloat" right="" name="z" default=""/>
                <parameter left="GLfloat" right="" name="w" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setAttributeValue" fullname="QGLShaderProgram::setAttributeValue" href="qglshaderprogram.html#setAttributeValue-9" location="qglshaderprogram.h" virtual="non" meta="plain" const="false" static="false" overload="true" overload-number="9" type="void" signature="setAttributeValue(int location, const GLfloat * values, int columns, int rows)">
                <parameter left="int" right="" name="location" default=""/>
                <parameter left="const GLfloat *" right="" name="values" default=""/>
                <parameter left="int" right="" name="columns" default=""/>
                <parameter left="int" right="" name="rows" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setAttributeValue" fullname="QGLShaderProgram::setAttributeValue" href="qglshaderprogram.html#setAttributeValue-8" location="qglshaderprogram.h" virtual="non" meta="plain" const="false" static="false" overload="true" overload-number="8" type="void" signature="setAttributeValue(int location, const QColor &amp; value)">
                <parameter left="int" right="" name="location" default=""/>
                <parameter left="const QColor &amp;" right="" name="value" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setAttributeValue" fullname="QGLShaderProgram::setAttributeValue" href="qglshaderprogram.html#setAttributeValue-5" location="qglshaderprogram.h" virtual="non" meta="plain" const="false" static="false" overload="true" overload-number="5" type="void" signature="setAttributeValue(int location, const QVector2D &amp; value)">
                <parameter left="int" right="" name="location" default=""/>
                <parameter left="const QVector2D &amp;" right="" name="value" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setAttributeValue" fullname="QGLShaderProgram::setAttributeValue" href="qglshaderprogram.html#setAttributeValue-6" location="qglshaderprogram.h" virtual="non" meta="plain" const="false" static="false" overload="true" overload-number="6" type="void" signature="setAttributeValue(int location, const QVector3D &amp; value)">
                <parameter left="int" right="" name="location" default=""/>
                <parameter left="const QVector3D &amp;" right="" name="value" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setAttributeValue" fullname="QGLShaderProgram::setAttributeValue" href="qglshaderprogram.html#setAttributeValue-7" location="qglshaderprogram.h" virtual="non" meta="plain" const="false" static="false" overload="true" overload-number="7" type="void" signature="setAttributeValue(int location, const QVector4D &amp; value)">
                <parameter left="int" right="" name="location" default=""/>
                <parameter left="const QVector4D &amp;" right="" name="value" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setGeometryInputType" fullname="QGLShaderProgram::setGeometryInputType" href="qglshaderprogram.html#setGeometryInputType" location="qglshaderprogram.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setGeometryInputType(GLenum inputType)">
                <parameter left="GLenum" right="" name="inputType" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setGeometryOutputType" fullname="QGLShaderProgram::setGeometryOutputType" href="qglshaderprogram.html#setGeometryOutputType" location="qglshaderprogram.h" since="4.7" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setGeometryOutputType(GLenum outputType)">
                <parameter left="GLenum" right="" name="outputType" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setGeometryOutputVertexCount" fullname="QGLShaderProgram::setGeometryOutputVertexCount" href="qglshaderprogram.html#setGeometryOutputVertexCount" location="qglshaderprogram.h" since="4.7" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setGeometryOutputVertexCount(int count)">
                <parameter left="int" right="" name="count" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setUniformValue" fullname="QGLShaderProgram::setUniformValue" href="qglshaderprogram.html#setUniformValue-25" location="qglshaderprogram.h" virtual="non" meta="plain" const="false" static="false" overload="true" overload-number="25" type="void" signature="setUniformValue(const char * name, GLfloat value)">
                <parameter left="const char *" right="" name="name" default=""/>
                <parameter left="GLfloat" right="" name="value" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setUniformValue" fullname="QGLShaderProgram::setUniformValue" href="qglshaderprogram.html#setUniformValue-28" location="qglshaderprogram.h" virtual="non" meta="plain" const="false" static="false" overload="true" overload-number="28" type="void" signature="setUniformValue(const char * name, GLfloat x, GLfloat y)">
                <parameter left="const char *" right="" name="name" default=""/>
                <parameter left="GLfloat" right="" name="x" default=""/>
                <parameter left="GLfloat" right="" name="y" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setUniformValue" fullname="QGLShaderProgram::setUniformValue" href="qglshaderprogram.html#setUniformValue-29" location="qglshaderprogram.h" virtual="non" meta="plain" const="false" static="false" overload="true" overload-number="29" type="void" signature="setUniformValue(const char * name, GLfloat x, GLfloat y, GLfloat z)">
                <parameter left="const char *" right="" name="name" default=""/>
                <parameter left="GLfloat" right="" name="x" default=""/>
                <parameter left="GLfloat" right="" name="y" default=""/>
                <parameter left="GLfloat" right="" name="z" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setUniformValue" fullname="QGLShaderProgram::setUniformValue" href="qglshaderprogram.html#setUniformValue-30" location="qglshaderprogram.h" virtual="non" meta="plain" const="false" static="false" overload="true" overload-number="30" type="void" signature="setUniformValue(const char * name, GLfloat x, GLfloat y, GLfloat z, GLfloat w)">
                <parameter left="const char *" right="" name="name" default=""/>
                <parameter left="GLfloat" right="" name="x" default=""/>
                <parameter left="GLfloat" right="" name="y" default=""/>
                <parameter left="GLfloat" right="" name="z" default=""/>
                <parameter left="GLfloat" right="" name="w" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setUniformValue" fullname="QGLShaderProgram::setUniformValue" href="qglshaderprogram.html#setUniformValue-26" location="qglshaderprogram.h" virtual="non" meta="plain" const="false" static="false" overload="true" overload-number="26" type="void" signature="setUniformValue(const char * name, GLint value)">
                <parameter left="const char *" right="" name="name" default=""/>
                <parameter left="GLint" right="" name="value" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setUniformValue" fullname="QGLShaderProgram::setUniformValue" href="qglshaderprogram.html#setUniformValue-27" location="qglshaderprogram.h" virtual="non" meta="plain" const="false" static="false" overload="true" overload-number="27" type="void" signature="setUniformValue(const char * name, GLuint value)">
                <parameter left="const char *" right="" name="name" default=""/>
                <parameter left="GLuint" right="" name="value" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setUniformValue" fullname="QGLShaderProgram::setUniformValue" href="qglshaderprogram.html#setUniformValue-51" location="qglshaderprogram.h" since="4.7" virtual="non" meta="plain" const="false" static="false" overload="true" overload-number="51" type="void" signature="setUniformValue(const char * name, const GLfloat[2][2] value)">
                <parameter left="const char *" right="" name="name" default=""/>
                <parameter left="const GLfloat[2][2]" right="" name="value" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setUniformValue" fullname="QGLShaderProgram::setUniformValue" href="qglshaderprogram.html#setUniformValue-52" location="qglshaderprogram.h" since="4.7" virtual="non" meta="plain" const="false" static="false" overload="true" overload-number="52" type="void" signature="setUniformValue(const char * name, const GLfloat[3][3] value)">
                <parameter left="const char *" right="" name="name" default=""/>
                <parameter left="const GLfloat[3][3]" right="" name="value" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setUniformValue" fullname="QGLShaderProgram::setUniformValue" href="qglshaderprogram.html#setUniformValue-53" location="qglshaderprogram.h" virtual="non" meta="plain" const="false" static="false" overload="true" overload-number="53" type="void" signature="setUniformValue(const char * name, const GLfloat[4][4] value)">
                <parameter left="const char *" right="" name="name" default=""/>
                <parameter left="const GLfloat[4][4]" right="" name="value" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setUniformValue" fullname="QGLShaderProgram::setUniformValue" href="qglshaderprogram.html#setUniformValue-34" location="qglshaderprogram.h" virtual="non" meta="plain" const="false" static="false" overload="true" overload-number="34" type="void" signature="setUniformValue(const char * name, const QColor &amp; color)">
                <parameter left="const char *" right="" name="name" default=""/>
                <parameter left="const QColor &amp;" right="" name="color" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setUniformValue" fullname="QGLShaderProgram::setUniformValue" href="qglshaderprogram.html#setUniformValue-39" location="qglshaderprogram.h" virtual="non" meta="plain" const="false" static="false" overload="true" overload-number="39" type="void" signature="setUniformValue(const char * name, const QMatrix2x2 &amp; value)">
                <parameter left="const char *" right="" name="name" default=""/>
                <parameter left="const QMatrix2x2 &amp;" right="" name="value" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setUniformValue" fullname="QGLShaderProgram::setUniformValue" href="qglshaderprogram.html#setUniformValue-40" location="qglshaderprogram.h" virtual="non" meta="plain" const="false" static="false" overload="true" overload-number="40" type="void" signature="setUniformValue(const char * name, const QMatrix2x3 &amp; value)">
                <parameter left="const char *" right="" name="name" default=""/>
                <parameter left="const QMatrix2x3 &amp;" right="" name="value" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setUniformValue" fullname="QGLShaderProgram::setUniformValue" href="qglshaderprogram.html#setUniformValue-41" location="qglshaderprogram.h" virtual="non" meta="plain" const="false" static="false" overload="true" overload-number="41" type="void" signature="setUniformValue(const char * name, const QMatrix2x4 &amp; value)">
                <parameter left="const char *" right="" name="name" default=""/>
                <parameter left="const QMatrix2x4 &amp;" right="" name="value" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setUniformValue" fullname="QGLShaderProgram::setUniformValue" href="qglshaderprogram.html#setUniformValue-42" location="qglshaderprogram.h" virtual="non" meta="plain" const="false" static="false" overload="true" overload-number="42" type="void" signature="setUniformValue(const char * name, const QMatrix3x2 &amp; value)">
                <parameter left="const char *" right="" name="name" default=""/>
                <parameter left="const QMatrix3x2 &amp;" right="" name="value" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setUniformValue" fullname="QGLShaderProgram::setUniformValue" href="qglshaderprogram.html#setUniformValue-43" location="qglshaderprogram.h" virtual="non" meta="plain" const="false" static="false" overload="true" overload-number="43" type="void" signature="setUniformValue(const char * name, const QMatrix3x3 &amp; value)">
                <parameter left="const char *" right="" name="name" default=""/>
                <parameter left="const QMatrix3x3 &amp;" right="" name="value" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setUniformValue" fullname="QGLShaderProgram::setUniformValue" href="qglshaderprogram.html#setUniformValue-44" location="qglshaderprogram.h" virtual="non" meta="plain" const="false" static="false" overload="true" overload-number="44" type="void" signature="setUniformValue(const char * name, const QMatrix3x4 &amp; value)">
                <parameter left="const char *" right="" name="name" default=""/>
                <parameter left="const QMatrix3x4 &amp;" right="" name="value" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setUniformValue" fullname="QGLShaderProgram::setUniformValue" href="qglshaderprogram.html#setUniformValue-45" location="qglshaderprogram.h" virtual="non" meta="plain" const="false" static="false" overload="true" overload-number="45" type="void" signature="setUniformValue(const char * name, const QMatrix4x2 &amp; value)">
                <parameter left="const char *" right="" name="name" default=""/>
                <parameter left="const QMatrix4x2 &amp;" right="" name="value" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setUniformValue" fullname="QGLShaderProgram::setUniformValue" href="qglshaderprogram.html#setUniformValue-46" location="qglshaderprogram.h" virtual="non" meta="plain" const="false" static="false" overload="true" overload-number="46" type="void" signature="setUniformValue(const char * name, const QMatrix4x3 &amp; value)">
                <parameter left="const char *" right="" name="name" default=""/>
                <parameter left="const QMatrix4x3 &amp;" right="" name="value" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setUniformValue" fullname="QGLShaderProgram::setUniformValue" href="qglshaderprogram.html#setUniformValue-47" location="qglshaderprogram.h" virtual="non" meta="plain" const="false" static="false" overload="true" overload-number="47" type="void" signature="setUniformValue(const char * name, const QMatrix4x4 &amp; value)">
                <parameter left="const char *" right="" name="name" default=""/>
                <parameter left="const QMatrix4x4 &amp;" right="" name="value" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setUniformValue" fullname="QGLShaderProgram::setUniformValue" href="qglshaderprogram.html#setUniformValue-35" location="qglshaderprogram.h" virtual="non" meta="plain" const="false" static="false" overload="true" overload-number="35" type="void" signature="setUniformValue(const char * name, const QPoint &amp; point)">
                <parameter left="const char *" right="" name="name" default=""/>
                <parameter left="const QPoint &amp;" right="" name="point" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setUniformValue" fullname="QGLShaderProgram::setUniformValue" href="qglshaderprogram.html#setUniformValue-36" location="qglshaderprogram.h" virtual="non" meta="plain" const="false" static="false" overload="true" overload-number="36" type="void" signature="setUniformValue(const char * name, const QPointF &amp; point)">
                <parameter left="const char *" right="" name="name" default=""/>
                <parameter left="const QPointF &amp;" right="" name="point" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setUniformValue" fullname="QGLShaderProgram::setUniformValue" href="qglshaderprogram.html#setUniformValue-37" location="qglshaderprogram.h" virtual="non" meta="plain" const="false" static="false" overload="true" overload-number="37" type="void" signature="setUniformValue(const char * name, const QSize &amp; size)">
                <parameter left="const char *" right="" name="name" default=""/>
                <parameter left="const QSize &amp;" right="" name="size" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setUniformValue" fullname="QGLShaderProgram::setUniformValue" href="qglshaderprogram.html#setUniformValue-38" location="qglshaderprogram.h" virtual="non" meta="plain" const="false" static="false" overload="true" overload-number="38" type="void" signature="setUniformValue(const char * name, const QSizeF &amp; size)">
                <parameter left="const char *" right="" name="name" default=""/>
                <parameter left="const QSizeF &amp;" right="" name="size" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setUniformValue" fullname="QGLShaderProgram::setUniformValue" href="qglshaderprogram.html#setUniformValue-54" location="qglshaderprogram.h" virtual="non" meta="plain" const="false" static="false" overload="true" overload-number="54" type="void" signature="setUniformValue(const char * name, const QTransform &amp; value)">
                <parameter left="const char *" right="" name="name" default=""/>
                <parameter left="const QTransform &amp;" right="" name="value" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setUniformValue" fullname="QGLShaderProgram::setUniformValue" href="qglshaderprogram.html#setUniformValue-31" location="qglshaderprogram.h" virtual="non" meta="plain" const="false" static="false" overload="true" overload-number="31" type="void" signature="setUniformValue(const char * name, const QVector2D &amp; value)">
                <parameter left="const char *" right="" name="name" default=""/>
                <parameter left="const QVector2D &amp;" right="" name="value" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setUniformValue" fullname="QGLShaderProgram::setUniformValue" href="qglshaderprogram.html#setUniformValue-32" location="qglshaderprogram.h" virtual="non" meta="plain" const="false" static="false" overload="true" overload-number="32" type="void" signature="setUniformValue(const char * name, const QVector3D &amp; value)">
                <parameter left="const char *" right="" name="name" default=""/>
                <parameter left="const QVector3D &amp;" right="" name="value" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setUniformValue" fullname="QGLShaderProgram::setUniformValue" href="qglshaderprogram.html#setUniformValue-33" location="qglshaderprogram.h" virtual="non" meta="plain" const="false" static="false" overload="true" overload-number="33" type="void" signature="setUniformValue(const char * name, const QVector4D &amp; value)">
                <parameter left="const char *" right="" name="name" default=""/>
                <parameter left="const QVector4D &amp;" right="" name="value" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setUniformValue" fullname="QGLShaderProgram::setUniformValue" href="qglshaderprogram.html#setUniformValue" location="qglshaderprogram.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setUniformValue(int location, GLfloat value)">
                <parameter left="int" right="" name="location" default=""/>
                <parameter left="GLfloat" right="" name="value" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setUniformValue" fullname="QGLShaderProgram::setUniformValue" href="qglshaderprogram.html#setUniformValue-4" location="qglshaderprogram.h" virtual="non" meta="plain" const="false" static="false" overload="true" overload-number="4" type="void" signature="setUniformValue(int location, GLfloat x, GLfloat y)">
                <parameter left="int" right="" name="location" default=""/>
                <parameter left="GLfloat" right="" name="x" default=""/>
                <parameter left="GLfloat" right="" name="y" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setUniformValue" fullname="QGLShaderProgram::setUniformValue" href="qglshaderprogram.html#setUniformValue-5" location="qglshaderprogram.h" virtual="non" meta="plain" const="false" static="false" overload="true" overload-number="5" type="void" signature="setUniformValue(int location, GLfloat x, GLfloat y, GLfloat z)">
                <parameter left="int" right="" name="location" default=""/>
                <parameter left="GLfloat" right="" name="x" default=""/>
                <parameter left="GLfloat" right="" name="y" default=""/>
                <parameter left="GLfloat" right="" name="z" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setUniformValue" fullname="QGLShaderProgram::setUniformValue" href="qglshaderprogram.html#setUniformValue-6" location="qglshaderprogram.h" virtual="non" meta="plain" const="false" static="false" overload="true" overload-number="6" type="void" signature="setUniformValue(int location, GLfloat x, GLfloat y, GLfloat z, GLfloat w)">
                <parameter left="int" right="" name="location" default=""/>
                <parameter left="GLfloat" right="" name="x" default=""/>
                <parameter left="GLfloat" right="" name="y" default=""/>
                <parameter left="GLfloat" right="" name="z" default=""/>
                <parameter left="GLfloat" right="" name="w" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setUniformValue" fullname="QGLShaderProgram::setUniformValue" href="qglshaderprogram.html#setUniformValue-2" location="qglshaderprogram.h" virtual="non" meta="plain" const="false" static="false" overload="true" overload-number="2" type="void" signature="setUniformValue(int location, GLint value)">
                <parameter left="int" right="" name="location" default=""/>
                <parameter left="GLint" right="" name="value" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setUniformValue" fullname="QGLShaderProgram::setUniformValue" href="qglshaderprogram.html#setUniformValue-3" location="qglshaderprogram.h" virtual="non" meta="plain" const="false" static="false" overload="true" overload-number="3" type="void" signature="setUniformValue(int location, GLuint value)">
                <parameter left="int" right="" name="location" default=""/>
                <parameter left="GLuint" right="" name="value" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setUniformValue" fullname="QGLShaderProgram::setUniformValue" href="qglshaderprogram.html#setUniformValue-48" location="qglshaderprogram.h" since="4.7" virtual="non" meta="plain" const="false" static="false" overload="true" overload-number="48" type="void" signature="setUniformValue(int location, const GLfloat[2][2] value)">
                <parameter left="int" right="" name="location" default=""/>
                <parameter left="const GLfloat[2][2]" right="" name="value" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setUniformValue" fullname="QGLShaderProgram::setUniformValue" href="qglshaderprogram.html#setUniformValue-49" location="qglshaderprogram.h" since="4.7" virtual="non" meta="plain" const="false" static="false" overload="true" overload-number="49" type="void" signature="setUniformValue(int location, const GLfloat[3][3] value)">
                <parameter left="int" right="" name="location" default=""/>
                <parameter left="const GLfloat[3][3]" right="" name="value" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setUniformValue" fullname="QGLShaderProgram::setUniformValue" href="qglshaderprogram.html#setUniformValue-50" location="qglshaderprogram.h" virtual="non" meta="plain" const="false" static="false" overload="true" overload-number="50" type="void" signature="setUniformValue(int location, const GLfloat[4][4] value)">
                <parameter left="int" right="" name="location" default=""/>
                <parameter left="const GLfloat[4][4]" right="" name="value" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setUniformValue" fullname="QGLShaderProgram::setUniformValue" href="qglshaderprogram.html#setUniformValue-10" location="qglshaderprogram.h" virtual="non" meta="plain" const="false" static="false" overload="true" overload-number="10" type="void" signature="setUniformValue(int location, const QColor &amp; color)">
                <parameter left="int" right="" name="location" default=""/>
                <parameter left="const QColor &amp;" right="" name="color" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setUniformValue" fullname="QGLShaderProgram::setUniformValue" href="qglshaderprogram.html#setUniformValue-15" location="qglshaderprogram.h" virtual="non" meta="plain" const="false" static="false" overload="true" overload-number="15" type="void" signature="setUniformValue(int location, const QMatrix2x2 &amp; value)">
                <parameter left="int" right="" name="location" default=""/>
                <parameter left="const QMatrix2x2 &amp;" right="" name="value" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setUniformValue" fullname="QGLShaderProgram::setUniformValue" href="qglshaderprogram.html#setUniformValue-16" location="qglshaderprogram.h" virtual="non" meta="plain" const="false" static="false" overload="true" overload-number="16" type="void" signature="setUniformValue(int location, const QMatrix2x3 &amp; value)">
                <parameter left="int" right="" name="location" default=""/>
                <parameter left="const QMatrix2x3 &amp;" right="" name="value" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setUniformValue" fullname="QGLShaderProgram::setUniformValue" href="qglshaderprogram.html#setUniformValue-17" location="qglshaderprogram.h" virtual="non" meta="plain" const="false" static="false" overload="true" overload-number="17" type="void" signature="setUniformValue(int location, const QMatrix2x4 &amp; value)">
                <parameter left="int" right="" name="location" default=""/>
                <parameter left="const QMatrix2x4 &amp;" right="" name="value" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setUniformValue" fullname="QGLShaderProgram::setUniformValue" href="qglshaderprogram.html#setUniformValue-18" location="qglshaderprogram.h" virtual="non" meta="plain" const="false" static="false" overload="true" overload-number="18" type="void" signature="setUniformValue(int location, const QMatrix3x2 &amp; value)">
                <parameter left="int" right="" name="location" default=""/>
                <parameter left="const QMatrix3x2 &amp;" right="" name="value" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setUniformValue" fullname="QGLShaderProgram::setUniformValue" href="qglshaderprogram.html#setUniformValue-19" location="qglshaderprogram.h" virtual="non" meta="plain" const="false" static="false" overload="true" overload-number="19" type="void" signature="setUniformValue(int location, const QMatrix3x3 &amp; value)">
                <parameter left="int" right="" name="location" default=""/>
                <parameter left="const QMatrix3x3 &amp;" right="" name="value" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setUniformValue" fullname="QGLShaderProgram::setUniformValue" href="qglshaderprogram.html#setUniformValue-20" location="qglshaderprogram.h" virtual="non" meta="plain" const="false" static="false" overload="true" overload-number="20" type="void" signature="setUniformValue(int location, const QMatrix3x4 &amp; value)">
                <parameter left="int" right="" name="location" default=""/>
                <parameter left="const QMatrix3x4 &amp;" right="" name="value" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setUniformValue" fullname="QGLShaderProgram::setUniformValue" href="qglshaderprogram.html#setUniformValue-21" location="qglshaderprogram.h" virtual="non" meta="plain" const="false" static="false" overload="true" overload-number="21" type="void" signature="setUniformValue(int location, const QMatrix4x2 &amp; value)">
                <parameter left="int" right="" name="location" default=""/>
                <parameter left="const QMatrix4x2 &amp;" right="" name="value" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setUniformValue" fullname="QGLShaderProgram::setUniformValue" href="qglshaderprogram.html#setUniformValue-22" location="qglshaderprogram.h" virtual="non" meta="plain" const="false" static="false" overload="true" overload-number="22" type="void" signature="setUniformValue(int location, const QMatrix4x3 &amp; value)">
                <parameter left="int" right="" name="location" default=""/>
                <parameter left="const QMatrix4x3 &amp;" right="" name="value" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setUniformValue" fullname="QGLShaderProgram::setUniformValue" href="qglshaderprogram.html#setUniformValue-23" location="qglshaderprogram.h" virtual="non" meta="plain" const="false" static="false" overload="true" overload-number="23" type="void" signature="setUniformValue(int location, const QMatrix4x4 &amp; value)">
                <parameter left="int" right="" name="location" default=""/>
                <parameter left="const QMatrix4x4 &amp;" right="" name="value" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setUniformValue" fullname="QGLShaderProgram::setUniformValue" href="qglshaderprogram.html#setUniformValue-11" location="qglshaderprogram.h" virtual="non" meta="plain" const="false" static="false" overload="true" overload-number="11" type="void" signature="setUniformValue(int location, const QPoint &amp; point)">
                <parameter left="int" right="" name="location" default=""/>
                <parameter left="const QPoint &amp;" right="" name="point" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setUniformValue" fullname="QGLShaderProgram::setUniformValue" href="qglshaderprogram.html#setUniformValue-12" location="qglshaderprogram.h" virtual="non" meta="plain" const="false" static="false" overload="true" overload-number="12" type="void" signature="setUniformValue(int location, const QPointF &amp; point)">
                <parameter left="int" right="" name="location" default=""/>
                <parameter left="const QPointF &amp;" right="" name="point" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setUniformValue" fullname="QGLShaderProgram::setUniformValue" href="qglshaderprogram.html#setUniformValue-13" location="qglshaderprogram.h" virtual="non" meta="plain" const="false" static="false" overload="true" overload-number="13" type="void" signature="setUniformValue(int location, const QSize &amp; size)">
                <parameter left="int" right="" name="location" default=""/>
                <parameter left="const QSize &amp;" right="" name="size" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setUniformValue" fullname="QGLShaderProgram::setUniformValue" href="qglshaderprogram.html#setUniformValue-14" location="qglshaderprogram.h" virtual="non" meta="plain" const="false" static="false" overload="true" overload-number="14" type="void" signature="setUniformValue(int location, const QSizeF &amp; size)">
                <parameter left="int" right="" name="location" default=""/>
                <parameter left="const QSizeF &amp;" right="" name="size" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setUniformValue" fullname="QGLShaderProgram::setUniformValue" href="qglshaderprogram.html#setUniformValue-24" location="qglshaderprogram.h" virtual="non" meta="plain" const="false" static="false" overload="true" overload-number="24" type="void" signature="setUniformValue(int location, const QTransform &amp; value)">
                <parameter left="int" right="" name="location" default=""/>
                <parameter left="const QTransform &amp;" right="" name="value" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setUniformValue" fullname="QGLShaderProgram::setUniformValue" href="qglshaderprogram.html#setUniformValue-7" location="qglshaderprogram.h" virtual="non" meta="plain" const="false" static="false" overload="true" overload-number="7" type="void" signature="setUniformValue(int location, const QVector2D &amp; value)">
                <parameter left="int" right="" name="location" default=""/>
                <parameter left="const QVector2D &amp;" right="" name="value" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setUniformValue" fullname="QGLShaderProgram::setUniformValue" href="qglshaderprogram.html#setUniformValue-8" location="qglshaderprogram.h" virtual="non" meta="plain" const="false" static="false" overload="true" overload-number="8" type="void" signature="setUniformValue(int location, const QVector3D &amp; value)">
                <parameter left="int" right="" name="location" default=""/>
                <parameter left="const QVector3D &amp;" right="" name="value" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setUniformValue" fullname="QGLShaderProgram::setUniformValue" href="qglshaderprogram.html#setUniformValue-9" location="qglshaderprogram.h" virtual="non" meta="plain" const="false" static="false" overload="true" overload-number="9" type="void" signature="setUniformValue(int location, const QVector4D &amp; value)">
                <parameter left="int" right="" name="location" default=""/>
                <parameter left="const QVector4D &amp;" right="" name="value" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setUniformValueArray" fullname="QGLShaderProgram::setUniformValueArray" href="qglshaderprogram.html#setUniformValueArray-18" location="qglshaderprogram.h" virtual="non" meta="plain" const="false" static="false" overload="true" overload-number="18" type="void" signature="setUniformValueArray(const char * name, const GLfloat * values, int count, int tupleSize)">
                <parameter left="const char *" right="" name="name" default=""/>
                <parameter left="const GLfloat *" right="" name="values" default=""/>
                <parameter left="int" right="" name="count" default=""/>
                <parameter left="int" right="" name="tupleSize" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setUniformValueArray" fullname="QGLShaderProgram::setUniformValueArray" href="qglshaderprogram.html#setUniformValueArray-16" location="qglshaderprogram.h" virtual="non" meta="plain" const="false" static="false" overload="true" overload-number="16" type="void" signature="setUniformValueArray(const char * name, const GLint * values, int count)">
                <parameter left="const char *" right="" name="name" default=""/>
                <parameter left="const GLint *" right="" name="values" default=""/>
                <parameter left="int" right="" name="count" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setUniformValueArray" fullname="QGLShaderProgram::setUniformValueArray" href="qglshaderprogram.html#setUniformValueArray-17" location="qglshaderprogram.h" virtual="non" meta="plain" const="false" static="false" overload="true" overload-number="17" type="void" signature="setUniformValueArray(const char * name, const GLuint * values, int count)">
                <parameter left="const char *" right="" name="name" default=""/>
                <parameter left="const GLuint *" right="" name="values" default=""/>
                <parameter left="int" right="" name="count" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setUniformValueArray" fullname="QGLShaderProgram::setUniformValueArray" href="qglshaderprogram.html#setUniformValueArray-22" location="qglshaderprogram.h" virtual="non" meta="plain" const="false" static="false" overload="true" overload-number="22" type="void" signature="setUniformValueArray(const char * name, const QMatrix2x2 * values, int count)">
                <parameter left="const char *" right="" name="name" default=""/>
                <parameter left="const QMatrix2x2 *" right="" name="values" default=""/>
                <parameter left="int" right="" name="count" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setUniformValueArray" fullname="QGLShaderProgram::setUniformValueArray" href="qglshaderprogram.html#setUniformValueArray-23" location="qglshaderprogram.h" virtual="non" meta="plain" const="false" static="false" overload="true" overload-number="23" type="void" signature="setUniformValueArray(const char * name, const QMatrix2x3 * values, int count)">
                <parameter left="const char *" right="" name="name" default=""/>
                <parameter left="const QMatrix2x3 *" right="" name="values" default=""/>
                <parameter left="int" right="" name="count" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setUniformValueArray" fullname="QGLShaderProgram::setUniformValueArray" href="qglshaderprogram.html#setUniformValueArray-24" location="qglshaderprogram.h" virtual="non" meta="plain" const="false" static="false" overload="true" overload-number="24" type="void" signature="setUniformValueArray(const char * name, const QMatrix2x4 * values, int count)">
                <parameter left="const char *" right="" name="name" default=""/>
                <parameter left="const QMatrix2x4 *" right="" name="values" default=""/>
                <parameter left="int" right="" name="count" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setUniformValueArray" fullname="QGLShaderProgram::setUniformValueArray" href="qglshaderprogram.html#setUniformValueArray-25" location="qglshaderprogram.h" virtual="non" meta="plain" const="false" static="false" overload="true" overload-number="25" type="void" signature="setUniformValueArray(const char * name, const QMatrix3x2 * values, int count)">
                <parameter left="const char *" right="" name="name" default=""/>
                <parameter left="const QMatrix3x2 *" right="" name="values" default=""/>
                <parameter left="int" right="" name="count" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setUniformValueArray" fullname="QGLShaderProgram::setUniformValueArray" href="qglshaderprogram.html#setUniformValueArray-26" location="qglshaderprogram.h" virtual="non" meta="plain" const="false" static="false" overload="true" overload-number="26" type="void" signature="setUniformValueArray(const char * name, const QMatrix3x3 * values, int count)">
                <parameter left="const char *" right="" name="name" default=""/>
                <parameter left="const QMatrix3x3 *" right="" name="values" default=""/>
                <parameter left="int" right="" name="count" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setUniformValueArray" fullname="QGLShaderProgram::setUniformValueArray" href="qglshaderprogram.html#setUniformValueArray-27" location="qglshaderprogram.h" virtual="non" meta="plain" const="false" static="false" overload="true" overload-number="27" type="void" signature="setUniformValueArray(const char * name, const QMatrix3x4 * values, int count)">
                <parameter left="const char *" right="" name="name" default=""/>
                <parameter left="const QMatrix3x4 *" right="" name="values" default=""/>
                <parameter left="int" right="" name="count" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setUniformValueArray" fullname="QGLShaderProgram::setUniformValueArray" href="qglshaderprogram.html#setUniformValueArray-28" location="qglshaderprogram.h" virtual="non" meta="plain" const="false" static="false" overload="true" overload-number="28" type="void" signature="setUniformValueArray(const char * name, const QMatrix4x2 * values, int count)">
                <parameter left="const char *" right="" name="name" default=""/>
                <parameter left="const QMatrix4x2 *" right="" name="values" default=""/>
                <parameter left="int" right="" name="count" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setUniformValueArray" fullname="QGLShaderProgram::setUniformValueArray" href="qglshaderprogram.html#setUniformValueArray-29" location="qglshaderprogram.h" virtual="non" meta="plain" const="false" static="false" overload="true" overload-number="29" type="void" signature="setUniformValueArray(const char * name, const QMatrix4x3 * values, int count)">
                <parameter left="const char *" right="" name="name" default=""/>
                <parameter left="const QMatrix4x3 *" right="" name="values" default=""/>
                <parameter left="int" right="" name="count" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setUniformValueArray" fullname="QGLShaderProgram::setUniformValueArray" href="qglshaderprogram.html#setUniformValueArray-30" location="qglshaderprogram.h" virtual="non" meta="plain" const="false" static="false" overload="true" overload-number="30" type="void" signature="setUniformValueArray(const char * name, const QMatrix4x4 * values, int count)">
                <parameter left="const char *" right="" name="name" default=""/>
                <parameter left="const QMatrix4x4 *" right="" name="values" default=""/>
                <parameter left="int" right="" name="count" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setUniformValueArray" fullname="QGLShaderProgram::setUniformValueArray" href="qglshaderprogram.html#setUniformValueArray-19" location="qglshaderprogram.h" virtual="non" meta="plain" const="false" static="false" overload="true" overload-number="19" type="void" signature="setUniformValueArray(const char * name, const QVector2D * values, int count)">
                <parameter left="const char *" right="" name="name" default=""/>
                <parameter left="const QVector2D *" right="" name="values" default=""/>
                <parameter left="int" right="" name="count" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setUniformValueArray" fullname="QGLShaderProgram::setUniformValueArray" href="qglshaderprogram.html#setUniformValueArray-20" location="qglshaderprogram.h" virtual="non" meta="plain" const="false" static="false" overload="true" overload-number="20" type="void" signature="setUniformValueArray(const char * name, const QVector3D * values, int count)">
                <parameter left="const char *" right="" name="name" default=""/>
                <parameter left="const QVector3D *" right="" name="values" default=""/>
                <parameter left="int" right="" name="count" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setUniformValueArray" fullname="QGLShaderProgram::setUniformValueArray" href="qglshaderprogram.html#setUniformValueArray-21" location="qglshaderprogram.h" virtual="non" meta="plain" const="false" static="false" overload="true" overload-number="21" type="void" signature="setUniformValueArray(const char * name, const QVector4D * values, int count)">
                <parameter left="const char *" right="" name="name" default=""/>
                <parameter left="const QVector4D *" right="" name="values" default=""/>
                <parameter left="int" right="" name="count" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setUniformValueArray" fullname="QGLShaderProgram::setUniformValueArray" href="qglshaderprogram.html#setUniformValueArray" location="qglshaderprogram.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setUniformValueArray(int location, const GLfloat * values, int count, int tupleSize)">
                <parameter left="int" right="" name="location" default=""/>
                <parameter left="const GLfloat *" right="" name="values" default=""/>
                <parameter left="int" right="" name="count" default=""/>
                <parameter left="int" right="" name="tupleSize" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setUniformValueArray" fullname="QGLShaderProgram::setUniformValueArray" href="qglshaderprogram.html#setUniformValueArray-2" location="qglshaderprogram.h" virtual="non" meta="plain" const="false" static="false" overload="true" overload-number="2" type="void" signature="setUniformValueArray(int location, const GLint * values, int count)">
                <parameter left="int" right="" name="location" default=""/>
                <parameter left="const GLint *" right="" name="values" default=""/>
                <parameter left="int" right="" name="count" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setUniformValueArray" fullname="QGLShaderProgram::setUniformValueArray" href="qglshaderprogram.html#setUniformValueArray-3" location="qglshaderprogram.h" virtual="non" meta="plain" const="false" static="false" overload="true" overload-number="3" type="void" signature="setUniformValueArray(int location, const GLuint * values, int count)">
                <parameter left="int" right="" name="location" default=""/>
                <parameter left="const GLuint *" right="" name="values" default=""/>
                <parameter left="int" right="" name="count" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setUniformValueArray" fullname="QGLShaderProgram::setUniformValueArray" href="qglshaderprogram.html#setUniformValueArray-7" location="qglshaderprogram.h" virtual="non" meta="plain" const="false" static="false" overload="true" overload-number="7" type="void" signature="setUniformValueArray(int location, const QMatrix2x2 * values, int count)">
                <parameter left="int" right="" name="location" default=""/>
                <parameter left="const QMatrix2x2 *" right="" name="values" default=""/>
                <parameter left="int" right="" name="count" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setUniformValueArray" fullname="QGLShaderProgram::setUniformValueArray" href="qglshaderprogram.html#setUniformValueArray-8" location="qglshaderprogram.h" virtual="non" meta="plain" const="false" static="false" overload="true" overload-number="8" type="void" signature="setUniformValueArray(int location, const QMatrix2x3 * values, int count)">
                <parameter left="int" right="" name="location" default=""/>
                <parameter left="const QMatrix2x3 *" right="" name="values" default=""/>
                <parameter left="int" right="" name="count" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setUniformValueArray" fullname="QGLShaderProgram::setUniformValueArray" href="qglshaderprogram.html#setUniformValueArray-9" location="qglshaderprogram.h" virtual="non" meta="plain" const="false" static="false" overload="true" overload-number="9" type="void" signature="setUniformValueArray(int location, const QMatrix2x4 * values, int count)">
                <parameter left="int" right="" name="location" default=""/>
                <parameter left="const QMatrix2x4 *" right="" name="values" default=""/>
                <parameter left="int" right="" name="count" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setUniformValueArray" fullname="QGLShaderProgram::setUniformValueArray" href="qglshaderprogram.html#setUniformValueArray-10" location="qglshaderprogram.h" virtual="non" meta="plain" const="false" static="false" overload="true" overload-number="10" type="void" signature="setUniformValueArray(int location, const QMatrix3x2 * values, int count)">
                <parameter left="int" right="" name="location" default=""/>
                <parameter left="const QMatrix3x2 *" right="" name="values" default=""/>
                <parameter left="int" right="" name="count" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setUniformValueArray" fullname="QGLShaderProgram::setUniformValueArray" href="qglshaderprogram.html#setUniformValueArray-11" location="qglshaderprogram.h" virtual="non" meta="plain" const="false" static="false" overload="true" overload-number="11" type="void" signature="setUniformValueArray(int location, const QMatrix3x3 * values, int count)">
                <parameter left="int" right="" name="location" default=""/>
                <parameter left="const QMatrix3x3 *" right="" name="values" default=""/>
                <parameter left="int" right="" name="count" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setUniformValueArray" fullname="QGLShaderProgram::setUniformValueArray" href="qglshaderprogram.html#setUniformValueArray-12" location="qglshaderprogram.h" virtual="non" meta="plain" const="false" static="false" overload="true" overload-number="12" type="void" signature="setUniformValueArray(int location, const QMatrix3x4 * values, int count)">
                <parameter left="int" right="" name="location" default=""/>
                <parameter left="const QMatrix3x4 *" right="" name="values" default=""/>
                <parameter left="int" right="" name="count" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setUniformValueArray" fullname="QGLShaderProgram::setUniformValueArray" href="qglshaderprogram.html#setUniformValueArray-13" location="qglshaderprogram.h" virtual="non" meta="plain" const="false" static="false" overload="true" overload-number="13" type="void" signature="setUniformValueArray(int location, const QMatrix4x2 * values, int count)">
                <parameter left="int" right="" name="location" default=""/>
                <parameter left="const QMatrix4x2 *" right="" name="values" default=""/>
                <parameter left="int" right="" name="count" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setUniformValueArray" fullname="QGLShaderProgram::setUniformValueArray" href="qglshaderprogram.html#setUniformValueArray-14" location="qglshaderprogram.h" virtual="non" meta="plain" const="false" static="false" overload="true" overload-number="14" type="void" signature="setUniformValueArray(int location, const QMatrix4x3 * values, int count)">
                <parameter left="int" right="" name="location" default=""/>
                <parameter left="const QMatrix4x3 *" right="" name="values" default=""/>
                <parameter left="int" right="" name="count" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setUniformValueArray" fullname="QGLShaderProgram::setUniformValueArray" href="qglshaderprogram.html#setUniformValueArray-15" location="qglshaderprogram.h" virtual="non" meta="plain" const="false" static="false" overload="true" overload-number="15" type="void" signature="setUniformValueArray(int location, const QMatrix4x4 * values, int count)">
                <parameter left="int" right="" name="location" default=""/>
                <parameter left="const QMatrix4x4 *" right="" name="values" default=""/>
                <parameter left="int" right="" name="count" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setUniformValueArray" fullname="QGLShaderProgram::setUniformValueArray" href="qglshaderprogram.html#setUniformValueArray-4" location="qglshaderprogram.h" virtual="non" meta="plain" const="false" static="false" overload="true" overload-number="4" type="void" signature="setUniformValueArray(int location, const QVector2D * values, int count)">
                <parameter left="int" right="" name="location" default=""/>
                <parameter left="const QVector2D *" right="" name="values" default=""/>
                <parameter left="int" right="" name="count" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setUniformValueArray" fullname="QGLShaderProgram::setUniformValueArray" href="qglshaderprogram.html#setUniformValueArray-5" location="qglshaderprogram.h" virtual="non" meta="plain" const="false" static="false" overload="true" overload-number="5" type="void" signature="setUniformValueArray(int location, const QVector3D * values, int count)">
                <parameter left="int" right="" name="location" default=""/>
                <parameter left="const QVector3D *" right="" name="values" default=""/>
                <parameter left="int" right="" name="count" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setUniformValueArray" fullname="QGLShaderProgram::setUniformValueArray" href="qglshaderprogram.html#setUniformValueArray-6" location="qglshaderprogram.h" virtual="non" meta="plain" const="false" static="false" overload="true" overload-number="6" type="void" signature="setUniformValueArray(int location, const QVector4D * values, int count)">
                <parameter left="int" right="" name="location" default=""/>
                <parameter left="const QVector4D *" right="" name="values" default=""/>
                <parameter left="int" right="" name="count" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="shaders" fullname="QGLShaderProgram::shaders" href="qglshaderprogram.html#shaders" location="qglshaderprogram.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QList&lt;QGLShader *&gt;" signature="shaders() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="uniformLocation" fullname="QGLShaderProgram::uniformLocation" href="qglshaderprogram.html#uniformLocation-2" location="qglshaderprogram.h" virtual="non" meta="plain" const="true" static="false" overload="true" overload-number="2" type="int" signature="uniformLocation(const QByteArray &amp; name) const">
                <parameter left="const QByteArray &amp;" right="" name="name" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="uniformLocation" fullname="QGLShaderProgram::uniformLocation" href="qglshaderprogram.html#uniformLocation-3" location="qglshaderprogram.h" virtual="non" meta="plain" const="true" static="false" overload="true" overload-number="3" type="int" signature="uniformLocation(const QString &amp; name) const">
                <parameter left="const QString &amp;" right="" name="name" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="uniformLocation" fullname="QGLShaderProgram::uniformLocation" href="qglshaderprogram.html#uniformLocation" location="qglshaderprogram.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="int" signature="uniformLocation(const char * name) const">
                <parameter left="const char *" right="" name="name" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="~QGLShaderProgram" fullname="QGLShaderProgram::~QGLShaderProgram" href="qglshaderprogram.html#dtor.QGLShaderProgram" location="qglshaderprogram.h" virtual="impure" meta="destructor" const="false" static="false" overload="false" type="" signature="~QGLShaderProgram()"/>
        </class>
        <page access="public" status="commendable" name="qtopengl-index.html" href="qtopengl-index.html" subtype="page" title="Qt OpenGL" fulltitle="Qt OpenGL" subtitle="" location="qtopengl-index.qdoc" module="qtopengl"/>
        <page access="public" status="commendable" name="QtOpenGL" href="qtopengl-module.html" subtype="module" title="Qt OpenGL C++ classes" fulltitle="Qt OpenGL C++ classes" subtitle="" location="qtopengl-module.qdoc" groups="modules,technology-apis"/>
    </namespace>
    <page access="public" status="commendable" name="examples-widgets-opengl" href="examples-widgets-opengl.html" subtype="group" seen="true" members="2dpainting,cube,framebufferobject2,grabber,hellogl,overpainting,pbuffers,pbuffers2,samplebuffers,textures,all-examples" title="OpenGL Examples from the Qt OpenGL module" fulltitle="OpenGL Examples from the Qt OpenGL module" subtitle="" location="qtopengl-examples.qdoc" groups="all-examples"/>
</INDEX>
